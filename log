Class: CLASS OBJECT name:MyKrosstalk modality:FINAL visibility:public superTypes:[com.rnett.krosstalk.Krosstalk; com.rnett.krosstalk.KrosstalkServer<com.rnett.krosstalk.ktor.server.KtorServerScope>; com.rnett.krosstalk.Scopes]
  annotations:
    OptIn(markerClass = [CLASS_REFERENCE 'CLASS IR_EXTERNAL_DECLARATION_STUB ANNOTATION_CLASS name:ExperimentalStdlibApi modality:FINAL visibility:public superTypes:[kotlin.Annotation]' type=kotlin.reflect.KClass<kotlin.ExperimentalStdlibApi>])
    KrosstalkHost
  $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.rnett.krosstalk.MyKrosstalk
  CONSTRUCTOR visibility:private <> () returnType:com.rnett.krosstalk.MyKrosstalk [primary]
    BLOCK_BODY
      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in com.rnett.krosstalk.Krosstalk'
      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS OBJECT name:MyKrosstalk modality:FINAL visibility:public superTypes:[com.rnett.krosstalk.Krosstalk; com.rnett.krosstalk.KrosstalkServer<com.rnett.krosstalk.ktor.server.KtorServerScope>; com.rnett.krosstalk.Scopes]'
  PROPERTY name:serialization visibility:public modality:OPEN [val]
    FIELD PROPERTY_BACKING_FIELD name:serialization type:com.rnett.krosstalk.KotlinxSerializationHandler visibility:private [final]
      EXPRESSION_BODY
        GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:KotlinxSerializationHandler modality:FINAL visibility:public superTypes:[com.rnett.krosstalk.SerializationHandler]' type=com.rnett.krosstalk.KotlinxSerializationHandler
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-serialization> visibility:public modality:OPEN <> ($this:com.rnett.krosstalk.MyKrosstalk) returnType:com.rnett.krosstalk.KotlinxSerializationHandler
      correspondingProperty: PROPERTY name:serialization visibility:public modality:OPEN [val]
      overridden:
        public abstract fun <get-serialization> (): com.rnett.krosstalk.SerializationHandler declared in com.rnett.krosstalk.Krosstalk
      $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.MyKrosstalk
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun <get-serialization> (): com.rnett.krosstalk.KotlinxSerializationHandler declared in com.rnett.krosstalk.MyKrosstalk'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:serialization type:com.rnett.krosstalk.KotlinxSerializationHandler visibility:private [final]' type=com.rnett.krosstalk.KotlinxSerializationHandler origin=null
            receiver: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk.<get-serialization>' type=com.rnett.krosstalk.MyKrosstalk origin=null
  PROPERTY name:server visibility:public modality:OPEN [val]
    FIELD PROPERTY_BACKING_FIELD name:server type:com.rnett.krosstalk.ktor.server.KtorServer visibility:private [final]
      EXPRESSION_BODY
        GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:KtorServer modality:FINAL visibility:public superTypes:[com.rnett.krosstalk.ServerHandler<com.rnett.krosstalk.ktor.server.KtorServerScope>]' type=com.rnett.krosstalk.ktor.server.KtorServer
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-server> visibility:public modality:OPEN <> ($this:com.rnett.krosstalk.MyKrosstalk) returnType:com.rnett.krosstalk.ktor.server.KtorServer
      correspondingProperty: PROPERTY name:server visibility:public modality:OPEN [val]
      overridden:
        public abstract fun <get-server> (): com.rnett.krosstalk.ServerHandler<S of com.rnett.krosstalk.KrosstalkServer> declared in com.rnett.krosstalk.KrosstalkServer
      $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.MyKrosstalk
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun <get-server> (): com.rnett.krosstalk.ktor.server.KtorServer declared in com.rnett.krosstalk.MyKrosstalk'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:server type:com.rnett.krosstalk.ktor.server.KtorServer visibility:private [final]' type=com.rnett.krosstalk.ktor.server.KtorServer origin=null
            receiver: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk.<get-server>' type=com.rnett.krosstalk.MyKrosstalk origin=null
  PROPERTY name:auth visibility:public modality:OPEN [delegated,val]
    FIELD PROPERTY_DELEGATE name:auth$delegate type:kotlin.properties.ReadOnlyProperty<com.rnett.krosstalk.Krosstalk, com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>> visibility:private [final]
      EXPRESSION_BODY
        CALL 'public final fun provideDelegate (thisRef: com.rnett.krosstalk.Krosstalk, prop: kotlin.reflect.KProperty<*>): kotlin.properties.ReadOnlyProperty<com.rnett.krosstalk.Krosstalk, S of com.rnett.krosstalk.ScopeAdder> [operator] declared in com.rnett.krosstalk.ScopeAdder' type=kotlin.properties.ReadOnlyProperty<com.rnett.krosstalk.Krosstalk, com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>> origin=null
          $this: CALL 'public open fun scope <S1> (server: S1 of com.rnett.krosstalk.MyKrosstalk.scope): com.rnett.krosstalk.ScopeAdder<com.rnett.krosstalk.ServerScopeHolder<S1 of com.rnett.krosstalk.MyKrosstalk.scope>> [fake_override] declared in com.rnett.krosstalk.MyKrosstalk' type=com.rnett.krosstalk.ScopeAdder<com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>> origin=null
            <S1>: com.rnett.krosstalk.ktor.server.KtorServerAuth
            $this: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk' type=com.rnett.krosstalk.MyKrosstalk origin=null
            server: CONSTRUCTOR_CALL 'public constructor <init> (accounts: kotlin.collections.Map<kotlin.String, kotlin.String>) [primary] declared in com.rnett.krosstalk.ktor.server.KtorServerAuth' type=com.rnett.krosstalk.ktor.server.KtorServerAuth origin=null
              accounts: CALL 'public final fun mapOf <K, V> (pair: kotlin.Pair<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf>): kotlin.collections.Map<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf> declared in kotlin.collections.MapsKt' type=kotlin.collections.Map<kotlin.String, kotlin.String> origin=null
                <K>: kotlin.String
                <V>: kotlin.String
                pair: CALL 'public final fun to <A, B> (that: B of kotlin.TuplesKt.to): kotlin.Pair<A of kotlin.TuplesKt.to, B of kotlin.TuplesKt.to> declared in kotlin.TuplesKt' type=kotlin.Pair<kotlin.String, kotlin.String> origin=null
                  <A>: kotlin.String
                  <B>: kotlin.String
                  $receiver: CONST String type=kotlin.String value="username"
                  that: CONST String type=kotlin.String value="password"
          thisRef: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk' type=com.rnett.krosstalk.MyKrosstalk origin=null
          prop: PROPERTY_REFERENCE 'public open auth: com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth> [delegated,val]' field=null getter='public open fun <get-auth> (): com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth> declared in com.rnett.krosstalk.MyKrosstalk' setter=null type=kotlin.reflect.KProperty1<com.rnett.krosstalk.MyKrosstalk, com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>> origin=PROPERTY_REFERENCE_FOR_DELEGATE
    FUN DELEGATED_PROPERTY_ACCESSOR name:<get-auth> visibility:public modality:OPEN <> ($this:com.rnett.krosstalk.MyKrosstalk) returnType:com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>
      correspondingProperty: PROPERTY name:auth visibility:public modality:OPEN [delegated,val]
      overridden:
        public abstract fun <get-auth> (): com.rnett.krosstalk.ScopeHolder declared in com.rnett.krosstalk.Scopes
      $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.MyKrosstalk
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun <get-auth> (): com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth> declared in com.rnett.krosstalk.MyKrosstalk'
          CALL 'public abstract fun getValue (thisRef: T of kotlin.properties.ReadOnlyProperty, property: kotlin.reflect.KProperty<*>): V of kotlin.properties.ReadOnlyProperty [operator] declared in kotlin.properties.ReadOnlyProperty' type=com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth> origin=null
            $this: GET_FIELD 'FIELD PROPERTY_DELEGATE name:auth$delegate type:kotlin.properties.ReadOnlyProperty<com.rnett.krosstalk.Krosstalk, com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>> visibility:private [final]' type=kotlin.properties.ReadOnlyProperty<com.rnett.krosstalk.Krosstalk, com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>> origin=null
              receiver: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk.<get-auth>' type=com.rnett.krosstalk.MyKrosstalk origin=null
            thisRef: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk.<get-auth>' type=com.rnett.krosstalk.MyKrosstalk origin=null
            property: PROPERTY_REFERENCE 'public open auth: com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth> [delegated,val]' field=null getter='public open fun <get-auth> (): com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth> declared in com.rnett.krosstalk.MyKrosstalk' setter=null type=kotlin.reflect.KProperty1<com.rnett.krosstalk.MyKrosstalk, com.rnett.krosstalk.ServerScopeHolder<com.rnett.krosstalk.ktor.server.KtorServerAuth>> origin=PROPERTY_REFERENCE_FOR_DELEGATE
  ANONYMOUS_INITIALIZER isStatic=false
    annotations:
      OptIn(markerClass = [CLASS_REFERENCE 'CLASS IR_EXTERNAL_DECLARATION_STUB ANNOTATION_CLASS name:ExperimentalStdlibApi modality:FINAL visibility:public superTypes:[kotlin.Annotation]' type=kotlin.reflect.KClass<kotlin.ExperimentalStdlibApi>])
      KrosstalkHost
    BLOCK_BODY
      CALL 'public final fun addMethod <T> (key: kotlin.String, method: kotlin.reflect.KCallable<*>, types: com.rnett.krosstalk.MethodTypes, vararg requiredScopes: kotlin.String, call: kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, T of com.rnett.krosstalk.MyKrosstalk.addMethod>): kotlin.Unit [fake_override] declared in com.rnett.krosstalk.MyKrosstalk' type=kotlin.Unit origin=null
        <T>: kotlin.Unit
        $this: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk' type=com.rnett.krosstalk.MyKrosstalk origin=null
        key: CONST String type=kotlin.String value="doThing"
        method: FUNCTION_REFERENCE 'public final fun doThing (data: com.rnett.krosstalk.Data): kotlin.collections.List<kotlin.String> [suspend] declared in com.rnett.krosstalk' type=kotlin.reflect.KSuspendFunction1<com.rnett.krosstalk.Data, kotlin.collections.List<kotlin.String>> origin=null reflectionTarget=<same>
        types: CONSTRUCTOR_CALL 'public constructor <init> (paramTypes: kotlin.collections.Map<kotlin.String, kotlin.reflect.KType>, resultType: kotlin.reflect.KType, instanceReceiverType: kotlin.reflect.KType?, extensionReceiverType: kotlin.reflect.KType?) [primary] declared in com.rnett.krosstalk.MethodTypes' type=com.rnett.krosstalk.MethodTypes origin=null
          paramTypes: CALL 'public final fun mapOf <K, V> (pair: kotlin.Pair<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf>): kotlin.collections.Map<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf> declared in kotlin.collections.MapsKt' type=kotlin.collections.Map<kotlin.String, kotlin.reflect.KType> origin=null
            <K>: kotlin.String
            <V>: kotlin.reflect.KType
            pair: CALL 'public final fun to <A, B> (that: B of kotlin.TuplesKt.to): kotlin.Pair<A of kotlin.TuplesKt.to, B of kotlin.TuplesKt.to> declared in kotlin.TuplesKt' type=kotlin.Pair<kotlin.String, kotlin.reflect.KType> origin=null
              <A>: kotlin.String
              <B>: kotlin.reflect.KType
              $receiver: CONST String type=kotlin.String value="data"
              that: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType [inline] declared in kotlin.reflect.TypeOfKt' type=kotlin.reflect.KType origin=null
                <T>: com.rnett.krosstalk.Data
          resultType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType [inline] declared in kotlin.reflect.TypeOfKt' type=kotlin.reflect.KType origin=null
            <T>: kotlin.collections.List<kotlin.String>
        call: FUN_EXPR type=kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, kotlin.Unit> origin=LAMBDA
          FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:kotlin.collections.Map<kotlin.String, *>) returnType:kotlin.Unit [suspend]
            VALUE_PARAMETER name:it index:0 type:kotlin.collections.Map<kotlin.String, *>
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.collections.Map<kotlin.String, *>): kotlin.Unit [suspend] declared in com.rnett.krosstalk.MyKrosstalk'
                GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
      CALL 'public final fun addMethod <T> (key: kotlin.String, method: kotlin.reflect.KCallable<*>, types: com.rnett.krosstalk.MethodTypes, vararg requiredScopes: kotlin.String, call: kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, T of com.rnett.krosstalk.MyKrosstalk.addMethod>): kotlin.Unit [fake_override] declared in com.rnett.krosstalk.MyKrosstalk' type=kotlin.Unit origin=null
        <T>: kotlin.Unit
        $this: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk' type=com.rnett.krosstalk.MyKrosstalk origin=null
        key: CONST String type=kotlin.String value="doAuthThing"
        method: FUNCTION_REFERENCE 'public final fun doAuthThing (num: kotlin.Int): com.rnett.krosstalk.Data [suspend] declared in com.rnett.krosstalk' type=kotlin.reflect.KSuspendFunction1<kotlin.Int, com.rnett.krosstalk.Data> origin=null reflectionTarget=<same>
        types: CONSTRUCTOR_CALL 'public constructor <init> (paramTypes: kotlin.collections.Map<kotlin.String, kotlin.reflect.KType>, resultType: kotlin.reflect.KType, instanceReceiverType: kotlin.reflect.KType?, extensionReceiverType: kotlin.reflect.KType?) [primary] declared in com.rnett.krosstalk.MethodTypes' type=com.rnett.krosstalk.MethodTypes origin=null
          paramTypes: CALL 'public final fun mapOf <K, V> (pair: kotlin.Pair<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf>): kotlin.collections.Map<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf> declared in kotlin.collections.MapsKt' type=kotlin.collections.Map<kotlin.String, kotlin.reflect.KType> origin=null
            <K>: kotlin.String
            <V>: kotlin.reflect.KType
            pair: CALL 'public final fun to <A, B> (that: B of kotlin.TuplesKt.to): kotlin.Pair<A of kotlin.TuplesKt.to, B of kotlin.TuplesKt.to> declared in kotlin.TuplesKt' type=kotlin.Pair<kotlin.String, kotlin.reflect.KType> origin=null
              <A>: kotlin.String
              <B>: kotlin.reflect.KType
              $receiver: CONST String type=kotlin.String value="num"
              that: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType [inline] declared in kotlin.reflect.TypeOfKt' type=kotlin.reflect.KType origin=null
                <T>: kotlin.Int
          resultType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType [inline] declared in kotlin.reflect.TypeOfKt' type=kotlin.reflect.KType origin=null
            <T>: com.rnett.krosstalk.Data
        requiredScopes: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
          CONST String type=kotlin.String value="auth"
        call: FUN_EXPR type=kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, kotlin.Unit> origin=LAMBDA
          FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:kotlin.collections.Map<kotlin.String, *>) returnType:kotlin.Unit [suspend]
            VALUE_PARAMETER name:it index:0 type:kotlin.collections.Map<kotlin.String, *>
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.collections.Map<kotlin.String, *>): kotlin.Unit [suspend] declared in com.rnett.krosstalk.MyKrosstalk'
                GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
      CALL 'public final fun addMethod <T> (key: kotlin.String, method: kotlin.reflect.KCallable<*>, types: com.rnett.krosstalk.MethodTypes, vararg requiredScopes: kotlin.String, call: kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, T of com.rnett.krosstalk.MyKrosstalk.addMethod>): kotlin.Unit [fake_override] declared in com.rnett.krosstalk.MyKrosstalk' type=kotlin.Unit origin=null
        <T>: kotlin.Unit
        $this: GET_VAR '<this>: com.rnett.krosstalk.MyKrosstalk declared in com.rnett.krosstalk.MyKrosstalk' type=com.rnett.krosstalk.MyKrosstalk origin=null
        key: CONST String type=kotlin.String value="doExt"
        method: FUNCTION_REFERENCE 'public final fun doExt (other: kotlin.Int): kotlin.Double [suspend] declared in com.rnett.krosstalk' type=kotlin.reflect.KSuspendFunction2<kotlin.Int, kotlin.Int, kotlin.Double> origin=null reflectionTarget=<same>
        types: CONSTRUCTOR_CALL 'public constructor <init> (paramTypes: kotlin.collections.Map<kotlin.String, kotlin.reflect.KType>, resultType: kotlin.reflect.KType, instanceReceiverType: kotlin.reflect.KType?, extensionReceiverType: kotlin.reflect.KType?) [primary] declared in com.rnett.krosstalk.MethodTypes' type=com.rnett.krosstalk.MethodTypes origin=null
          paramTypes: CALL 'public final fun mapOf <K, V> (pair: kotlin.Pair<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf>): kotlin.collections.Map<K of kotlin.collections.MapsKt.mapOf, V of kotlin.collections.MapsKt.mapOf> declared in kotlin.collections.MapsKt' type=kotlin.collections.Map<kotlin.String, kotlin.reflect.KType> origin=null
            <K>: kotlin.String
            <V>: kotlin.reflect.KType
            pair: CALL 'public final fun to <A, B> (that: B of kotlin.TuplesKt.to): kotlin.Pair<A of kotlin.TuplesKt.to, B of kotlin.TuplesKt.to> declared in kotlin.TuplesKt' type=kotlin.Pair<kotlin.String, kotlin.reflect.KType> origin=null
              <A>: kotlin.String
              <B>: kotlin.reflect.KType
              $receiver: CONST String type=kotlin.String value="other"
              that: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType [inline] declared in kotlin.reflect.TypeOfKt' type=kotlin.reflect.KType origin=null
                <T>: kotlin.Int
          resultType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType [inline] declared in kotlin.reflect.TypeOfKt' type=kotlin.reflect.KType origin=null
            <T>: kotlin.Double
          extensionReceiverType: CALL 'public final fun typeOf <T> (): kotlin.reflect.KType [inline] declared in kotlin.reflect.TypeOfKt' type=kotlin.reflect.KType origin=null
            <T>: kotlin.Int
        call: FUN_EXPR type=kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, kotlin.Unit> origin=LAMBDA
          FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:kotlin.collections.Map<kotlin.String, *>) returnType:kotlin.Unit [suspend]
            VALUE_PARAMETER name:it index:0 type:kotlin.collections.Map<kotlin.String, *>
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.collections.Map<kotlin.String, *>): kotlin.Unit [suspend] declared in com.rnett.krosstalk.MyKrosstalk'
                GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
  FUN FAKE_OVERRIDE name:addMethod visibility:public modality:FINAL <T> ($this:com.rnett.krosstalk.Krosstalk, key:kotlin.String, method:kotlin.reflect.KCallable<*>, types:com.rnett.krosstalk.MethodTypes, requiredScopes:kotlin.Array<out kotlin.String>, call:kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, T of com.rnett.krosstalk.MyKrosstalk.addMethod>) returnType:kotlin.Unit [fake_override]
    overridden:
      public final fun addMethod <T> (key: kotlin.String, method: kotlin.reflect.KCallable<*>, types: com.rnett.krosstalk.MethodTypes, vararg requiredScopes: kotlin.String, call: kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, T of com.rnett.krosstalk.Krosstalk.addMethod>): kotlin.Unit declared in com.rnett.krosstalk.Krosstalk
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?]
    $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.Krosstalk
    VALUE_PARAMETER name:key index:0 type:kotlin.String
    VALUE_PARAMETER name:method index:1 type:kotlin.reflect.KCallable<*>
    VALUE_PARAMETER name:types index:2 type:com.rnett.krosstalk.MethodTypes
    VALUE_PARAMETER name:requiredScopes index:3 type:kotlin.Array<out kotlin.String> varargElementType:kotlin.String [vararg]
    VALUE_PARAMETER name:call index:4 type:kotlin.coroutines.SuspendFunction1<kotlin.collections.Map<kotlin.String, *>, T of com.rnett.krosstalk.MyKrosstalk.addMethod>
  FUN FAKE_OVERRIDE name:closeAllScopes visibility:public modality:FINAL <> ($this:com.rnett.krosstalk.Krosstalk) returnType:kotlin.Unit [fake_override]
    overridden:
      public final fun closeAllScopes (): kotlin.Unit declared in com.rnett.krosstalk.Krosstalk
    $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.Krosstalk
  PROPERTY FAKE_OVERRIDE name:methods visibility:public modality:FINAL [fake_override,val]
    FUN FAKE_OVERRIDE name:<get-methods> visibility:public modality:FINAL <> ($this:com.rnett.krosstalk.Krosstalk) returnType:kotlin.collections.Map<kotlin.String, com.rnett.krosstalk.MethodDefinition<*>> [fake_override]
      correspondingProperty: PROPERTY FAKE_OVERRIDE name:methods visibility:public modality:FINAL [fake_override,val]
      overridden:
        public final fun <get-methods> (): kotlin.collections.Map<kotlin.String, com.rnett.krosstalk.MethodDefinition<*>> declared in com.rnett.krosstalk.Krosstalk
      $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.Krosstalk
  FUN FAKE_OVERRIDE name:scope visibility:public modality:OPEN <S1> ($this:com.rnett.krosstalk.KrosstalkServer<com.rnett.krosstalk.ktor.server.KtorServerScope>, server:S1 of com.rnett.krosstalk.MyKrosstalk.scope) returnType:com.rnett.krosstalk.ScopeAdder<com.rnett.krosstalk.ServerScopeHolder<S1 of com.rnett.krosstalk.MyKrosstalk.scope>> [fake_override]
    overridden:
      public open fun scope <S1> (server: S1 of com.rnett.krosstalk.KrosstalkServer.scope): com.rnett.krosstalk.ScopeAdder<com.rnett.krosstalk.ServerScopeHolder<S1 of com.rnett.krosstalk.KrosstalkServer.scope>> declared in com.rnett.krosstalk.KrosstalkServer
    TYPE_PARAMETER name:S1 index:0 variance: superTypes:[com.rnett.krosstalk.ktor.server.KtorServerScope]
    $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.KrosstalkServer<com.rnett.krosstalk.ktor.server.KtorServerScope>
    VALUE_PARAMETER name:server index:0 type:S1 of com.rnett.krosstalk.MyKrosstalk.scope
  PROPERTY FAKE_OVERRIDE name:endpointName visibility:public modality:OPEN [fake_override,val]
    FUN FAKE_OVERRIDE name:<get-endpointName> visibility:public modality:OPEN <> ($this:com.rnett.krosstalk.Krosstalk) returnType:kotlin.String [fake_override]
      correspondingProperty: PROPERTY FAKE_OVERRIDE name:endpointName visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open fun <get-endpointName> (): kotlin.String declared in com.rnett.krosstalk.Krosstalk
      $this: VALUE_PARAMETER name:<this> type:com.rnett.krosstalk.Krosstalk
  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
    overridden:
      public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in com.rnett.krosstalk.Krosstalk
      public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in com.rnett.krosstalk.KrosstalkServer
      public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in com.rnett.krosstalk.Scopes
    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    VALUE_PARAMETER name:other index:0 type:kotlin.Any?
  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
    overridden:
      public open fun hashCode (): kotlin.Int [fake_override] declared in com.rnett.krosstalk.Krosstalk
      public open fun hashCode (): kotlin.Int [fake_override] declared in com.rnett.krosstalk.KrosstalkServer
      public open fun hashCode (): kotlin.Int [fake_override] declared in com.rnett.krosstalk.Scopes
    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
    overridden:
      public open fun toString (): kotlin.String [fake_override] declared in com.rnett.krosstalk.Krosstalk
      public open fun toString (): kotlin.String [fake_override] declared in com.rnett.krosstalk.KrosstalkServer
      public open fun toString (): kotlin.String [fake_override] declared in com.rnett.krosstalk.Scopes
    $this: VALUE_PARAMETER name:<this> type:kotlin.Any

