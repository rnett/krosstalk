[{"name":"abstract val server: ServerHandler<S>","description":"com.rnett.krosstalk.server.KrosstalkServer.server","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server/-krosstalk-server/server.html","searchKeys":["server","abstract val server: ServerHandler<S>","com.rnett.krosstalk.server.KrosstalkServer.server"]},{"name":"fun <S : ServerScope<*>, K : Krosstalk, KrosstalkServer<S>> K.scopesAsType(scopes: Iterable<Scope>): List<S>","description":"com.rnett.krosstalk.server.plugin.scopesAsType","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server.plugin/scopes-as-type.html","searchKeys":["scopesAsType","fun <S : ServerScope<*>, K : Krosstalk, KrosstalkServer<S>> K.scopesAsType(scopes: Iterable<Scope>): List<S>","com.rnett.krosstalk.server.plugin.scopesAsType"]},{"name":"interface KrosstalkServer<S : ServerScope<*>>","description":"com.rnett.krosstalk.server.KrosstalkServer","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server/-krosstalk-server/index.html","searchKeys":["KrosstalkServer","interface KrosstalkServer<S : ServerScope<*>>","com.rnett.krosstalk.server.KrosstalkServer"]},{"name":"interface ServerHandler<S : ServerScope<*>>","description":"com.rnett.krosstalk.server.plugin.ServerHandler","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server.plugin/-server-handler/index.html","searchKeys":["ServerHandler","interface ServerHandler<S : ServerScope<*>>","com.rnett.krosstalk.server.plugin.ServerHandler"]},{"name":"operator fun <T : ServerScope<S>, S> T.invoke(serverData: S): ScopeInstance<T>","description":"com.rnett.krosstalk.server.invoke","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server/invoke.html","searchKeys":["invoke","operator fun <T : ServerScope<S>, S> T.invoke(serverData: S): ScopeInstance<T>","com.rnett.krosstalk.server.invoke"]},{"name":"suspend fun <K : Krosstalk, KrosstalkServer<*>> K.handle(serverUrl: String, method: MethodDefinition<*>, requestHeaders: Headers, urlArguments: Map<String, String>, body: ByteArray, scopes: WantedScopes, handleException: (Throwable) -> Unit = { throw it }, responder: Responder)","description":"com.rnett.krosstalk.server.plugin.handle","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server.plugin/handle.html","searchKeys":["handle","suspend fun <K : Krosstalk, KrosstalkServer<*>> K.handle(serverUrl: String, method: MethodDefinition<*>, requestHeaders: Headers, urlArguments: Map<String, String>, body: ByteArray, scopes: WantedScopes, handleException: (Throwable) -> Unit = { throw it }, responder: Responder)","com.rnett.krosstalk.server.plugin.handle"]},{"name":"val <S : ServerScope<*>, K : Krosstalk, KrosstalkServer<S>> K.serverScopes: List<S>","description":"com.rnett.krosstalk.server.plugin.serverScopes","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server.plugin/server-scopes.html","searchKeys":["serverScopes","val <S : ServerScope<*>, K : Krosstalk, KrosstalkServer<S>> K.serverScopes: List<S>","com.rnett.krosstalk.server.plugin.serverScopes"]},{"name":"val <T : ServerScope<S>, S> ScopeInstance<T>.value: S","description":"com.rnett.krosstalk.server.value","location":"core/krosstalk-server/-krosstalk -server/com.rnett.krosstalk.server/value.html","searchKeys":["value","val <T : ServerScope<S>, S> ScopeInstance<T>.value: S","com.rnett.krosstalk.server.value"]},{"name":"abstract class ArgumentSerializationHandler<S>(transformer: SerializedFormatTransformer<S>) : BaseSerializationHandler<S> ","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serialization-handler/index.html","searchKeys":["ArgumentSerializationHandler","abstract class ArgumentSerializationHandler<S>(transformer: SerializedFormatTransformer<S>) : BaseSerializationHandler<S> ","com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler"]},{"name":"abstract class BaseSerializationHandler<S>(transformer: SerializedFormatTransformer<S>) : SerializationHandler<S> ","description":"com.rnett.krosstalk.serialization.plugin.BaseSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-base-serialization-handler/index.html","searchKeys":["BaseSerializationHandler","abstract class BaseSerializationHandler<S>(transformer: SerializedFormatTransformer<S>) : SerializationHandler<S> ","com.rnett.krosstalk.serialization.plugin.BaseSerializationHandler"]},{"name":"abstract class Krosstalk","description":"com.rnett.krosstalk.Krosstalk","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/index.html","searchKeys":["Krosstalk","abstract class Krosstalk","com.rnett.krosstalk.Krosstalk"]},{"name":"abstract fun <T : ServerScope<D>, D> getOptional(scope: T): D?","description":"com.rnett.krosstalk.server.plugin.WantedScopes.getOptional","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-wanted-scopes/get-optional.html","searchKeys":["getOptional","abstract fun <T : ServerScope<D>, D> getOptional(scope: T): D?","com.rnett.krosstalk.server.plugin.WantedScopes.getOptional"]},{"name":"abstract fun <T : ServerScope<D>, D> getOrElse(scope: T, default: D): D","description":"com.rnett.krosstalk.server.plugin.WantedScopes.getOrElse","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-wanted-scopes/get-or-else.html","searchKeys":["getOrElse","abstract fun <T : ServerScope<D>, D> getOrElse(scope: T, default: D): D","com.rnett.krosstalk.server.plugin.WantedScopes.getOrElse"]},{"name":"abstract fun deserialize(data: S): T","description":"com.rnett.krosstalk.serialization.plugin.Serializer.deserialize","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serializer/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(data: S): T","com.rnett.krosstalk.serialization.plugin.Serializer.deserialize"]},{"name":"abstract fun deserializeArguments(arguments: S): Map<String, S>","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.deserializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","abstract fun deserializeArguments(arguments: S): Map<String, S>","com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.deserializeArguments"]},{"name":"abstract fun deserializeArguments(arguments: S, serializers: ArgumentSerializers<S>): Map<String, *>","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler.deserializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","abstract fun deserializeArguments(arguments: S, serializers: ArgumentSerializers<S>): Map<String, *>","com.rnett.krosstalk.serialization.plugin.SerializationHandler.deserializeArguments"]},{"name":"abstract fun fromByteArray(data: ByteArray): S","description":"com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.fromByteArray","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialized-format-transformer/from-byte-array.html","searchKeys":["fromByteArray","abstract fun fromByteArray(data: ByteArray): S","com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.fromByteArray"]},{"name":"abstract fun fromString(data: String): S","description":"com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.fromString","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialized-format-transformer/from-string.html","searchKeys":["fromString","abstract fun fromString(data: String): S","com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.fromString"]},{"name":"abstract fun getException(): KrosstalkException","description":"com.rnett.krosstalk.KrosstalkResult.Failure.getException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-failure/get-exception.html","searchKeys":["getException","abstract fun getException(): KrosstalkException","com.rnett.krosstalk.KrosstalkResult.Failure.getException"]},{"name":"abstract fun getSerializer(type: KType): Serializer<*, S>","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler.getSerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/get-serializer.html","searchKeys":["getSerializer","abstract fun getSerializer(type: KType): Serializer<*, S>","com.rnett.krosstalk.serialization.plugin.SerializationHandler.getSerializer"]},{"name":"abstract fun serialize(data: T): S","description":"com.rnett.krosstalk.serialization.plugin.Serializer.serialize","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serializer/serialize.html","searchKeys":["serialize","abstract fun serialize(data: T): S","com.rnett.krosstalk.serialization.plugin.Serializer.serialize"]},{"name":"abstract fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<S>): S","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler.serializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","abstract fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<S>): S","com.rnett.krosstalk.serialization.plugin.SerializationHandler.serializeArguments"]},{"name":"abstract fun serializeArguments(serializedArguments: Map<String, S>): S","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.serializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","abstract fun serializeArguments(serializedArguments: Map<String, S>): S","com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.serializeArguments"]},{"name":"abstract fun toByteArray(data: S): ByteArray","description":"com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.toByteArray","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialized-format-transformer/to-byte-array.html","searchKeys":["toByteArray","abstract fun toByteArray(data: S): ByteArray","com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.toByteArray"]},{"name":"abstract fun toImmutable(): ImmutableWantedScopes","description":"com.rnett.krosstalk.server.plugin.WantedScopes.toImmutable","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-wanted-scopes/to-immutable.html","searchKeys":["toImmutable","abstract fun toImmutable(): ImmutableWantedScopes","com.rnett.krosstalk.server.plugin.WantedScopes.toImmutable"]},{"name":"abstract fun toMap(): Map<ServerScope<*>, Any?>","description":"com.rnett.krosstalk.server.plugin.WantedScopes.toMap","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-wanted-scopes/to-map.html","searchKeys":["toMap","abstract fun toMap(): Map<ServerScope<*>, Any?>","com.rnett.krosstalk.server.plugin.WantedScopes.toMap"]},{"name":"abstract fun toString(data: S): String","description":"com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.toString","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialized-format-transformer/to-string.html","searchKeys":["toString","abstract fun toString(data: S): String","com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer.toString"]},{"name":"abstract operator fun <T : ServerScope<D>, D> get(scope: T): D","description":"com.rnett.krosstalk.server.plugin.WantedScopes.get","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-wanted-scopes/get.html","searchKeys":["get","abstract operator fun <T : ServerScope<D>, D> get(scope: T): D","com.rnett.krosstalk.server.plugin.WantedScopes.get"]},{"name":"abstract val scope: T","description":"com.rnett.krosstalk.ScopeInstance.scope","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-scope-instance/scope.html","searchKeys":["scope","abstract val scope: T","com.rnett.krosstalk.ScopeInstance.scope"]},{"name":"abstract val serialization: SerializationHandler<*>","description":"com.rnett.krosstalk.Krosstalk.serialization","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/serialization.html","searchKeys":["serialization","abstract val serialization: SerializationHandler<*>","com.rnett.krosstalk.Krosstalk.serialization"]},{"name":"abstract val transformer: SerializedFormatTransformer<S>","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler.transformer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/transformer.html","searchKeys":["transformer","abstract val transformer: SerializedFormatTransformer<S>","com.rnett.krosstalk.serialization.plugin.SerializationHandler.transformer"]},{"name":"annotation class EmptyBody","description":"com.rnett.krosstalk.annotations.EmptyBody","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-empty-body/index.html","searchKeys":["EmptyBody","annotation class EmptyBody","com.rnett.krosstalk.annotations.EmptyBody"]},{"name":"annotation class ExplicitResult(includeStacktrace: Boolean, propagateServerExceptions: Boolean)","description":"com.rnett.krosstalk.annotations.ExplicitResult","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-explicit-result/index.html","searchKeys":["ExplicitResult","annotation class ExplicitResult(includeStacktrace: Boolean, propagateServerExceptions: Boolean)","com.rnett.krosstalk.annotations.ExplicitResult"]},{"name":"annotation class KrosstalkEndpoint(endpoint: String, httpMethod: String, contentType: String)","description":"com.rnett.krosstalk.annotations.KrosstalkEndpoint","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-endpoint/index.html","searchKeys":["KrosstalkEndpoint","annotation class KrosstalkEndpoint(endpoint: String, httpMethod: String, contentType: String)","com.rnett.krosstalk.annotations.KrosstalkEndpoint"]},{"name":"annotation class KrosstalkMethod(klass: KClass<out Krosstalk>, noParamHash: Boolean)","description":"com.rnett.krosstalk.annotations.KrosstalkMethod","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-method/index.html","searchKeys":["KrosstalkMethod","annotation class KrosstalkMethod(klass: KClass<out Krosstalk>, noParamHash: Boolean)","com.rnett.krosstalk.annotations.KrosstalkMethod"]},{"name":"annotation class Optional","description":"com.rnett.krosstalk.annotations.Optional","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-optional/index.html","searchKeys":["Optional","annotation class Optional","com.rnett.krosstalk.annotations.Optional"]},{"name":"annotation class PassObjects(returnToo: Boolean)","description":"com.rnett.krosstalk.annotations.PassObjects","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-pass-objects/index.html","searchKeys":["PassObjects","annotation class PassObjects(returnToo: Boolean)","com.rnett.krosstalk.annotations.PassObjects"]},{"name":"annotation class RequestHeaders","description":"com.rnett.krosstalk.annotations.RequestHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-request-headers/index.html","searchKeys":["RequestHeaders","annotation class RequestHeaders","com.rnett.krosstalk.annotations.RequestHeaders"]},{"name":"annotation class RespondWithHeaders","description":"com.rnett.krosstalk.annotations.RespondWithHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-respond-with-headers/index.html","searchKeys":["RespondWithHeaders","annotation class RespondWithHeaders","com.rnett.krosstalk.annotations.RespondWithHeaders"]},{"name":"annotation class ServerURL","description":"com.rnett.krosstalk.annotations.ServerURL","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-server-u-r-l/index.html","searchKeys":["ServerURL","annotation class ServerURL","com.rnett.krosstalk.annotations.ServerURL"]},{"name":"class ArgumentSerializers<S>(map: Map<String, Serializer<*, S>>)","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/index.html","searchKeys":["ArgumentSerializers","class ArgumentSerializers<S>(map: Map<String, Serializer<*, S>>)","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers"]},{"name":"class CallFromClientSideException : KrosstalkException.CompilerError","description":"com.rnett.krosstalk.CallFromClientSideException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-call-from-client-side-exception/index.html","searchKeys":["CallFromClientSideException","class CallFromClientSideException : KrosstalkException.CompilerError","com.rnett.krosstalk.CallFromClientSideException"]},{"name":"class ImmutableWantedScopes : WantedScopes","description":"com.rnett.krosstalk.server.plugin.ImmutableWantedScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-immutable-wanted-scopes/index.html","searchKeys":["ImmutableWantedScopes","class ImmutableWantedScopes : WantedScopes","com.rnett.krosstalk.server.plugin.ImmutableWantedScopes"]},{"name":"class MissingArgumentException constructor(methodName: String, subMessage: String) : KrosstalkException","description":"com.rnett.krosstalk.MissingArgumentException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-argument-exception/index.html","searchKeys":["MissingArgumentException","class MissingArgumentException constructor(methodName: String, subMessage: String) : KrosstalkException","com.rnett.krosstalk.MissingArgumentException"]},{"name":"class MissingCompilerPluginException : KrosstalkException.CompilerError","description":"com.rnett.krosstalk.MissingCompilerPluginException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-compiler-plugin-exception/index.html","searchKeys":["MissingCompilerPluginException","class MissingCompilerPluginException : KrosstalkException.CompilerError","com.rnett.krosstalk.MissingCompilerPluginException"]},{"name":"class MissingMethodException : KrosstalkException.CompilerError","description":"com.rnett.krosstalk.MissingMethodException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-method-exception/index.html","searchKeys":["MissingMethodException","class MissingMethodException : KrosstalkException.CompilerError","com.rnett.krosstalk.MissingMethodException"]},{"name":"class MissingScopeException : KrosstalkException","description":"com.rnett.krosstalk.server.MissingScopeException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server/-missing-scope-exception/index.html","searchKeys":["MissingScopeException","class MissingScopeException : KrosstalkException","com.rnett.krosstalk.server.MissingScopeException"]},{"name":"class MissingSerializerException constructor(argument: String, known: Set<String>, url: Boolean) : KrosstalkException","description":"com.rnett.krosstalk.serialization.MissingSerializerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-missing-serializer-exception/index.html","searchKeys":["MissingSerializerException","class MissingSerializerException constructor(argument: String, known: Set<String>, url: Boolean) : KrosstalkException","com.rnett.krosstalk.serialization.MissingSerializerException"]},{"name":"class MutableWantedScopes : WantedScopes","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/index.html","searchKeys":["MutableWantedScopes","class MutableWantedScopes : WantedScopes","com.rnett.krosstalk.server.plugin.MutableWantedScopes"]},{"name":"class ResultHttpErrorException(httpError: KrosstalkResult.HttpError) : KrosstalkException","description":"com.rnett.krosstalk.ResultHttpErrorException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-result-http-error-exception/index.html","searchKeys":["ResultHttpErrorException","class ResultHttpErrorException(httpError: KrosstalkResult.HttpError) : KrosstalkException","com.rnett.krosstalk.ResultHttpErrorException"]},{"name":"class ResultServerExceptionException(exception: KrosstalkResult.ServerException) : KrosstalkException","description":"com.rnett.krosstalk.ResultServerExceptionException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-result-server-exception-exception/index.html","searchKeys":["ResultServerExceptionException","class ResultServerExceptionException(exception: KrosstalkResult.ServerException) : KrosstalkException","com.rnett.krosstalk.ResultServerExceptionException"]},{"name":"class ServerDefault<out T>","description":"com.rnett.krosstalk.ServerDefault","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-server-default/index.html","searchKeys":["ServerDefault","class ServerDefault<out T>","com.rnett.krosstalk.ServerDefault"]},{"name":"class UnrealizedServerDefaultException constructor : KrosstalkException","description":"com.rnett.krosstalk.UnrealizedServerDefaultException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-unrealized-server-default-exception/index.html","searchKeys":["UnrealizedServerDefaultException","class UnrealizedServerDefaultException constructor : KrosstalkException","com.rnett.krosstalk.UnrealizedServerDefaultException"]},{"name":"class WrongArgumentTypeException constructor(methodName: String, subMessage: String) : KrosstalkException","description":"com.rnett.krosstalk.WrongArgumentTypeException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-wrong-argument-type-exception/index.html","searchKeys":["WrongArgumentTypeException","class WrongArgumentTypeException constructor(methodName: String, subMessage: String) : KrosstalkException","com.rnett.krosstalk.WrongArgumentTypeException"]},{"name":"const val byteArrayContentType: String","description":"com.rnett.krosstalk.serialization.plugin.byteArrayContentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/byte-array-content-type.html","searchKeys":["byteArrayContentType","const val byteArrayContentType: String","com.rnett.krosstalk.serialization.plugin.byteArrayContentType"]},{"name":"const val stringContentType: String","description":"com.rnett.krosstalk.serialization.plugin.stringContentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/string-content-type.html","searchKeys":["stringContentType","const val stringContentType: String","com.rnett.krosstalk.serialization.plugin.stringContentType"]},{"name":"data class HttpError(statusCode: Int, message: String?) : KrosstalkResult<Nothing> , KrosstalkResult.Failure","description":"com.rnett.krosstalk.KrosstalkResult.HttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-http-error/index.html","searchKeys":["HttpError","data class HttpError(statusCode: Int, message: String?) : KrosstalkResult<Nothing> , KrosstalkResult.Failure","com.rnett.krosstalk.KrosstalkResult.HttpError"]},{"name":"data class KotlinxBinarySerializationHandler(format: BinaryFormat) : ArgumentSerializationHandler<ByteArray> ","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/index.html","searchKeys":["KotlinxBinarySerializationHandler","data class KotlinxBinarySerializationHandler(format: BinaryFormat) : ArgumentSerializationHandler<ByteArray> ","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler"]},{"name":"data class KotlinxBinarySerializer<T>(serializer: KSerializer<T>, format: BinaryFormat) : Serializer<T, ByteArray> ","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/index.html","searchKeys":["KotlinxBinarySerializer","data class KotlinxBinarySerializer<T>(serializer: KSerializer<T>, format: BinaryFormat) : Serializer<T, ByteArray> ","com.rnett.krosstalk.serialization.KotlinxBinarySerializer"]},{"name":"data class KotlinxJsonObjectSerializationHandler(format: Json) : BaseSerializationHandler<String> ","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/index.html","searchKeys":["KotlinxJsonObjectSerializationHandler","data class KotlinxJsonObjectSerializationHandler(format: Json) : BaseSerializationHandler<String> ","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler"]},{"name":"data class KotlinxStringSerializationHandler(format: StringFormat) : ArgumentSerializationHandler<String> ","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/index.html","searchKeys":["KotlinxStringSerializationHandler","data class KotlinxStringSerializationHandler(format: StringFormat) : ArgumentSerializationHandler<String> ","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler"]},{"name":"data class KotlinxStringSerializer<T>(serializer: KSerializer<T>, format: StringFormat) : Serializer<T, String> ","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/index.html","searchKeys":["KotlinxStringSerializer","data class KotlinxStringSerializer<T>(serializer: KSerializer<T>, format: StringFormat) : Serializer<T, String> ","com.rnett.krosstalk.serialization.KotlinxStringSerializer"]},{"name":"data class MethodDefinition<T> constructor(name: String, endpoint: Endpoint, httpMethod: String, contentType: String?, requiredScopes: Set<Scope>, optionalScopes: Set<Scope>, useExplicitResult: Boolean, includeStacktrace: Boolean, propagateServerExceptions: Boolean, optionalParameters: Set<String>, serverDefaultParameters: Set<String>, objectParameters: Map<String, *>, returnObject: Any?, outerWithHeaders: Boolean, innerWithHeaders: Boolean, requestHeadersParam: String?, serverUrlParam: String?, types: MethodTypes, serialization: MethodSerialization, call: MethodCaller<T>)","description":"com.rnett.krosstalk.MethodDefinition","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/index.html","searchKeys":["MethodDefinition","data class MethodDefinition<T> constructor(name: String, endpoint: Endpoint, httpMethod: String, contentType: String?, requiredScopes: Set<Scope>, optionalScopes: Set<Scope>, useExplicitResult: Boolean, includeStacktrace: Boolean, propagateServerExceptions: Boolean, optionalParameters: Set<String>, serverDefaultParameters: Set<String>, objectParameters: Map<String, *>, returnObject: Any?, outerWithHeaders: Boolean, innerWithHeaders: Boolean, requestHeadersParam: String?, serverUrlParam: String?, types: MethodTypes, serialization: MethodSerialization, call: MethodCaller<T>)","com.rnett.krosstalk.MethodDefinition"]},{"name":"data class MethodSerialization","description":"com.rnett.krosstalk.serialization.MethodSerialization","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-serialization/index.html","searchKeys":["MethodSerialization","data class MethodSerialization","com.rnett.krosstalk.serialization.MethodSerialization"]},{"name":"data class MethodTypes(paramTypes: Map<String, KType>, resultType: KType?)","description":"com.rnett.krosstalk.serialization.MethodTypes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-types/index.html","searchKeys":["MethodTypes","data class MethodTypes(paramTypes: Map<String, KType>, resultType: KType?)","com.rnett.krosstalk.serialization.MethodTypes"]},{"name":"data class ServerException : KrosstalkResult<Nothing> , KrosstalkResult.Failure","description":"com.rnett.krosstalk.KrosstalkResult.ServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/index.html","searchKeys":["ServerException","data class ServerException : KrosstalkResult<Nothing> , KrosstalkResult.Failure","com.rnett.krosstalk.KrosstalkResult.ServerException"]},{"name":"data class Success<out T> constructor(value: T) : KrosstalkResult<T> ","description":"com.rnett.krosstalk.KrosstalkResult.Success","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-success/index.html","searchKeys":["Success","data class Success<out T> constructor(value: T) : KrosstalkResult<T> ","com.rnett.krosstalk.KrosstalkResult.Success"]},{"name":"data class WithHeaders<out T>(value: T, headers: Headers)","description":"com.rnett.krosstalk.WithHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-with-headers/index.html","searchKeys":["WithHeaders","data class WithHeaders<out T>(value: T, headers: Headers)","com.rnett.krosstalk.WithHeaders"]},{"name":"fun <S> ArgumentSerializationHandler(transformer: SerializedFormatTransformer<S>)","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.ArgumentSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serialization-handler/-argument-serialization-handler.html","searchKeys":["ArgumentSerializationHandler","fun <S> ArgumentSerializationHandler(transformer: SerializedFormatTransformer<S>)","com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.ArgumentSerializationHandler"]},{"name":"fun <S> ArgumentSerializers(map: Map<String, Serializer<*, S>>)","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.ArgumentSerializers","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/-argument-serializers.html","searchKeys":["ArgumentSerializers","fun <S> ArgumentSerializers(map: Map<String, Serializer<*, S>>)","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.ArgumentSerializers"]},{"name":"fun <S> BaseSerializationHandler(transformer: SerializedFormatTransformer<S>)","description":"com.rnett.krosstalk.serialization.plugin.BaseSerializationHandler.BaseSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-base-serialization-handler/-base-serialization-handler.html","searchKeys":["BaseSerializationHandler","fun <S> BaseSerializationHandler(transformer: SerializedFormatTransformer<S>)","com.rnett.krosstalk.serialization.plugin.BaseSerializationHandler.BaseSerializationHandler"]},{"name":"fun <T> KotlinxBinarySerializer(serializer: KSerializer<T>, format: BinaryFormat)","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.KotlinxBinarySerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/-kotlinx-binary-serializer.html","searchKeys":["KotlinxBinarySerializer","fun <T> KotlinxBinarySerializer(serializer: KSerializer<T>, format: BinaryFormat)","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.KotlinxBinarySerializer"]},{"name":"fun <T> KotlinxStringSerializer(serializer: KSerializer<T>, format: StringFormat)","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.KotlinxStringSerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/-kotlinx-string-serializer.html","searchKeys":["KotlinxStringSerializer","fun <T> KotlinxStringSerializer(serializer: KSerializer<T>, format: StringFormat)","com.rnett.krosstalk.serialization.KotlinxStringSerializer.KotlinxStringSerializer"]},{"name":"fun <T> deserializeArgument(key: String, value: S): T","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.deserializeArgument","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/deserialize-argument.html","searchKeys":["deserializeArgument","fun <T> deserializeArgument(key: String, value: S): T","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.deserializeArgument"]},{"name":"fun <T> serializeArgument(key: String, value: T): S","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.serializeArgument","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/serialize-argument.html","searchKeys":["serializeArgument","fun <T> serializeArgument(key: String, value: T): S","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.serializeArgument"]},{"name":"fun <out T> Success(value: T)","description":"com.rnett.krosstalk.KrosstalkResult.Success.Success","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-success/-success.html","searchKeys":["Success","fun <out T> Success(value: T)","com.rnett.krosstalk.KrosstalkResult.Success.Success"]},{"name":"fun <out T> WithHeaders(value: T, headers: Headers = emptyMap())","description":"com.rnett.krosstalk.WithHeaders.WithHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-with-headers/-with-headers.html","searchKeys":["WithHeaders","fun <out T> WithHeaders(value: T, headers: Headers = emptyMap())","com.rnett.krosstalk.WithHeaders.WithHeaders"]},{"name":"fun EmptyBody()","description":"com.rnett.krosstalk.annotations.EmptyBody.EmptyBody","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-empty-body/-empty-body.html","searchKeys":["EmptyBody","fun EmptyBody()","com.rnett.krosstalk.annotations.EmptyBody.EmptyBody"]},{"name":"fun ExplicitResult(includeStacktrace: Boolean = false, propagateServerExceptions: Boolean = true)","description":"com.rnett.krosstalk.annotations.ExplicitResult.ExplicitResult","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-explicit-result/-explicit-result.html","searchKeys":["ExplicitResult","fun ExplicitResult(includeStacktrace: Boolean = false, propagateServerExceptions: Boolean = true)","com.rnett.krosstalk.annotations.ExplicitResult.ExplicitResult"]},{"name":"fun HttpError(statusCode: Int, message: String? = null)","description":"com.rnett.krosstalk.KrosstalkResult.HttpError.HttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-http-error/-http-error.html","searchKeys":["HttpError","fun HttpError(statusCode: Int, message: String? = null)","com.rnett.krosstalk.KrosstalkResult.HttpError.HttpError"]},{"name":"fun ImmutableWantedScopes()","description":"com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.ImmutableWantedScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-immutable-wanted-scopes/-immutable-wanted-scopes.html","searchKeys":["ImmutableWantedScopes","fun ImmutableWantedScopes()","com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.ImmutableWantedScopes"]},{"name":"fun KotlinxBinarySerializationHandler(format: BinaryFormat)","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.KotlinxBinarySerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/-kotlinx-binary-serialization-handler.html","searchKeys":["KotlinxBinarySerializationHandler","fun KotlinxBinarySerializationHandler(format: BinaryFormat)","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.KotlinxBinarySerializationHandler"]},{"name":"fun KotlinxJsonObjectSerializationHandler(format: Json)","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.KotlinxJsonObjectSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/-kotlinx-json-object-serialization-handler.html","searchKeys":["KotlinxJsonObjectSerializationHandler","fun KotlinxJsonObjectSerializationHandler(format: Json)","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.KotlinxJsonObjectSerializationHandler"]},{"name":"fun KotlinxStringSerializationHandler(format: StringFormat)","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.KotlinxStringSerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/-kotlinx-string-serialization-handler.html","searchKeys":["KotlinxStringSerializationHandler","fun KotlinxStringSerializationHandler(format: StringFormat)","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.KotlinxStringSerializationHandler"]},{"name":"fun Krosstalk()","description":"com.rnett.krosstalk.Krosstalk.Krosstalk","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/-krosstalk.html","searchKeys":["Krosstalk","fun Krosstalk()","com.rnett.krosstalk.Krosstalk.Krosstalk"]},{"name":"fun KrosstalkEndpoint(endpoint: String = defaultEndpoint, httpMethod: String = defaultEndpointHttpMethod, contentType: String = \"\")","description":"com.rnett.krosstalk.annotations.KrosstalkEndpoint.KrosstalkEndpoint","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-endpoint/-krosstalk-endpoint.html","searchKeys":["KrosstalkEndpoint","fun KrosstalkEndpoint(endpoint: String = defaultEndpoint, httpMethod: String = defaultEndpointHttpMethod, contentType: String = \"\")","com.rnett.krosstalk.annotations.KrosstalkEndpoint.KrosstalkEndpoint"]},{"name":"fun KrosstalkMethod(klass: KClass<out Krosstalk>, noParamHash: Boolean = false)","description":"com.rnett.krosstalk.annotations.KrosstalkMethod.KrosstalkMethod","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-method/-krosstalk-method.html","searchKeys":["KrosstalkMethod","fun KrosstalkMethod(klass: KClass<out Krosstalk>, noParamHash: Boolean = false)","com.rnett.krosstalk.annotations.KrosstalkMethod.KrosstalkMethod"]},{"name":"fun MethodDefinition(name: String, endpoint: Endpoint, httpMethod: String, contentType: String?, requiredScopes: Set<Scope>, optionalScopes: Set<Scope>, useExplicitResult: Boolean, includeStacktrace: Boolean, propagateServerExceptions: Boolean, optionalParameters: Set<String>, serverDefaultParameters: Set<String>, objectParameters: Map<String, *>, returnObject: Any?, outerWithHeaders: Boolean, innerWithHeaders: Boolean, requestHeadersParam: String?, serverUrlParam: String?, types: MethodTypes, serialization: MethodSerialization, call: MethodCaller<T>)","description":"com.rnett.krosstalk.MethodDefinition.MethodDefinition","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/-method-definition.html","searchKeys":["MethodDefinition","fun MethodDefinition(name: String, endpoint: Endpoint, httpMethod: String, contentType: String?, requiredScopes: Set<Scope>, optionalScopes: Set<Scope>, useExplicitResult: Boolean, includeStacktrace: Boolean, propagateServerExceptions: Boolean, optionalParameters: Set<String>, serverDefaultParameters: Set<String>, objectParameters: Map<String, *>, returnObject: Any?, outerWithHeaders: Boolean, innerWithHeaders: Boolean, requestHeadersParam: String?, serverUrlParam: String?, types: MethodTypes, serialization: MethodSerialization, call: MethodCaller<T>)","com.rnett.krosstalk.MethodDefinition.MethodDefinition"]},{"name":"fun MethodTypes(paramTypes: Map<String, KType>, resultType: KType?)","description":"com.rnett.krosstalk.serialization.MethodTypes.MethodTypes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-types/-method-types.html","searchKeys":["MethodTypes","fun MethodTypes(paramTypes: Map<String, KType>, resultType: KType?)","com.rnett.krosstalk.serialization.MethodTypes.MethodTypes"]},{"name":"fun MissingArgumentException(methodName: String, subMessage: String)","description":"com.rnett.krosstalk.MissingArgumentException.MissingArgumentException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-argument-exception/-missing-argument-exception.html","searchKeys":["MissingArgumentException","fun MissingArgumentException(methodName: String, subMessage: String)","com.rnett.krosstalk.MissingArgumentException.MissingArgumentException"]},{"name":"fun MissingSerializerException(argument: String, known: Set<String>, url: Boolean)","description":"com.rnett.krosstalk.serialization.MissingSerializerException.MissingSerializerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-missing-serializer-exception/-missing-serializer-exception.html","searchKeys":["MissingSerializerException","fun MissingSerializerException(argument: String, known: Set<String>, url: Boolean)","com.rnett.krosstalk.serialization.MissingSerializerException.MissingSerializerException"]},{"name":"fun MutableWantedScopes()","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes.MutableWantedScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/-mutable-wanted-scopes.html","searchKeys":["MutableWantedScopes","fun MutableWantedScopes()","com.rnett.krosstalk.server.plugin.MutableWantedScopes.MutableWantedScopes"]},{"name":"fun Optional()","description":"com.rnett.krosstalk.annotations.Optional.Optional","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-optional/-optional.html","searchKeys":["Optional","fun Optional()","com.rnett.krosstalk.annotations.Optional.Optional"]},{"name":"fun PassObjects(returnToo: Boolean = false)","description":"com.rnett.krosstalk.annotations.PassObjects.PassObjects","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-pass-objects/-pass-objects.html","searchKeys":["PassObjects","fun PassObjects(returnToo: Boolean = false)","com.rnett.krosstalk.annotations.PassObjects.PassObjects"]},{"name":"fun RequestHeaders()","description":"com.rnett.krosstalk.annotations.RequestHeaders.RequestHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-request-headers/-request-headers.html","searchKeys":["RequestHeaders","fun RequestHeaders()","com.rnett.krosstalk.annotations.RequestHeaders.RequestHeaders"]},{"name":"fun RespondWithHeaders()","description":"com.rnett.krosstalk.annotations.RespondWithHeaders.RespondWithHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-respond-with-headers/-respond-with-headers.html","searchKeys":["RespondWithHeaders","fun RespondWithHeaders()","com.rnett.krosstalk.annotations.RespondWithHeaders.RespondWithHeaders"]},{"name":"fun ResultHttpErrorException(httpError: KrosstalkResult.HttpError)","description":"com.rnett.krosstalk.ResultHttpErrorException.ResultHttpErrorException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-result-http-error-exception/-result-http-error-exception.html","searchKeys":["ResultHttpErrorException","fun ResultHttpErrorException(httpError: KrosstalkResult.HttpError)","com.rnett.krosstalk.ResultHttpErrorException.ResultHttpErrorException"]},{"name":"fun ResultServerExceptionException(exception: KrosstalkResult.ServerException)","description":"com.rnett.krosstalk.ResultServerExceptionException.ResultServerExceptionException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-result-server-exception-exception/-result-server-exception-exception.html","searchKeys":["ResultServerExceptionException","fun ResultServerExceptionException(exception: KrosstalkResult.ServerException)","com.rnett.krosstalk.ResultServerExceptionException.ResultServerExceptionException"]},{"name":"fun ServerException(throwable: Throwable, includeStacktrace: Boolean)","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.ServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/-server-exception.html","searchKeys":["ServerException","fun ServerException(throwable: Throwable, includeStacktrace: Boolean)","com.rnett.krosstalk.KrosstalkResult.ServerException.ServerException"]},{"name":"fun ServerURL()","description":"com.rnett.krosstalk.annotations.ServerURL.ServerURL","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-server-u-r-l/-server-u-r-l.html","searchKeys":["ServerURL","fun ServerURL()","com.rnett.krosstalk.annotations.ServerURL.ServerURL"]},{"name":"fun String.urlDecode(): String","description":"com.rnett.krosstalk.urlDecode","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/url-decode.html","searchKeys":["urlDecode","fun String.urlDecode(): String","com.rnett.krosstalk.urlDecode"]},{"name":"fun String.urlEncode(legal: String = baseUrlLegalRegex): String","description":"com.rnett.krosstalk.urlEncode","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/url-encode.html","searchKeys":["urlEncode","fun String.urlEncode(legal: String = baseUrlLegalRegex): String","com.rnett.krosstalk.urlEncode"]},{"name":"fun UnrealizedServerDefaultException()","description":"com.rnett.krosstalk.UnrealizedServerDefaultException.UnrealizedServerDefaultException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-unrealized-server-default-exception/-unrealized-server-default-exception.html","searchKeys":["UnrealizedServerDefaultException","fun UnrealizedServerDefaultException()","com.rnett.krosstalk.UnrealizedServerDefaultException.UnrealizedServerDefaultException"]},{"name":"fun WrongArgumentTypeException(methodName: String, subMessage: String)","description":"com.rnett.krosstalk.WrongArgumentTypeException.WrongArgumentTypeException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-wrong-argument-type-exception/-wrong-argument-type-exception.html","searchKeys":["WrongArgumentTypeException","fun WrongArgumentTypeException(methodName: String, subMessage: String)","com.rnett.krosstalk.WrongArgumentTypeException.WrongArgumentTypeException"]},{"name":"fun deserializeAll(arguments: Map<String, S>): Map<String, Any?>","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.deserializeAll","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/deserialize-all.html","searchKeys":["deserializeAll","fun deserializeAll(arguments: Map<String, S>): Map<String, Any?>","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.deserializeAll"]},{"name":"fun deserializeBodyArguments(arguments: ByteArray): Map<String, *>","description":"com.rnett.krosstalk.serialization.MethodSerialization.deserializeBodyArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-serialization/deserialize-body-arguments.html","searchKeys":["deserializeBodyArguments","fun deserializeBodyArguments(arguments: ByteArray): Map<String, *>","com.rnett.krosstalk.serialization.MethodSerialization.deserializeBodyArguments"]},{"name":"fun deserializeReturnValue(value: ByteArray): Any?","description":"com.rnett.krosstalk.serialization.MethodSerialization.deserializeReturnValue","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-serialization/deserialize-return-value.html","searchKeys":["deserializeReturnValue","fun deserializeReturnValue(value: ByteArray): Any?","com.rnett.krosstalk.serialization.MethodSerialization.deserializeReturnValue"]},{"name":"fun deserializeServerException(exception: ByteArray): KrosstalkResult.ServerException","description":"com.rnett.krosstalk.Krosstalk.deserializeServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/deserialize-server-exception.html","searchKeys":["deserializeServerException","fun deserializeServerException(exception: ByteArray): KrosstalkResult.ServerException","com.rnett.krosstalk.Krosstalk.deserializeServerException"]},{"name":"fun deserializeUrlArg(arg: String, value: String): Any?","description":"com.rnett.krosstalk.serialization.MethodSerialization.deserializeUrlArg","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-serialization/deserialize-url-arg.html","searchKeys":["deserializeUrlArg","fun deserializeUrlArg(arg: String, value: String): Any?","com.rnett.krosstalk.serialization.MethodSerialization.deserializeUrlArg"]},{"name":"fun isFailure(): Boolean","description":"com.rnett.krosstalk.KrosstalkResult.isFailure","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/is-failure.html","searchKeys":["isFailure","fun isFailure(): Boolean","com.rnett.krosstalk.KrosstalkResult.isFailure"]},{"name":"fun isHttpError(): Boolean","description":"com.rnett.krosstalk.KrosstalkResult.isHttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/is-http-error.html","searchKeys":["isHttpError","fun isHttpError(): Boolean","com.rnett.krosstalk.KrosstalkResult.isHttpError"]},{"name":"fun isServerException(): Boolean","description":"com.rnett.krosstalk.KrosstalkResult.isServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/is-server-exception.html","searchKeys":["isServerException","fun isServerException(): Boolean","com.rnett.krosstalk.KrosstalkResult.isServerException"]},{"name":"fun isSuccess(): Boolean","description":"com.rnett.krosstalk.KrosstalkResult.isSuccess","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/is-success.html","searchKeys":["isSuccess","fun isSuccess(): Boolean","com.rnett.krosstalk.KrosstalkResult.isSuccess"]},{"name":"fun requiredMethod(name: String): MethodDefinition<*>","description":"com.rnett.krosstalk.Krosstalk.requiredMethod","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/required-method.html","searchKeys":["requiredMethod","fun requiredMethod(name: String): MethodDefinition<*>","com.rnett.krosstalk.Krosstalk.requiredMethod"]},{"name":"fun serializeAll(arguments: Map<String, *>): Map<String, S>","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.serializeAll","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/serialize-all.html","searchKeys":["serializeAll","fun serializeAll(arguments: Map<String, *>): Map<String, S>","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.serializeAll"]},{"name":"fun serializeBodyArguments(arguments: Map<String, *>): ByteArray","description":"com.rnett.krosstalk.serialization.MethodSerialization.serializeBodyArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-serialization/serialize-body-arguments.html","searchKeys":["serializeBodyArguments","fun serializeBodyArguments(arguments: Map<String, *>): ByteArray","com.rnett.krosstalk.serialization.MethodSerialization.serializeBodyArguments"]},{"name":"fun serializeReturnValue(value: Any?): ByteArray","description":"com.rnett.krosstalk.serialization.MethodSerialization.serializeReturnValue","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-serialization/serialize-return-value.html","searchKeys":["serializeReturnValue","fun serializeReturnValue(value: Any?): ByteArray","com.rnett.krosstalk.serialization.MethodSerialization.serializeReturnValue"]},{"name":"fun serializeServerException(exception: KrosstalkResult.ServerException): ByteArray","description":"com.rnett.krosstalk.Krosstalk.serializeServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/serialize-server-exception.html","searchKeys":["serializeServerException","fun serializeServerException(exception: KrosstalkResult.ServerException): ByteArray","com.rnett.krosstalk.Krosstalk.serializeServerException"]},{"name":"fun serializeUrlArg(arg: String, value: Any?): String","description":"com.rnett.krosstalk.serialization.MethodSerialization.serializeUrlArg","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-serialization/serialize-url-arg.html","searchKeys":["serializeUrlArg","fun serializeUrlArg(arg: String, value: Any?): String","com.rnett.krosstalk.serialization.MethodSerialization.serializeUrlArg"]},{"name":"fun throwOnFailure(): KrosstalkResult<T>","description":"com.rnett.krosstalk.KrosstalkResult.throwOnFailure","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/throw-on-failure.html","searchKeys":["throwOnFailure","fun throwOnFailure(): KrosstalkResult<T>","com.rnett.krosstalk.KrosstalkResult.throwOnFailure"]},{"name":"fun throwOnHttpError(): KrosstalkResult<T>","description":"com.rnett.krosstalk.KrosstalkResult.throwOnHttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/throw-on-http-error.html","searchKeys":["throwOnHttpError","fun throwOnHttpError(): KrosstalkResult<T>","com.rnett.krosstalk.KrosstalkResult.throwOnHttpError"]},{"name":"fun throwOnServerException(): KrosstalkResult<T>","description":"com.rnett.krosstalk.KrosstalkResult.throwOnServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/throw-on-server-exception.html","searchKeys":["throwOnServerException","fun throwOnServerException(): KrosstalkResult<T>","com.rnett.krosstalk.KrosstalkResult.throwOnServerException"]},{"name":"fun withIncludeStackTrace(includeStacktrace: Boolean): KrosstalkResult.ServerException","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.withIncludeStackTrace","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/with-include-stack-trace.html","searchKeys":["withIncludeStackTrace","fun withIncludeStackTrace(includeStacktrace: Boolean): KrosstalkResult.ServerException","com.rnett.krosstalk.KrosstalkResult.ServerException.withIncludeStackTrace"]},{"name":"infix fun MutableHeaders.addHeadersFrom(other: Headers)","description":"com.rnett.krosstalk.addHeadersFrom","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/add-headers-from.html","searchKeys":["addHeadersFrom","infix fun MutableHeaders.addHeadersFrom(other: Headers)","com.rnett.krosstalk.addHeadersFrom"]},{"name":"inline fun <E : Throwable, R, T : R> KrosstalkResult<T>.catch(predicate: (E) -> Boolean = { true }, block: (E) -> R): KrosstalkResult<R>","description":"com.rnett.krosstalk.catch","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/catch.html","searchKeys":["catch","inline fun <E : Throwable, R, T : R> KrosstalkResult<T>.catch(predicate: (E) -> Boolean = { true }, block: (E) -> R): KrosstalkResult<R>","com.rnett.krosstalk.catch"]},{"name":"inline fun <E : Throwable> catchAsHttpError(httpError: (E) -> KrosstalkResult.HttpError?): KrosstalkResult<T>","description":"com.rnett.krosstalk.KrosstalkResult.catchAsHttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/catch-as-http-error.html","searchKeys":["catchAsHttpError","inline fun <E : Throwable> catchAsHttpError(httpError: (E) -> KrosstalkResult.HttpError?): KrosstalkResult<T>","com.rnett.krosstalk.KrosstalkResult.catchAsHttpError"]},{"name":"inline fun <E : Throwable> catchAsHttpStatusCode(statusCode: (E) -> Int?): KrosstalkResult<T>","description":"com.rnett.krosstalk.KrosstalkResult.catchAsHttpStatusCode","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/catch-as-http-status-code.html","searchKeys":["catchAsHttpStatusCode","inline fun <E : Throwable> catchAsHttpStatusCode(statusCode: (E) -> Int?): KrosstalkResult<T>","com.rnett.krosstalk.KrosstalkResult.catchAsHttpStatusCode"]},{"name":"inline fun <E : Throwable> throwServerException(predicate: (E) -> Boolean = { true }): KrosstalkResult<T>","description":"com.rnett.krosstalk.KrosstalkResult.throwServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/throw-server-exception.html","searchKeys":["throwServerException","inline fun <E : Throwable> throwServerException(predicate: (E) -> Boolean = { true }): KrosstalkResult<T>","com.rnett.krosstalk.KrosstalkResult.throwServerException"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.getOrDefault(onFailure: R): R","description":"com.rnett.krosstalk.getOrDefault","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/get-or-default.html","searchKeys":["getOrDefault","inline fun <R, T : R> KrosstalkResult<T>.getOrDefault(onFailure: R): R","com.rnett.krosstalk.getOrDefault"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.getOrDefault(onServerException: R, onHttpError: R): R","description":"com.rnett.krosstalk.getOrDefault","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/get-or-default.html","searchKeys":["getOrDefault","inline fun <R, T : R> KrosstalkResult<T>.getOrDefault(onServerException: R, onHttpError: R): R","com.rnett.krosstalk.getOrDefault"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.getOrElse(onFailure: (KrosstalkResult.Failure) -> R): R","description":"com.rnett.krosstalk.getOrElse","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/get-or-else.html","searchKeys":["getOrElse","inline fun <R, T : R> KrosstalkResult<T>.getOrElse(onFailure: (KrosstalkResult.Failure) -> R): R","com.rnett.krosstalk.getOrElse"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.getOrElse(onServerException: (KrosstalkResult.ServerException) -> R, onHttpError: (KrosstalkResult.HttpError) -> R): R","description":"com.rnett.krosstalk.getOrElse","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/get-or-else.html","searchKeys":["getOrElse","inline fun <R, T : R> KrosstalkResult<T>.getOrElse(onServerException: (KrosstalkResult.ServerException) -> R, onHttpError: (KrosstalkResult.HttpError) -> R): R","com.rnett.krosstalk.getOrElse"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recover(onFailure: (KrosstalkResult.Failure) -> KrosstalkResult<R>): KrosstalkResult<R>","description":"com.rnett.krosstalk.recover","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover.html","searchKeys":["recover","inline fun <R, T : R> KrosstalkResult<T>.recover(onFailure: (KrosstalkResult.Failure) -> KrosstalkResult<R>): KrosstalkResult<R>","com.rnett.krosstalk.recover"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recoverCatching(onFailure: (KrosstalkResult.Failure) -> R): KrosstalkResult<R>","description":"com.rnett.krosstalk.recoverCatching","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover-catching.html","searchKeys":["recoverCatching","inline fun <R, T : R> KrosstalkResult<T>.recoverCatching(onFailure: (KrosstalkResult.Failure) -> R): KrosstalkResult<R>","com.rnett.krosstalk.recoverCatching"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recoverHttpError(onHttpError: (KrosstalkResult.HttpError) -> KrosstalkResult<R>): KrosstalkResult<R>","description":"com.rnett.krosstalk.recoverHttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover-http-error.html","searchKeys":["recoverHttpError","inline fun <R, T : R> KrosstalkResult<T>.recoverHttpError(onHttpError: (KrosstalkResult.HttpError) -> KrosstalkResult<R>): KrosstalkResult<R>","com.rnett.krosstalk.recoverHttpError"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recoverHttpError(responseCode: Int, onError: (KrosstalkResult.HttpError) -> R): KrosstalkResult<R>","description":"com.rnett.krosstalk.recoverHttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover-http-error.html","searchKeys":["recoverHttpError","inline fun <R, T : R> KrosstalkResult<T>.recoverHttpError(responseCode: Int, onError: (KrosstalkResult.HttpError) -> R): KrosstalkResult<R>","com.rnett.krosstalk.recoverHttpError"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recoverHttpError(responseCode: Int, onError: R): KrosstalkResult<R>","description":"com.rnett.krosstalk.recoverHttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover-http-error.html","searchKeys":["recoverHttpError","inline fun <R, T : R> KrosstalkResult<T>.recoverHttpError(responseCode: Int, onError: R): KrosstalkResult<R>","com.rnett.krosstalk.recoverHttpError"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recoverHttpErrorCatching(onHttpError: (KrosstalkResult.HttpError) -> R): KrosstalkResult<R>","description":"com.rnett.krosstalk.recoverHttpErrorCatching","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover-http-error-catching.html","searchKeys":["recoverHttpErrorCatching","inline fun <R, T : R> KrosstalkResult<T>.recoverHttpErrorCatching(onHttpError: (KrosstalkResult.HttpError) -> R): KrosstalkResult<R>","com.rnett.krosstalk.recoverHttpErrorCatching"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recoverServerException(onServerException: (KrosstalkResult.ServerException) -> KrosstalkResult<R>): KrosstalkResult<R>","description":"com.rnett.krosstalk.recoverServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover-server-exception.html","searchKeys":["recoverServerException","inline fun <R, T : R> KrosstalkResult<T>.recoverServerException(onServerException: (KrosstalkResult.ServerException) -> KrosstalkResult<R>): KrosstalkResult<R>","com.rnett.krosstalk.recoverServerException"]},{"name":"inline fun <R, T : R> KrosstalkResult<T>.recoverServerExceptionCatching(onServerException: (KrosstalkResult.ServerException) -> R): KrosstalkResult<R>","description":"com.rnett.krosstalk.recoverServerExceptionCatching","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/recover-server-exception-catching.html","searchKeys":["recoverServerExceptionCatching","inline fun <R, T : R> KrosstalkResult<T>.recoverServerExceptionCatching(onServerException: (KrosstalkResult.ServerException) -> R): KrosstalkResult<R>","com.rnett.krosstalk.recoverServerExceptionCatching"]},{"name":"inline fun <R> fold(onSuccess: (T) -> R, onFailure: (KrosstalkResult.Failure) -> R): R","description":"com.rnett.krosstalk.KrosstalkResult.fold","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/fold.html","searchKeys":["fold","inline fun <R> fold(onSuccess: (T) -> R, onFailure: (KrosstalkResult.Failure) -> R): R","com.rnett.krosstalk.KrosstalkResult.fold"]},{"name":"inline fun <R> fold(onSuccess: (T) -> R, onServerException: (KrosstalkResult.ServerException) -> R, onHttpError: (KrosstalkResult.HttpError) -> R): R","description":"com.rnett.krosstalk.KrosstalkResult.fold","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/fold.html","searchKeys":["fold","inline fun <R> fold(onSuccess: (T) -> R, onServerException: (KrosstalkResult.ServerException) -> R, onHttpError: (KrosstalkResult.HttpError) -> R): R","com.rnett.krosstalk.KrosstalkResult.fold"]},{"name":"inline fun <R> map(transform: (T) -> R): KrosstalkResult<R>","description":"com.rnett.krosstalk.KrosstalkResult.map","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/map.html","searchKeys":["map","inline fun <R> map(transform: (T) -> R): KrosstalkResult<R>","com.rnett.krosstalk.KrosstalkResult.map"]},{"name":"inline fun <T> KrosstalkResult<T>.onFailure(onFailure: (KrosstalkResult.Failure) -> Unit): KrosstalkResult<T>","description":"com.rnett.krosstalk.onFailure","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/on-failure.html","searchKeys":["onFailure","inline fun <T> KrosstalkResult<T>.onFailure(onFailure: (KrosstalkResult.Failure) -> Unit): KrosstalkResult<T>","com.rnett.krosstalk.onFailure"]},{"name":"inline fun <T> KrosstalkResult<T>.onHttpError(onHttpError: (KrosstalkResult.HttpError) -> Unit): KrosstalkResult<T>","description":"com.rnett.krosstalk.onHttpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/on-http-error.html","searchKeys":["onHttpError","inline fun <T> KrosstalkResult<T>.onHttpError(onHttpError: (KrosstalkResult.HttpError) -> Unit): KrosstalkResult<T>","com.rnett.krosstalk.onHttpError"]},{"name":"inline fun <T> KrosstalkResult<T>.onServerException(onServerException: (KrosstalkResult.ServerException) -> Unit): KrosstalkResult<T>","description":"com.rnett.krosstalk.onServerException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/on-server-exception.html","searchKeys":["onServerException","inline fun <T> KrosstalkResult<T>.onServerException(onServerException: (KrosstalkResult.ServerException) -> Unit): KrosstalkResult<T>","com.rnett.krosstalk.onServerException"]},{"name":"inline fun <T> KrosstalkResult<T>.onSuccess(onSuccess: (T) -> Unit): KrosstalkResult<T>","description":"com.rnett.krosstalk.onSuccess","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/on-success.html","searchKeys":["onSuccess","inline fun <T> KrosstalkResult<T>.onSuccess(onSuccess: (T) -> Unit): KrosstalkResult<T>","com.rnett.krosstalk.onSuccess"]},{"name":"inline fun <T> Result<T>.toKrosstalkResult(includeStackTrace: Boolean = true): KrosstalkResult<T>","description":"com.rnett.krosstalk.toKrosstalkResult","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/to-krosstalk-result.html","searchKeys":["toKrosstalkResult","inline fun <T> Result<T>.toKrosstalkResult(includeStackTrace: Boolean = true): KrosstalkResult<T>","com.rnett.krosstalk.toKrosstalkResult"]},{"name":"inline fun <T> ServerDefault(value: () -> T): ServerDefault<T>","description":"com.rnett.krosstalk.ServerDefault","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-server-default.html","searchKeys":["ServerDefault","inline fun <T> ServerDefault(value: () -> T): ServerDefault<T>","com.rnett.krosstalk.ServerDefault"]},{"name":"inline fun <T> runKrosstalkCatching(includeStackTrace: Boolean = true, block: () -> T): KrosstalkResult<T>","description":"com.rnett.krosstalk.runKrosstalkCatching","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/run-krosstalk-catching.html","searchKeys":["runKrosstalkCatching","inline fun <T> runKrosstalkCatching(includeStackTrace: Boolean = true, block: () -> T): KrosstalkResult<T>","com.rnett.krosstalk.runKrosstalkCatching"]},{"name":"interface ClientScope<in D> : Scope","description":"com.rnett.krosstalk.client.plugin.ClientScope","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.client.plugin/-client-scope/index.html","searchKeys":["ClientScope","interface ClientScope<in D> : Scope","com.rnett.krosstalk.client.plugin.ClientScope"]},{"name":"interface Failure","description":"com.rnett.krosstalk.KrosstalkResult.Failure","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-failure/index.html","searchKeys":["Failure","interface Failure","com.rnett.krosstalk.KrosstalkResult.Failure"]},{"name":"interface Scope","description":"com.rnett.krosstalk.Scope","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-scope/index.html","searchKeys":["Scope","interface Scope","com.rnett.krosstalk.Scope"]},{"name":"interface SerializationHandler<S>","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/index.html","searchKeys":["SerializationHandler","interface SerializationHandler<S>","com.rnett.krosstalk.serialization.plugin.SerializationHandler"]},{"name":"interface SerializedFormatTransformer<S>","description":"com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialized-format-transformer/index.html","searchKeys":["SerializedFormatTransformer","interface SerializedFormatTransformer<S>","com.rnett.krosstalk.serialization.plugin.SerializedFormatTransformer"]},{"name":"interface Serializer<T, S>","description":"com.rnett.krosstalk.serialization.plugin.Serializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serializer/index.html","searchKeys":["Serializer","interface Serializer<T, S>","com.rnett.krosstalk.serialization.plugin.Serializer"]},{"name":"interface ServerScope<S> : Scope","description":"com.rnett.krosstalk.server.plugin.ServerScope","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-server-scope/index.html","searchKeys":["ServerScope","interface ServerScope<S> : Scope","com.rnett.krosstalk.server.plugin.ServerScope"]},{"name":"interface WantedScopes","description":"com.rnett.krosstalk.server.plugin.WantedScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-wanted-scopes/index.html","searchKeys":["WantedScopes","interface WantedScopes","com.rnett.krosstalk.server.plugin.WantedScopes"]},{"name":"object ByteTransformer : SerializedFormatTransformer<ByteArray> ","description":"com.rnett.krosstalk.serialization.plugin.ByteTransformer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-byte-transformer/index.html","searchKeys":["ByteTransformer","object ByteTransformer : SerializedFormatTransformer<ByteArray> ","com.rnett.krosstalk.serialization.plugin.ByteTransformer"]},{"name":"object StringTransformer : SerializedFormatTransformer<String> ","description":"com.rnett.krosstalk.serialization.plugin.StringTransformer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-string-transformer/index.html","searchKeys":["StringTransformer","object StringTransformer : SerializedFormatTransformer<String> ","com.rnett.krosstalk.serialization.plugin.StringTransformer"]},{"name":"open fun <T> deserializeArgument(key: String, value: S, serializers: ArgumentSerializers<S>): T","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler.deserializeArgument","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/deserialize-argument.html","searchKeys":["deserializeArgument","open fun <T> deserializeArgument(key: String, value: S, serializers: ArgumentSerializers<S>): T","com.rnett.krosstalk.serialization.plugin.SerializationHandler.deserializeArgument"]},{"name":"open fun <T> serializeArgument(key: String, value: T, serializers: ArgumentSerializers<S>): S","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler.serializeArgument","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/serialize-argument.html","searchKeys":["serializeArgument","open fun <T> serializeArgument(key: String, value: T, serializers: ArgumentSerializers<S>): S","com.rnett.krosstalk.serialization.plugin.SerializationHandler.serializeArgument"]},{"name":"open fun throwException(): Nothing","description":"com.rnett.krosstalk.KrosstalkResult.Failure.throwException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-failure/throw-exception.html","searchKeys":["throwException","open fun throwException(): Nothing","com.rnett.krosstalk.KrosstalkResult.Failure.throwException"]},{"name":"open operator override fun <T : ServerScope<D>, D> get(scope: T): D","description":"com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.get","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-immutable-wanted-scopes/get.html","searchKeys":["get","open operator override fun <T : ServerScope<D>, D> get(scope: T): D","com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.get"]},{"name":"open operator override fun <T : ServerScope<D>, D> get(scope: T): D","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes.get","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/get.html","searchKeys":["get","open operator override fun <T : ServerScope<D>, D> get(scope: T): D","com.rnett.krosstalk.server.plugin.MutableWantedScopes.get"]},{"name":"open override fun <T : ServerScope<D>, D> getOptional(scope: T): D?","description":"com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.getOptional","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-immutable-wanted-scopes/get-optional.html","searchKeys":["getOptional","open override fun <T : ServerScope<D>, D> getOptional(scope: T): D?","com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.getOptional"]},{"name":"open override fun <T : ServerScope<D>, D> getOptional(scope: T): D?","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes.getOptional","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/get-optional.html","searchKeys":["getOptional","open override fun <T : ServerScope<D>, D> getOptional(scope: T): D?","com.rnett.krosstalk.server.plugin.MutableWantedScopes.getOptional"]},{"name":"open override fun <T : ServerScope<D>, D> getOrElse(scope: T, default: D): D","description":"com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.getOrElse","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-immutable-wanted-scopes/get-or-else.html","searchKeys":["getOrElse","open override fun <T : ServerScope<D>, D> getOrElse(scope: T, default: D): D","com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.getOrElse"]},{"name":"open override fun <T : ServerScope<D>, D> getOrElse(scope: T, default: D): D","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes.getOrElse","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/get-or-else.html","searchKeys":["getOrElse","open override fun <T : ServerScope<D>, D> getOrElse(scope: T, default: D): D","com.rnett.krosstalk.server.plugin.MutableWantedScopes.getOrElse"]},{"name":"open override fun deserialize(data: ByteArray): T","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.deserialize","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(data: ByteArray): T","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.deserialize"]},{"name":"open override fun deserialize(data: String): T","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.deserialize","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(data: String): T","com.rnett.krosstalk.serialization.KotlinxStringSerializer.deserialize"]},{"name":"open override fun deserializeArguments(arguments: ByteArray): Map<String, ByteArray>","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.deserializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","open override fun deserializeArguments(arguments: ByteArray): Map<String, ByteArray>","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.deserializeArguments"]},{"name":"open override fun deserializeArguments(arguments: String): Map<String, String>","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.deserializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","open override fun deserializeArguments(arguments: String): Map<String, String>","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.deserializeArguments"]},{"name":"open override fun deserializeArguments(arguments: String, serializers: ArgumentSerializers<String>): Map<String, *>","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.deserializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","open override fun deserializeArguments(arguments: String, serializers: ArgumentSerializers<String>): Map<String, *>","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.deserializeArguments"]},{"name":"open override fun fromByteArray(data: ByteArray): ByteArray","description":"com.rnett.krosstalk.serialization.plugin.ByteTransformer.fromByteArray","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-byte-transformer/from-byte-array.html","searchKeys":["fromByteArray","open override fun fromByteArray(data: ByteArray): ByteArray","com.rnett.krosstalk.serialization.plugin.ByteTransformer.fromByteArray"]},{"name":"open override fun fromByteArray(data: ByteArray): String","description":"com.rnett.krosstalk.serialization.plugin.StringTransformer.fromByteArray","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-string-transformer/from-byte-array.html","searchKeys":["fromByteArray","open override fun fromByteArray(data: ByteArray): String","com.rnett.krosstalk.serialization.plugin.StringTransformer.fromByteArray"]},{"name":"open override fun fromString(data: String): ByteArray","description":"com.rnett.krosstalk.serialization.plugin.ByteTransformer.fromString","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-byte-transformer/from-string.html","searchKeys":["fromString","open override fun fromString(data: String): ByteArray","com.rnett.krosstalk.serialization.plugin.ByteTransformer.fromString"]},{"name":"open override fun fromString(data: String): String","description":"com.rnett.krosstalk.serialization.plugin.StringTransformer.fromString","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-string-transformer/from-string.html","searchKeys":["fromString","open override fun fromString(data: String): String","com.rnett.krosstalk.serialization.plugin.StringTransformer.fromString"]},{"name":"open override fun getException(): ResultHttpErrorException","description":"com.rnett.krosstalk.KrosstalkResult.HttpError.getException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-http-error/get-exception.html","searchKeys":["getException","open override fun getException(): ResultHttpErrorException","com.rnett.krosstalk.KrosstalkResult.HttpError.getException"]},{"name":"open override fun getException(): ResultServerExceptionException","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.getException","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/get-exception.html","searchKeys":["getException","open override fun getException(): ResultServerExceptionException","com.rnett.krosstalk.KrosstalkResult.ServerException.getException"]},{"name":"open override fun getSerializer(type: KType): KotlinxBinarySerializer<*>","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.getSerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/get-serializer.html","searchKeys":["getSerializer","open override fun getSerializer(type: KType): KotlinxBinarySerializer<*>","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.getSerializer"]},{"name":"open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.getSerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/get-serializer.html","searchKeys":["getSerializer","open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.getSerializer"]},{"name":"open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.getSerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/get-serializer.html","searchKeys":["getSerializer","open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.getSerializer"]},{"name":"open override fun serialize(data: T): ByteArray","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serialize","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(data: T): ByteArray","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serialize"]},{"name":"open override fun serialize(data: T): String","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.serialize","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(data: T): String","com.rnett.krosstalk.serialization.KotlinxStringSerializer.serialize"]},{"name":"open override fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<String>): String","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.serializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","open override fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<String>): String","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.serializeArguments"]},{"name":"open override fun serializeArguments(serializedArguments: Map<String, ByteArray>): ByteArray","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.serializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","open override fun serializeArguments(serializedArguments: Map<String, ByteArray>): ByteArray","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.serializeArguments"]},{"name":"open override fun serializeArguments(serializedArguments: Map<String, String>): String","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.serializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","open override fun serializeArguments(serializedArguments: Map<String, String>): String","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.serializeArguments"]},{"name":"open override fun toByteArray(data: ByteArray): ByteArray","description":"com.rnett.krosstalk.serialization.plugin.ByteTransformer.toByteArray","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-byte-transformer/to-byte-array.html","searchKeys":["toByteArray","open override fun toByteArray(data: ByteArray): ByteArray","com.rnett.krosstalk.serialization.plugin.ByteTransformer.toByteArray"]},{"name":"open override fun toByteArray(data: String): ByteArray","description":"com.rnett.krosstalk.serialization.plugin.StringTransformer.toByteArray","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-string-transformer/to-byte-array.html","searchKeys":["toByteArray","open override fun toByteArray(data: String): ByteArray","com.rnett.krosstalk.serialization.plugin.StringTransformer.toByteArray"]},{"name":"open override fun toImmutable(): ImmutableWantedScopes","description":"com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.toImmutable","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-immutable-wanted-scopes/to-immutable.html","searchKeys":["toImmutable","open override fun toImmutable(): ImmutableWantedScopes","com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.toImmutable"]},{"name":"open override fun toImmutable(): ImmutableWantedScopes","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes.toImmutable","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/to-immutable.html","searchKeys":["toImmutable","open override fun toImmutable(): ImmutableWantedScopes","com.rnett.krosstalk.server.plugin.MutableWantedScopes.toImmutable"]},{"name":"open override fun toMap(): Map<ServerScope<*>, Any?>","description":"com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.toMap","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-immutable-wanted-scopes/to-map.html","searchKeys":["toMap","open override fun toMap(): Map<ServerScope<*>, Any?>","com.rnett.krosstalk.server.plugin.ImmutableWantedScopes.toMap"]},{"name":"open override fun toMap(): Map<ServerScope<*>, Any?>","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes.toMap","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/to-map.html","searchKeys":["toMap","open override fun toMap(): Map<ServerScope<*>, Any?>","com.rnett.krosstalk.server.plugin.MutableWantedScopes.toMap"]},{"name":"open override fun toString(data: ByteArray): String","description":"com.rnett.krosstalk.serialization.plugin.ByteTransformer.toString","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-byte-transformer/to-string.html","searchKeys":["toString","open override fun toString(data: ByteArray): String","com.rnett.krosstalk.serialization.plugin.ByteTransformer.toString"]},{"name":"open override fun toString(data: String): String","description":"com.rnett.krosstalk.serialization.plugin.StringTransformer.toString","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-string-transformer/to-string.html","searchKeys":["toString","open override fun toString(data: String): String","com.rnett.krosstalk.serialization.plugin.StringTransformer.toString"]},{"name":"open override val contentType: String","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.contentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/content-type.html","searchKeys":["contentType","open override val contentType: String","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.contentType"]},{"name":"open override val contentType: String","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.contentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/content-type.html","searchKeys":["contentType","open override val contentType: String","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.contentType"]},{"name":"open override val contentType: String","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.contentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/content-type.html","searchKeys":["contentType","open override val contentType: String","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.contentType"]},{"name":"open override val transformer: SerializedFormatTransformer<S>","description":"com.rnett.krosstalk.serialization.plugin.BaseSerializationHandler.transformer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-base-serialization-handler/transformer.html","searchKeys":["transformer","open override val transformer: SerializedFormatTransformer<S>","com.rnett.krosstalk.serialization.plugin.BaseSerializationHandler.transformer"]},{"name":"open val canBeOptional: Boolean","description":"com.rnett.krosstalk.Scope.canBeOptional","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-scope/can-be-optional.html","searchKeys":["canBeOptional","open val canBeOptional: Boolean","com.rnett.krosstalk.Scope.canBeOptional"]},{"name":"open val contentType: String","description":"com.rnett.krosstalk.serialization.plugin.SerializationHandler.contentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-serialization-handler/content-type.html","searchKeys":["contentType","open val contentType: String","com.rnett.krosstalk.serialization.plugin.SerializationHandler.contentType"]},{"name":"open val prefix: String","description":"com.rnett.krosstalk.Krosstalk.prefix","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/prefix.html","searchKeys":["prefix","open val prefix: String","com.rnett.krosstalk.Krosstalk.prefix"]},{"name":"open val urlSerialization: SerializationHandler<*>","description":"com.rnett.krosstalk.Krosstalk.urlSerialization","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/url-serialization.html","searchKeys":["urlSerialization","open val urlSerialization: SerializationHandler<*>","com.rnett.krosstalk.Krosstalk.urlSerialization"]},{"name":"operator fun <T : ServerScope<D>, D> set(scope: T, value: D)","description":"com.rnett.krosstalk.server.plugin.MutableWantedScopes.set","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server.plugin/-mutable-wanted-scopes/set.html","searchKeys":["set","operator fun <T : ServerScope<D>, D> set(scope: T, value: D)","com.rnett.krosstalk.server.plugin.MutableWantedScopes.set"]},{"name":"operator fun contains(argument: String): Boolean","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.contains","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/contains.html","searchKeys":["contains","operator fun contains(argument: String): Boolean","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.contains"]},{"name":"operator fun get(argument: String): Serializer<Any?, S>","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.get","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/get.html","searchKeys":["get","operator fun get(argument: String): Serializer<Any?, S>","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.get"]},{"name":"override fun deserializeArguments(arguments: S, serializers: ArgumentSerializers<S>): Map<String, *>","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.deserializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","override fun deserializeArguments(arguments: S, serializers: ArgumentSerializers<S>): Map<String, *>","com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.deserializeArguments"]},{"name":"override fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<S>): S","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.serializeArguments","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","override fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<S>): S","com.rnett.krosstalk.serialization.plugin.ArgumentSerializationHandler.serializeArguments"]},{"name":"sealed class KrosstalkResult<out T>","description":"com.rnett.krosstalk.KrosstalkResult","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/index.html","searchKeys":["KrosstalkResult","sealed class KrosstalkResult<out T>","com.rnett.krosstalk.KrosstalkResult"]},{"name":"sealed class ScopeInstance<T : Scope>","description":"com.rnett.krosstalk.ScopeInstance","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-scope-instance/index.html","searchKeys":["ScopeInstance","sealed class ScopeInstance<T : Scope>","com.rnett.krosstalk.ScopeInstance"]},{"name":"val allScopes: Set<Scope>","description":"com.rnett.krosstalk.MethodDefinition.allScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/all-scopes.html","searchKeys":["allScopes","val allScopes: Set<Scope>","com.rnett.krosstalk.MethodDefinition.allScopes"]},{"name":"val argument: String","description":"com.rnett.krosstalk.serialization.MissingSerializerException.argument","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-missing-serializer-exception/argument.html","searchKeys":["argument","val argument: String","com.rnett.krosstalk.serialization.MissingSerializerException.argument"]},{"name":"val asString: String","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.asString","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/as-string.html","searchKeys":["asString","val asString: String","com.rnett.krosstalk.KrosstalkResult.ServerException.asString"]},{"name":"val asStringWithStacktrace: String?","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.asStringWithStacktrace","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/as-string-with-stacktrace.html","searchKeys":["asStringWithStacktrace","val asStringWithStacktrace: String?","com.rnett.krosstalk.KrosstalkResult.ServerException.asStringWithStacktrace"]},{"name":"val call: MethodCaller<T>","description":"com.rnett.krosstalk.MethodDefinition.call","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/call.html","searchKeys":["call","val call: MethodCaller<T>","com.rnett.krosstalk.MethodDefinition.call"]},{"name":"val cause: KrosstalkResult.ServerException?","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.cause","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/cause.html","searchKeys":["cause","val cause: KrosstalkResult.ServerException?","com.rnett.krosstalk.KrosstalkResult.ServerException.cause"]},{"name":"val className: String?","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.className","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/class-name.html","searchKeys":["className","val className: String?","com.rnett.krosstalk.KrosstalkResult.ServerException.className"]},{"name":"val contentType: String","description":"com.rnett.krosstalk.annotations.KrosstalkEndpoint.contentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-endpoint/content-type.html","searchKeys":["contentType","val contentType: String","com.rnett.krosstalk.annotations.KrosstalkEndpoint.contentType"]},{"name":"val contentType: String?","description":"com.rnett.krosstalk.MethodDefinition.contentType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/content-type.html","searchKeys":["contentType","val contentType: String?","com.rnett.krosstalk.MethodDefinition.contentType"]},{"name":"val endpoint: Endpoint","description":"com.rnett.krosstalk.MethodDefinition.endpoint","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/endpoint.html","searchKeys":["endpoint","val endpoint: Endpoint","com.rnett.krosstalk.MethodDefinition.endpoint"]},{"name":"val endpoint: String","description":"com.rnett.krosstalk.annotations.KrosstalkEndpoint.endpoint","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-endpoint/endpoint.html","searchKeys":["endpoint","val endpoint: String","com.rnett.krosstalk.annotations.KrosstalkEndpoint.endpoint"]},{"name":"val exception: KrosstalkResult.ServerException","description":"com.rnett.krosstalk.ResultServerExceptionException.exception","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-result-server-exception-exception/exception.html","searchKeys":["exception","val exception: KrosstalkResult.ServerException","com.rnett.krosstalk.ResultServerExceptionException.exception"]},{"name":"val extensionReceiverSerializer: KType?","description":"com.rnett.krosstalk.serialization.MethodTypes.extensionReceiverSerializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-types/extension-receiver-serializer.html","searchKeys":["extensionReceiverSerializer","val extensionReceiverSerializer: KType?","com.rnett.krosstalk.serialization.MethodTypes.extensionReceiverSerializer"]},{"name":"val failureOrNull: Any?","description":"com.rnett.krosstalk.KrosstalkResult.failureOrNull","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/failure-or-null.html","searchKeys":["failureOrNull","val failureOrNull: Any?","com.rnett.krosstalk.KrosstalkResult.failureOrNull"]},{"name":"val format: BinaryFormat","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.format","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/format.html","searchKeys":["format","val format: BinaryFormat","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.format"]},{"name":"val format: BinaryFormat","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.format","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/format.html","searchKeys":["format","val format: BinaryFormat","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.format"]},{"name":"val format: Json","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.format","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/format.html","searchKeys":["format","val format: Json","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.format"]},{"name":"val format: StringFormat","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.format","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/format.html","searchKeys":["format","val format: StringFormat","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.format"]},{"name":"val format: StringFormat","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.format","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/format.html","searchKeys":["format","val format: StringFormat","com.rnett.krosstalk.serialization.KotlinxStringSerializer.format"]},{"name":"val headers: Headers","description":"com.rnett.krosstalk.WithHeaders.headers","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-with-headers/headers.html","searchKeys":["headers","val headers: Headers","com.rnett.krosstalk.WithHeaders.headers"]},{"name":"val httpError: KrosstalkResult.HttpError","description":"com.rnett.krosstalk.ResultHttpErrorException.httpError","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-result-http-error-exception/http-error.html","searchKeys":["httpError","val httpError: KrosstalkResult.HttpError","com.rnett.krosstalk.ResultHttpErrorException.httpError"]},{"name":"val httpErrorOrNull: KrosstalkResult.HttpError?","description":"com.rnett.krosstalk.KrosstalkResult.httpErrorOrNull","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/http-error-or-null.html","searchKeys":["httpErrorOrNull","val httpErrorOrNull: KrosstalkResult.HttpError?","com.rnett.krosstalk.KrosstalkResult.httpErrorOrNull"]},{"name":"val httpMethod: String","description":"com.rnett.krosstalk.MethodDefinition.httpMethod","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/http-method.html","searchKeys":["httpMethod","val httpMethod: String","com.rnett.krosstalk.MethodDefinition.httpMethod"]},{"name":"val httpMethod: String","description":"com.rnett.krosstalk.annotations.KrosstalkEndpoint.httpMethod","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-endpoint/http-method.html","searchKeys":["httpMethod","val httpMethod: String","com.rnett.krosstalk.annotations.KrosstalkEndpoint.httpMethod"]},{"name":"val httpStatusCodes: Map<Int, String>","description":"com.rnett.krosstalk.httpStatusCodes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/http-status-codes.html","searchKeys":["httpStatusCodes","val httpStatusCodes: Map<Int, String>","com.rnett.krosstalk.httpStatusCodes"]},{"name":"val includeStacktrace: Boolean","description":"com.rnett.krosstalk.MethodDefinition.includeStacktrace","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/include-stacktrace.html","searchKeys":["includeStacktrace","val includeStacktrace: Boolean","com.rnett.krosstalk.MethodDefinition.includeStacktrace"]},{"name":"val includeStacktrace: Boolean = false","description":"com.rnett.krosstalk.annotations.ExplicitResult.includeStacktrace","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-explicit-result/include-stacktrace.html","searchKeys":["includeStacktrace","val includeStacktrace: Boolean = false","com.rnett.krosstalk.annotations.ExplicitResult.includeStacktrace"]},{"name":"val innerWithHeaders: Boolean","description":"com.rnett.krosstalk.MethodDefinition.innerWithHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/inner-with-headers.html","searchKeys":["innerWithHeaders","val innerWithHeaders: Boolean","com.rnett.krosstalk.MethodDefinition.innerWithHeaders"]},{"name":"val instanceReceiverType: KType?","description":"com.rnett.krosstalk.serialization.MethodTypes.instanceReceiverType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-types/instance-receiver-type.html","searchKeys":["instanceReceiverType","val instanceReceiverType: KType?","com.rnett.krosstalk.serialization.MethodTypes.instanceReceiverType"]},{"name":"val klass: KClass<out Krosstalk>","description":"com.rnett.krosstalk.annotations.KrosstalkMethod.klass","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-method/klass.html","searchKeys":["klass","val klass: KClass<out Krosstalk>","com.rnett.krosstalk.annotations.KrosstalkMethod.klass"]},{"name":"val known: Set<String>","description":"com.rnett.krosstalk.serialization.MissingSerializerException.known","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-missing-serializer-exception/known.html","searchKeys":["known","val known: Set<String>","com.rnett.krosstalk.serialization.MissingSerializerException.known"]},{"name":"val krosstalkObject: Krosstalk","description":"com.rnett.krosstalk.MissingMethodException.krosstalkObject","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-method-exception/krosstalk-object.html","searchKeys":["krosstalkObject","val krosstalkObject: Krosstalk","com.rnett.krosstalk.MissingMethodException.krosstalkObject"]},{"name":"val map: Map<String, Serializer<*, S>>","description":"com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.map","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization.plugin/-argument-serializers/map.html","searchKeys":["map","val map: Map<String, Serializer<*, S>>","com.rnett.krosstalk.serialization.plugin.ArgumentSerializers.map"]},{"name":"val message: String?","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.message","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/message.html","searchKeys":["message","val message: String?","com.rnett.krosstalk.KrosstalkResult.ServerException.message"]},{"name":"val message: String? = null","description":"com.rnett.krosstalk.KrosstalkResult.HttpError.message","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-http-error/message.html","searchKeys":["message","val message: String? = null","com.rnett.krosstalk.KrosstalkResult.HttpError.message"]},{"name":"val methodName: String","description":"com.rnett.krosstalk.MissingArgumentException.methodName","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-argument-exception/method-name.html","searchKeys":["methodName","val methodName: String","com.rnett.krosstalk.MissingArgumentException.methodName"]},{"name":"val methodName: String","description":"com.rnett.krosstalk.MissingMethodException.methodName","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-method-exception/method-name.html","searchKeys":["methodName","val methodName: String","com.rnett.krosstalk.MissingMethodException.methodName"]},{"name":"val methodName: String","description":"com.rnett.krosstalk.WrongArgumentTypeException.methodName","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-wrong-argument-type-exception/method-name.html","searchKeys":["methodName","val methodName: String","com.rnett.krosstalk.WrongArgumentTypeException.methodName"]},{"name":"val methodName: String? = null","description":"com.rnett.krosstalk.server.MissingScopeException.methodName","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server/-missing-scope-exception/method-name.html","searchKeys":["methodName","val methodName: String? = null","com.rnett.krosstalk.server.MissingScopeException.methodName"]},{"name":"val methods: Map<String, MethodDefinition<*>>","description":"com.rnett.krosstalk.Krosstalk.methods","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/methods.html","searchKeys":["methods","val methods: Map<String, MethodDefinition<*>>","com.rnett.krosstalk.Krosstalk.methods"]},{"name":"val name: String","description":"com.rnett.krosstalk.MethodDefinition.name","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/name.html","searchKeys":["name","val name: String","com.rnett.krosstalk.MethodDefinition.name"]},{"name":"val noParamHash: Boolean = false","description":"com.rnett.krosstalk.annotations.KrosstalkMethod.noParamHash","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-krosstalk-method/no-param-hash.html","searchKeys":["noParamHash","val noParamHash: Boolean = false","com.rnett.krosstalk.annotations.KrosstalkMethod.noParamHash"]},{"name":"val objectParameters: Map<String, *>","description":"com.rnett.krosstalk.MethodDefinition.objectParameters","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/object-parameters.html","searchKeys":["objectParameters","val objectParameters: Map<String, *>","com.rnett.krosstalk.MethodDefinition.objectParameters"]},{"name":"val optionalParameters: Set<String>","description":"com.rnett.krosstalk.MethodDefinition.optionalParameters","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/optional-parameters.html","searchKeys":["optionalParameters","val optionalParameters: Set<String>","com.rnett.krosstalk.MethodDefinition.optionalParameters"]},{"name":"val optionalScopes: Set<Scope>","description":"com.rnett.krosstalk.MethodDefinition.optionalScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/optional-scopes.html","searchKeys":["optionalScopes","val optionalScopes: Set<Scope>","com.rnett.krosstalk.MethodDefinition.optionalScopes"]},{"name":"val outerWithHeaders: Boolean","description":"com.rnett.krosstalk.MethodDefinition.outerWithHeaders","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/outer-with-headers.html","searchKeys":["outerWithHeaders","val outerWithHeaders: Boolean","com.rnett.krosstalk.MethodDefinition.outerWithHeaders"]},{"name":"val paramTypes: Map<String, KType>","description":"com.rnett.krosstalk.serialization.MethodTypes.paramTypes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-types/param-types.html","searchKeys":["paramTypes","val paramTypes: Map<String, KType>","com.rnett.krosstalk.serialization.MethodTypes.paramTypes"]},{"name":"val propagateServerExceptions: Boolean","description":"com.rnett.krosstalk.MethodDefinition.propagateServerExceptions","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/propagate-server-exceptions.html","searchKeys":["propagateServerExceptions","val propagateServerExceptions: Boolean","com.rnett.krosstalk.MethodDefinition.propagateServerExceptions"]},{"name":"val propagateServerExceptions: Boolean = true","description":"com.rnett.krosstalk.annotations.ExplicitResult.propagateServerExceptions","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-explicit-result/propagate-server-exceptions.html","searchKeys":["propagateServerExceptions","val propagateServerExceptions: Boolean = true","com.rnett.krosstalk.annotations.ExplicitResult.propagateServerExceptions"]},{"name":"val requestHeadersParam: String?","description":"com.rnett.krosstalk.MethodDefinition.requestHeadersParam","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/request-headers-param.html","searchKeys":["requestHeadersParam","val requestHeadersParam: String?","com.rnett.krosstalk.MethodDefinition.requestHeadersParam"]},{"name":"val requiredScopes: Set<Scope>","description":"com.rnett.krosstalk.MethodDefinition.requiredScopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/required-scopes.html","searchKeys":["requiredScopes","val requiredScopes: Set<Scope>","com.rnett.krosstalk.MethodDefinition.requiredScopes"]},{"name":"val resultType: KType?","description":"com.rnett.krosstalk.serialization.MethodTypes.resultType","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-method-types/result-type.html","searchKeys":["resultType","val resultType: KType?","com.rnett.krosstalk.serialization.MethodTypes.resultType"]},{"name":"val returnObject: Any?","description":"com.rnett.krosstalk.MethodDefinition.returnObject","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/return-object.html","searchKeys":["returnObject","val returnObject: Any?","com.rnett.krosstalk.MethodDefinition.returnObject"]},{"name":"val returnToo: Boolean = false","description":"com.rnett.krosstalk.annotations.PassObjects.returnToo","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.annotations/-pass-objects/return-too.html","searchKeys":["returnToo","val returnToo: Boolean = false","com.rnett.krosstalk.annotations.PassObjects.returnToo"]},{"name":"val scope: Scope","description":"com.rnett.krosstalk.server.MissingScopeException.scope","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.server/-missing-scope-exception/scope.html","searchKeys":["scope","val scope: Scope","com.rnett.krosstalk.server.MissingScopeException.scope"]},{"name":"val scopes: List<Scope>","description":"com.rnett.krosstalk.Krosstalk.scopes","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk/scopes.html","searchKeys":["scopes","val scopes: List<Scope>","com.rnett.krosstalk.Krosstalk.scopes"]},{"name":"val serialization: MethodSerialization","description":"com.rnett.krosstalk.MethodDefinition.serialization","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/serialization.html","searchKeys":["serialization","val serialization: MethodSerialization","com.rnett.krosstalk.MethodDefinition.serialization"]},{"name":"val serializer: KSerializer<T>","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/serializer.html","searchKeys":["serializer","val serializer: KSerializer<T>","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serializer"]},{"name":"val serializer: KSerializer<T>","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.serializer","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/serializer.html","searchKeys":["serializer","val serializer: KSerializer<T>","com.rnett.krosstalk.serialization.KotlinxStringSerializer.serializer"]},{"name":"val serverDefaultParameters: Set<String>","description":"com.rnett.krosstalk.MethodDefinition.serverDefaultParameters","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/server-default-parameters.html","searchKeys":["serverDefaultParameters","val serverDefaultParameters: Set<String>","com.rnett.krosstalk.MethodDefinition.serverDefaultParameters"]},{"name":"val serverExceptionOrNull: KrosstalkResult.ServerException?","description":"com.rnett.krosstalk.KrosstalkResult.serverExceptionOrNull","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/server-exception-or-null.html","searchKeys":["serverExceptionOrNull","val serverExceptionOrNull: KrosstalkResult.ServerException?","com.rnett.krosstalk.KrosstalkResult.serverExceptionOrNull"]},{"name":"val serverUrlParam: String?","description":"com.rnett.krosstalk.MethodDefinition.serverUrlParam","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/server-url-param.html","searchKeys":["serverUrlParam","val serverUrlParam: String?","com.rnett.krosstalk.MethodDefinition.serverUrlParam"]},{"name":"val statusCode: Int","description":"com.rnett.krosstalk.KrosstalkResult.HttpError.statusCode","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-http-error/status-code.html","searchKeys":["statusCode","val statusCode: Int","com.rnett.krosstalk.KrosstalkResult.HttpError.statusCode"]},{"name":"val statusCodeName: String?","description":"com.rnett.krosstalk.KrosstalkResult.HttpError.statusCodeName","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-http-error/status-code-name.html","searchKeys":["statusCodeName","val statusCodeName: String?","com.rnett.krosstalk.KrosstalkResult.HttpError.statusCodeName"]},{"name":"val subMessage: String","description":"com.rnett.krosstalk.MissingArgumentException.subMessage","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-missing-argument-exception/sub-message.html","searchKeys":["subMessage","val subMessage: String","com.rnett.krosstalk.MissingArgumentException.subMessage"]},{"name":"val subMessage: String","description":"com.rnett.krosstalk.WrongArgumentTypeException.subMessage","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-wrong-argument-type-exception/sub-message.html","searchKeys":["subMessage","val subMessage: String","com.rnett.krosstalk.WrongArgumentTypeException.subMessage"]},{"name":"val suppressed: List<KrosstalkResult.ServerException>","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.suppressed","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/suppressed.html","searchKeys":["suppressed","val suppressed: List<KrosstalkResult.ServerException>","com.rnett.krosstalk.KrosstalkResult.ServerException.suppressed"]},{"name":"val throwable: Throwable? = null","description":"com.rnett.krosstalk.KrosstalkResult.ServerException.throwable","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-server-exception/throwable.html","searchKeys":["throwable","val throwable: Throwable? = null","com.rnett.krosstalk.KrosstalkResult.ServerException.throwable"]},{"name":"val types: MethodTypes","description":"com.rnett.krosstalk.MethodDefinition.types","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/types.html","searchKeys":["types","val types: MethodTypes","com.rnett.krosstalk.MethodDefinition.types"]},{"name":"val url: Boolean","description":"com.rnett.krosstalk.serialization.MissingSerializerException.url","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk.serialization/-missing-serializer-exception/url.html","searchKeys":["url","val url: Boolean","com.rnett.krosstalk.serialization.MissingSerializerException.url"]},{"name":"val useExplicitResult: Boolean","description":"com.rnett.krosstalk.MethodDefinition.useExplicitResult","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-method-definition/use-explicit-result.html","searchKeys":["useExplicitResult","val useExplicitResult: Boolean","com.rnett.krosstalk.MethodDefinition.useExplicitResult"]},{"name":"val value: T","description":"com.rnett.krosstalk.KrosstalkResult.Success.value","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/-success/value.html","searchKeys":["value","val value: T","com.rnett.krosstalk.KrosstalkResult.Success.value"]},{"name":"val value: T","description":"com.rnett.krosstalk.ServerDefault.value","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-server-default/value.html","searchKeys":["value","val value: T","com.rnett.krosstalk.ServerDefault.value"]},{"name":"val value: T","description":"com.rnett.krosstalk.WithHeaders.value","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-with-headers/value.html","searchKeys":["value","val value: T","com.rnett.krosstalk.WithHeaders.value"]},{"name":"val valueOrNull: T?","description":"com.rnett.krosstalk.KrosstalkResult.valueOrNull","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/value-or-null.html","searchKeys":["valueOrNull","val valueOrNull: T?","com.rnett.krosstalk.KrosstalkResult.valueOrNull"]},{"name":"val valueOrThrow: T","description":"com.rnett.krosstalk.KrosstalkResult.valueOrThrow","location":"core/krosstalk/-krosstalk/com.rnett.krosstalk/-krosstalk-result/value-or-throw.html","searchKeys":["valueOrThrow","val valueOrThrow: T","com.rnett.krosstalk.KrosstalkResult.valueOrThrow"]},{"name":"abstract class KtorClientAuth<D> : KtorClientScope<D> ","description":"com.rnett.krosstalk.ktor.client.KtorClientAuth","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-auth/index.html","searchKeys":["KtorClientAuth","abstract class KtorClientAuth<D> : KtorClientScope<D> ","com.rnett.krosstalk.ktor.client.KtorClientAuth"]},{"name":"abstract fun Auth.configureClientAuth(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientAuth.configureClientAuth","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-auth/configure-client-auth.html","searchKeys":["configureClientAuth","abstract fun Auth.configureClientAuth(data: D)","com.rnett.krosstalk.ktor.client.KtorClientAuth.configureClientAuth"]},{"name":"abstract fun HeadersBuilder.headers(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.headers","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-header-scope/headers.html","searchKeys":["headers","abstract fun HeadersBuilder.headers(data: D)","com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.headers"]},{"name":"abstract override val client: KtorClient","description":"com.rnett.krosstalk.ktor.client.KtorKrosstalkClient.client","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-krosstalk-client/client.html","searchKeys":["client","abstract override val client: KtorClient","com.rnett.krosstalk.ktor.client.KtorKrosstalkClient.client"]},{"name":"class KtorClient(baseClient: HttpClient, baseRequest: HttpRequestBuilder.() -> Unit) : ClientHandler<KtorClientScope<*>> ","description":"com.rnett.krosstalk.ktor.client.KtorClient","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/index.html","searchKeys":["KtorClient","class KtorClient(baseClient: HttpClient, baseRequest: HttpRequestBuilder.() -> Unit) : ClientHandler<KtorClientScope<*>> ","com.rnett.krosstalk.ktor.client.KtorClient"]},{"name":"data class BasicCredentials(username: String, password: String)","description":"com.rnett.krosstalk.ktor.client.BasicCredentials","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-basic-credentials/index.html","searchKeys":["BasicCredentials","data class BasicCredentials(username: String, password: String)","com.rnett.krosstalk.ktor.client.BasicCredentials"]},{"name":"fun BasicCredentials(username: String, password: String)","description":"com.rnett.krosstalk.ktor.client.BasicCredentials.BasicCredentials","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-basic-credentials/-basic-credentials.html","searchKeys":["BasicCredentials","fun BasicCredentials(username: String, password: String)","com.rnett.krosstalk.ktor.client.BasicCredentials.BasicCredentials"]},{"name":"fun KtorClient(baseClient: HttpClient = HttpClient(), baseRequest: HttpRequestBuilder.() -> Unit = {})","description":"com.rnett.krosstalk.ktor.client.KtorClient.KtorClient","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/-ktor-client.html","searchKeys":["KtorClient","fun KtorClient(baseClient: HttpClient = HttpClient(), baseRequest: HttpRequestBuilder.() -> Unit = {})","com.rnett.krosstalk.ktor.client.KtorClient.KtorClient"]},{"name":"fun KtorClientAuth()","description":"com.rnett.krosstalk.ktor.client.KtorClientAuth.KtorClientAuth","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-auth/-ktor-client-auth.html","searchKeys":["KtorClientAuth","fun KtorClientAuth()","com.rnett.krosstalk.ktor.client.KtorClientAuth.KtorClientAuth"]},{"name":"fun KtorClientBasicAuth(sendWithoutRequest: Boolean = true, realm: String? = null)","description":"com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.KtorClientBasicAuth","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-basic-auth/-ktor-client-basic-auth.html","searchKeys":["KtorClientBasicAuth","fun KtorClientBasicAuth(sendWithoutRequest: Boolean = true, realm: String? = null)","com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.KtorClientBasicAuth"]},{"name":"fun fun interface KtorClientHeaderScope<D> : KtorClientScope<D> ","description":"com.rnett.krosstalk.ktor.client.KtorClientHeaderScope","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-header-scope/index.html","searchKeys":["KtorClientHeaderScope","fun fun interface KtorClientHeaderScope<D> : KtorClientScope<D> ","com.rnett.krosstalk.ktor.client.KtorClientHeaderScope"]},{"name":"interface KtorClientScope<in D> : ClientScope<D> ","description":"com.rnett.krosstalk.ktor.client.KtorClientScope","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-scope/index.html","searchKeys":["KtorClientScope","interface KtorClientScope<in D> : ClientScope<D> ","com.rnett.krosstalk.ktor.client.KtorClientScope"]},{"name":"interface KtorKrosstalkClient : KrosstalkClient<KtorClientScope<*>> ","description":"com.rnett.krosstalk.ktor.client.KtorKrosstalkClient","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-krosstalk-client/index.html","searchKeys":["KtorKrosstalkClient","interface KtorKrosstalkClient : KrosstalkClient<KtorClientScope<*>> ","com.rnett.krosstalk.ktor.client.KtorKrosstalkClient"]},{"name":"open class KtorClientBasicAuth(sendWithoutRequest: Boolean, realm: String?) : KtorClientAuth<BasicCredentials> ","description":"com.rnett.krosstalk.ktor.client.KtorClientBasicAuth","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-basic-auth/index.html","searchKeys":["KtorClientBasicAuth","open class KtorClientBasicAuth(sendWithoutRequest: Boolean, realm: String?) : KtorClientAuth<BasicCredentials> ","com.rnett.krosstalk.ktor.client.KtorClientBasicAuth"]},{"name":"open fun HttpClientConfig<*>.configureClient(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientScope.configureClient","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-scope/configure-client.html","searchKeys":["configureClient","open fun HttpClientConfig<*>.configureClient(data: D)","com.rnett.krosstalk.ktor.client.KtorClientScope.configureClient"]},{"name":"open fun HttpRequestBuilder.configureRequest(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientScope.configureRequest","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-scope/configure-request.html","searchKeys":["configureRequest","open fun HttpRequestBuilder.configureRequest(data: D)","com.rnett.krosstalk.ktor.client.KtorClientScope.configureRequest"]},{"name":"open override fun Auth.configureClientAuth(data: BasicCredentials)","description":"com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.configureClientAuth","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-basic-auth/configure-client-auth.html","searchKeys":["configureClientAuth","open override fun Auth.configureClientAuth(data: BasicCredentials)","com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.configureClientAuth"]},{"name":"open override fun HttpClientConfig<*>.configureClient(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientAuth.configureClient","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-auth/configure-client.html","searchKeys":["configureClient","open override fun HttpClientConfig<*>.configureClient(data: D)","com.rnett.krosstalk.ktor.client.KtorClientAuth.configureClient"]},{"name":"open override fun HttpRequestBuilder.configureRequest(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.configureRequest","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-header-scope/configure-request.html","searchKeys":["configureRequest","open override fun HttpRequestBuilder.configureRequest(data: D)","com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.configureRequest"]},{"name":"open suspend override fun sendKrosstalkRequest(url: String, httpMethod: String, contentType: String, additionalHeaders: Headers, body: ByteArray?, scopes: List<AppliedClientScope<KtorClientScope<*>, *>>): InternalKrosstalkResponse","description":"com.rnett.krosstalk.ktor.client.KtorClient.sendKrosstalkRequest","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/send-krosstalk-request.html","searchKeys":["sendKrosstalkRequest","open suspend override fun sendKrosstalkRequest(url: String, httpMethod: String, contentType: String, additionalHeaders: Headers, body: ByteArray?, scopes: List<AppliedClientScope<KtorClientScope<*>, *>>): InternalKrosstalkResponse","com.rnett.krosstalk.ktor.client.KtorClient.sendKrosstalkRequest"]},{"name":"operator fun <T : KtorClientBasicAuth> T.invoke(username: String, password: String): ScopeInstance<T>","description":"com.rnett.krosstalk.ktor.client.invoke","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/invoke.html","searchKeys":["invoke","operator fun <T : KtorClientBasicAuth> T.invoke(username: String, password: String): ScopeInstance<T>","com.rnett.krosstalk.ktor.client.invoke"]},{"name":"val baseClient: HttpClient","description":"com.rnett.krosstalk.ktor.client.KtorClient.baseClient","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/base-client.html","searchKeys":["baseClient","val baseClient: HttpClient","com.rnett.krosstalk.ktor.client.KtorClient.baseClient"]},{"name":"val baseRequest: HttpRequestBuilder.() -> Unit","description":"com.rnett.krosstalk.ktor.client.KtorClient.baseRequest","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/base-request.html","searchKeys":["baseRequest","val baseRequest: HttpRequestBuilder.() -> Unit","com.rnett.krosstalk.ktor.client.KtorClient.baseRequest"]},{"name":"val password: String","description":"com.rnett.krosstalk.ktor.client.BasicCredentials.password","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-basic-credentials/password.html","searchKeys":["password","val password: String","com.rnett.krosstalk.ktor.client.BasicCredentials.password"]},{"name":"val realm: String? = null","description":"com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.realm","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-basic-auth/realm.html","searchKeys":["realm","val realm: String? = null","com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.realm"]},{"name":"val sendWithoutRequest: Boolean = true","description":"com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.sendWithoutRequest","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-basic-auth/send-without-request.html","searchKeys":["sendWithoutRequest","val sendWithoutRequest: Boolean = true","com.rnett.krosstalk.ktor.client.KtorClientBasicAuth.sendWithoutRequest"]},{"name":"val username: String","description":"com.rnett.krosstalk.ktor.client.BasicCredentials.username","location":"ktor/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-basic-credentials/username.html","searchKeys":["username","val username: String","com.rnett.krosstalk.ktor.client.BasicCredentials.username"]},{"name":"abstract class KrosstalkException constructor(message: String, cause: Throwable?) : RuntimeException","description":"com.rnett.krosstalk.KrosstalkException","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-krosstalk-exception/index.html","searchKeys":["KrosstalkException","abstract class KrosstalkException constructor(message: String, cause: Throwable?) : RuntimeException","com.rnett.krosstalk.KrosstalkException"]},{"name":"abstract fun enumerate(): Set<ResolveEndpoint>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.enumerate","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/enumerate.html","searchKeys":["enumerate","abstract fun enumerate(): Set<ResolveEndpoint>","com.rnett.krosstalk.endpoint.EndpointResolveTree.enumerate"]},{"name":"abstract fun resolve(url: UrlRequest): Map<String, String>?","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.resolve","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/resolve.html","searchKeys":["resolve","abstract fun resolve(url: UrlRequest): Map<String, String>?","com.rnett.krosstalk.endpoint.EndpointResolveTree.resolve"]},{"name":"abstract fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<L>?","description":"com.rnett.krosstalk.endpoint.EndpointPart.resolveOptionals","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/resolve-optionals.html","searchKeys":["resolveOptionals","abstract fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<L>?","com.rnett.krosstalk.endpoint.EndpointPart.resolveOptionals"]},{"name":"abstract val isOptional: Boolean","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.isOptional","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/is-optional.html","searchKeys":["isOptional","abstract val isOptional: Boolean","com.rnett.krosstalk.endpoint.ResolveQueryParam.isOptional"]},{"name":"annotation class InternalKrosstalkApi","description":"com.rnett.krosstalk.InternalKrosstalkApi","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-internal-krosstalk-api/index.html","searchKeys":["InternalKrosstalkApi","annotation class InternalKrosstalkApi","com.rnett.krosstalk.InternalKrosstalkApi"]},{"name":"annotation class KrosstalkPluginApi","description":"com.rnett.krosstalk.KrosstalkPluginApi","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-krosstalk-plugin-api/index.html","searchKeys":["KrosstalkPluginApi","annotation class KrosstalkPluginApi","com.rnett.krosstalk.KrosstalkPluginApi"]},{"name":"class EndpointUnknownArgumentException constructor(methodName: String, endpointTemplate: Endpoint, missingParam: String, knownParams: Set<String>) : KrosstalkException","description":"com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-unknown-argument-exception/index.html","searchKeys":["EndpointUnknownArgumentException","class EndpointUnknownArgumentException constructor(methodName: String, endpointTemplate: Endpoint, missingParam: String, knownParams: Set<String>) : KrosstalkException","com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException"]},{"name":"const val defaultEndpoint: String","description":"com.rnett.krosstalk.defaultEndpoint","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/default-endpoint.html","searchKeys":["defaultEndpoint","const val defaultEndpoint: String","com.rnett.krosstalk.defaultEndpoint"]},{"name":"const val defaultEndpointHttpMethod: String","description":"com.rnett.krosstalk.defaultEndpointHttpMethod","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/default-endpoint-http-method.html","searchKeys":["defaultEndpointHttpMethod","const val defaultEndpointHttpMethod: String","com.rnett.krosstalk.defaultEndpointHttpMethod"]},{"name":"const val extensionReceiver: String","description":"com.rnett.krosstalk.extensionReceiver","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/extension-receiver.html","searchKeys":["extensionReceiver","const val extensionReceiver: String","com.rnett.krosstalk.extensionReceiver"]},{"name":"const val instanceReceiver: String","description":"com.rnett.krosstalk.instanceReceiver","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/instance-receiver.html","searchKeys":["instanceReceiver","const val instanceReceiver: String","com.rnett.krosstalk.instanceReceiver"]},{"name":"const val krosstalkPrefix: String","description":"com.rnett.krosstalk.krosstalkPrefix","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/krosstalk-prefix.html","searchKeys":["krosstalkPrefix","const val krosstalkPrefix: String","com.rnett.krosstalk.krosstalkPrefix"]},{"name":"const val methodName: String","description":"com.rnett.krosstalk.methodName","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/method-name.html","searchKeys":["methodName","const val methodName: String","com.rnett.krosstalk.methodName"]},{"name":"data class Endpoint(urlParts: EndpointRegion.UrlParts, queryParameters: EndpointRegion.QueryParameters)","description":"com.rnett.krosstalk.endpoint.Endpoint","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/index.html","searchKeys":["Endpoint","data class Endpoint(urlParts: EndpointRegion.UrlParts, queryParameters: EndpointRegion.QueryParameters)","com.rnett.krosstalk.endpoint.Endpoint"]},{"name":"data class Fork(options: Set<EndpointResolveTree>) : EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-fork/index.html","searchKeys":["Fork","data class Fork(options: Set<EndpointResolveTree>) : EndpointResolveTree","com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork"]},{"name":"data class Leaf(full: List<ResolveUrlPart>, takenOptions: Set<String>, untakenOptions: Set<String>, queryParams: Map<String, ResolveQueryParam>) : EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/index.html","searchKeys":["Leaf","data class Leaf(full: List<ResolveUrlPart>, takenOptions: Set<String>, untakenOptions: Set<String>, queryParams: Map<String, ResolveQueryParam>) : EndpointResolveTree","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf"]},{"name":"data class Multiple(parts: List<ResolveUrlPart>, node: EndpointResolveTree) : EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-multiple/index.html","searchKeys":["Multiple","data class Multiple(parts: List<ResolveUrlPart>, node: EndpointResolveTree) : EndpointResolveTree","com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple"]},{"name":"data class Optional<L : EndpointRegion>(key: String, part: EndpointPart<L>) : EndpointPart<L> ","description":"com.rnett.krosstalk.endpoint.EndpointPart.Optional","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-optional/index.html","searchKeys":["Optional","data class Optional<L : EndpointRegion>(key: String, part: EndpointPart<L>) : EndpointPart<L> ","com.rnett.krosstalk.endpoint.EndpointPart.Optional"]},{"name":"data class Param(param: String) : ResolveUrlPart","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Param","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-param/index.html","searchKeys":["Param","data class Param(param: String) : ResolveUrlPart","com.rnett.krosstalk.endpoint.ResolveUrlPart.Param"]},{"name":"data class Param(param: String, isOptional: Boolean) : ResolveQueryParam","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Param","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-param/index.html","searchKeys":["Param","data class Param(param: String, isOptional: Boolean) : ResolveQueryParam","com.rnett.krosstalk.endpoint.ResolveQueryParam.Param"]},{"name":"data class Parameter(param: String) : EndpointPart<EndpointRegion> ","description":"com.rnett.krosstalk.endpoint.EndpointPart.Parameter","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-parameter/index.html","searchKeys":["Parameter","data class Parameter(param: String) : EndpointPart<EndpointRegion> ","com.rnett.krosstalk.endpoint.EndpointPart.Parameter"]},{"name":"data class QueryParameters(parameters: Map<String, EndpointQueryParameter>) : EndpointRegion, Map<String, EndpointPart<EndpointRegion.QueryParameters>> ","description":"com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-query-parameters/index.html","searchKeys":["QueryParameters","data class QueryParameters(parameters: Map<String, EndpointQueryParameter>) : EndpointRegion, Map<String, EndpointPart<EndpointRegion.QueryParameters>> ","com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters"]},{"name":"data class ResolveEndpoint(urlParts: List<ResolveUrlPart>, queryParams: Map<String, ResolveQueryParam>)","description":"com.rnett.krosstalk.endpoint.ResolveEndpoint","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-endpoint/index.html","searchKeys":["ResolveEndpoint","data class ResolveEndpoint(urlParts: List<ResolveUrlPart>, queryParams: Map<String, ResolveQueryParam>)","com.rnett.krosstalk.endpoint.ResolveEndpoint"]},{"name":"data class Static(part: String) : EndpointPart<EndpointRegion> ","description":"com.rnett.krosstalk.endpoint.EndpointPart.Static","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-static/index.html","searchKeys":["Static","data class Static(part: String) : EndpointPart<EndpointRegion> ","com.rnett.krosstalk.endpoint.EndpointPart.Static"]},{"name":"data class Static(value: String) : ResolveUrlPart","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Static","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-static/index.html","searchKeys":["Static","data class Static(value: String) : ResolveUrlPart","com.rnett.krosstalk.endpoint.ResolveUrlPart.Static"]},{"name":"data class Static(value: String, isOptional: Boolean) : ResolveQueryParam","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Static","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-static/index.html","searchKeys":["Static","data class Static(value: String, isOptional: Boolean) : ResolveQueryParam","com.rnett.krosstalk.endpoint.ResolveQueryParam.Static"]},{"name":"data class UrlParts(parts: List<EndpointUrlPart>) : EndpointRegion, List<EndpointPart<EndpointRegion.UrlParts>> ","description":"com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-url-parts/index.html","searchKeys":["UrlParts","data class UrlParts(parts: List<EndpointUrlPart>) : EndpointRegion, List<EndpointPart<EndpointRegion.UrlParts>> ","com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts"]},{"name":"data class UrlRequest(urlParts: List<String>, queryParams: Map<String, String>)","description":"com.rnett.krosstalk.endpoint.UrlRequest","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/index.html","searchKeys":["UrlRequest","data class UrlRequest(urlParts: List<String>, queryParams: Map<String, String>)","com.rnett.krosstalk.endpoint.UrlRequest"]},{"name":"fun <L : EndpointRegion> Optional(key: String, part: EndpointPart<L>)","description":"com.rnett.krosstalk.endpoint.EndpointPart.Optional.Optional","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-optional/-optional.html","searchKeys":["Optional","fun <L : EndpointRegion> Optional(key: String, part: EndpointPart<L>)","com.rnett.krosstalk.endpoint.EndpointPart.Optional.Optional"]},{"name":"fun CompilerError(message: String, cause: Throwable? = null)","description":"com.rnett.krosstalk.KrosstalkException.CompilerError.CompilerError","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-krosstalk-exception/-compiler-error/-compiler-error.html","searchKeys":["CompilerError","fun CompilerError(message: String, cause: Throwable? = null)","com.rnett.krosstalk.KrosstalkException.CompilerError.CompilerError"]},{"name":"fun Endpoint(urlParts: EndpointRegion.UrlParts, queryParameters: EndpointRegion.QueryParameters)","description":"com.rnett.krosstalk.endpoint.Endpoint.Endpoint","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/-endpoint.html","searchKeys":["Endpoint","fun Endpoint(urlParts: EndpointRegion.UrlParts, queryParameters: EndpointRegion.QueryParameters)","com.rnett.krosstalk.endpoint.Endpoint.Endpoint"]},{"name":"fun EndpointUnknownArgumentException(methodName: String, endpointTemplate: Endpoint, missingParam: String, knownParams: Set<String>)","description":"com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.EndpointUnknownArgumentException","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-unknown-argument-exception/-endpoint-unknown-argument-exception.html","searchKeys":["EndpointUnknownArgumentException","fun EndpointUnknownArgumentException(methodName: String, endpointTemplate: Endpoint, missingParam: String, knownParams: Set<String>)","com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.EndpointUnknownArgumentException"]},{"name":"fun Fork(options: Set<EndpointResolveTree>)","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.Fork","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-fork/-fork.html","searchKeys":["Fork","fun Fork(options: Set<EndpointResolveTree>)","com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.Fork"]},{"name":"fun InternalKrosstalkApi()","description":"com.rnett.krosstalk.InternalKrosstalkApi.InternalKrosstalkApi","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-internal-krosstalk-api/-internal-krosstalk-api.html","searchKeys":["InternalKrosstalkApi","fun InternalKrosstalkApi()","com.rnett.krosstalk.InternalKrosstalkApi.InternalKrosstalkApi"]},{"name":"fun KrosstalkException(message: String, cause: Throwable? = null)","description":"com.rnett.krosstalk.KrosstalkException.KrosstalkException","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-krosstalk-exception/-krosstalk-exception.html","searchKeys":["KrosstalkException","fun KrosstalkException(message: String, cause: Throwable? = null)","com.rnett.krosstalk.KrosstalkException.KrosstalkException"]},{"name":"fun KrosstalkPluginApi()","description":"com.rnett.krosstalk.KrosstalkPluginApi.KrosstalkPluginApi","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-krosstalk-plugin-api/-krosstalk-plugin-api.html","searchKeys":["KrosstalkPluginApi","fun KrosstalkPluginApi()","com.rnett.krosstalk.KrosstalkPluginApi.KrosstalkPluginApi"]},{"name":"fun Leaf(full: List<ResolveUrlPart>, takenOptions: Set<String>, untakenOptions: Set<String>, queryParams: Map<String, ResolveQueryParam>)","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.Leaf","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/-leaf.html","searchKeys":["Leaf","fun Leaf(full: List<ResolveUrlPart>, takenOptions: Set<String>, untakenOptions: Set<String>, queryParams: Map<String, ResolveQueryParam>)","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.Leaf"]},{"name":"fun Multiple(parts: List<ResolveUrlPart>, node: EndpointResolveTree)","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.Multiple","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-multiple/-multiple.html","searchKeys":["Multiple","fun Multiple(parts: List<ResolveUrlPart>, node: EndpointResolveTree)","com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.Multiple"]},{"name":"fun Param(param: String)","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Param.Param","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-param/-param.html","searchKeys":["Param","fun Param(param: String)","com.rnett.krosstalk.endpoint.ResolveUrlPart.Param.Param"]},{"name":"fun Param(param: String, isOptional: Boolean)","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.Param","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-param/-param.html","searchKeys":["Param","fun Param(param: String, isOptional: Boolean)","com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.Param"]},{"name":"fun Parameter(param: String)","description":"com.rnett.krosstalk.endpoint.EndpointPart.Parameter.Parameter","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-parameter/-parameter.html","searchKeys":["Parameter","fun Parameter(param: String)","com.rnett.krosstalk.endpoint.EndpointPart.Parameter.Parameter"]},{"name":"fun QueryParameters(parameters: Map<String, EndpointQueryParameter>)","description":"com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters.QueryParameters","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-query-parameters/-query-parameters.html","searchKeys":["QueryParameters","fun QueryParameters(parameters: Map<String, EndpointQueryParameter>)","com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters.QueryParameters"]},{"name":"fun ResolveEndpoint(urlParts: List<ResolveUrlPart>, queryParams: Map<String, ResolveQueryParam>)","description":"com.rnett.krosstalk.endpoint.ResolveEndpoint.ResolveEndpoint","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-endpoint/-resolve-endpoint.html","searchKeys":["ResolveEndpoint","fun ResolveEndpoint(urlParts: List<ResolveUrlPart>, queryParams: Map<String, ResolveQueryParam>)","com.rnett.krosstalk.endpoint.ResolveEndpoint.ResolveEndpoint"]},{"name":"fun Static(part: String)","description":"com.rnett.krosstalk.endpoint.EndpointPart.Static.Static","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-static/-static.html","searchKeys":["Static","fun Static(part: String)","com.rnett.krosstalk.endpoint.EndpointPart.Static.Static"]},{"name":"fun Static(value: String)","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Static.Static","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-static/-static.html","searchKeys":["Static","fun Static(value: String)","com.rnett.krosstalk.endpoint.ResolveUrlPart.Static.Static"]},{"name":"fun Static(value: String, isOptional: Boolean)","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.Static","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-static/-static.html","searchKeys":["Static","fun Static(value: String, isOptional: Boolean)","com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.Static"]},{"name":"fun UrlParts(parts: List<EndpointUrlPart>)","description":"com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts.UrlParts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-url-parts/-url-parts.html","searchKeys":["UrlParts","fun UrlParts(parts: List<EndpointUrlPart>)","com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts.UrlParts"]},{"name":"fun UrlRequest(url: String)","description":"com.rnett.krosstalk.endpoint.UrlRequest.UrlRequest","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/-url-request.html","searchKeys":["UrlRequest","fun UrlRequest(url: String)","com.rnett.krosstalk.endpoint.UrlRequest.UrlRequest"]},{"name":"fun UrlRequest(urlParts: List<String>, queryParams: Map<String, String>)","description":"com.rnett.krosstalk.endpoint.UrlRequest.UrlRequest","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/-url-request.html","searchKeys":["UrlRequest","fun UrlRequest(urlParts: List<String>, queryParams: Map<String, String>)","com.rnett.krosstalk.endpoint.UrlRequest.UrlRequest"]},{"name":"fun allReferencedParameters(): Set<String>","description":"com.rnett.krosstalk.endpoint.Endpoint.allReferencedParameters","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/all-referenced-parameters.html","searchKeys":["allReferencedParameters","fun allReferencedParameters(): Set<String>","com.rnett.krosstalk.endpoint.Endpoint.allReferencedParameters"]},{"name":"fun build(parts: List<EndpointUrlPart>): List<ResolveUrlPart>","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Companion.build","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-companion/build.html","searchKeys":["build","fun build(parts: List<EndpointUrlPart>): List<ResolveUrlPart>","com.rnett.krosstalk.endpoint.ResolveUrlPart.Companion.build"]},{"name":"fun build(taken: Set<String>, untaken: Set<String>, urlParams: Map<String, EndpointQueryParameter>): Map<String, ResolveQueryParam>","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Companion.build","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-companion/build.html","searchKeys":["build","fun build(taken: Set<String>, untaken: Set<String>, urlParams: Map<String, EndpointQueryParameter>): Map<String, ResolveQueryParam>","com.rnett.krosstalk.endpoint.ResolveQueryParam.Companion.build"]},{"name":"fun parts(traverseOptionals: (String) -> Boolean): List<EndpointPart<L>>","description":"com.rnett.krosstalk.endpoint.EndpointPart.parts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/parts.html","searchKeys":["parts","fun parts(traverseOptionals: (String) -> Boolean): List<EndpointPart<L>>","com.rnett.krosstalk.endpoint.EndpointPart.parts"]},{"name":"fun resolve(url: String): Map<String, String>?","description":"com.rnett.krosstalk.endpoint.Endpoint.resolve","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/resolve.html","searchKeys":["resolve","fun resolve(url: String): Map<String, String>?","com.rnett.krosstalk.endpoint.Endpoint.resolve"]},{"name":"fun resolve(url: UrlRequest): Map<String, String>?","description":"com.rnett.krosstalk.endpoint.Endpoint.resolve","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/resolve.html","searchKeys":["resolve","fun resolve(url: UrlRequest): Map<String, String>?","com.rnett.krosstalk.endpoint.Endpoint.resolve"]},{"name":"fun resolveOptionals(usedOptionals: Set<String>): Endpoint","description":"com.rnett.krosstalk.endpoint.Endpoint.resolveOptionals","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/resolve-optionals.html","searchKeys":["resolveOptionals","fun resolveOptionals(usedOptionals: Set<String>): Endpoint","com.rnett.krosstalk.endpoint.Endpoint.resolveOptionals"]},{"name":"fun withoutPrefix(prefix: String): UrlRequest","description":"com.rnett.krosstalk.endpoint.UrlRequest.withoutPrefix","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/without-prefix.html","searchKeys":["withoutPrefix","fun withoutPrefix(prefix: String): UrlRequest","com.rnett.krosstalk.endpoint.UrlRequest.withoutPrefix"]},{"name":"fun withoutPrefixParts(prefix: List<String>): UrlRequest","description":"com.rnett.krosstalk.endpoint.UrlRequest.withoutPrefixParts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/without-prefix-parts.html","searchKeys":["withoutPrefixParts","fun withoutPrefixParts(prefix: List<String>): UrlRequest","com.rnett.krosstalk.endpoint.UrlRequest.withoutPrefixParts"]},{"name":"fun withoutQueryParams(params: Set<String>): UrlRequest","description":"com.rnett.krosstalk.endpoint.UrlRequest.withoutQueryParams","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/without-query-params.html","searchKeys":["withoutQueryParams","fun withoutQueryParams(params: Set<String>): UrlRequest","com.rnett.krosstalk.endpoint.UrlRequest.withoutQueryParams"]},{"name":"fun withoutStatic(template: String): Endpoint","description":"com.rnett.krosstalk.endpoint.Endpoint.Companion.withoutStatic","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/-companion/without-static.html","searchKeys":["withoutStatic","fun withoutStatic(template: String): Endpoint","com.rnett.krosstalk.endpoint.Endpoint.Companion.withoutStatic"]},{"name":"inline fun fillParameters(transform: (EndpointPart.Parameter) -> String?): Endpoint","description":"com.rnett.krosstalk.endpoint.Endpoint.fillParameters","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/fill-parameters.html","searchKeys":["fillParameters","inline fun fillParameters(transform: (EndpointPart.Parameter) -> String?): Endpoint","com.rnett.krosstalk.endpoint.Endpoint.fillParameters"]},{"name":"inline fun fillWithArgs(methodName: String, knownArguments: Set<String>, usedOptionals: Set<String>, getValue: (String) -> String): Pair<String, Set<String>>","description":"com.rnett.krosstalk.endpoint.Endpoint.fillWithArgs","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/fill-with-args.html","searchKeys":["fillWithArgs","inline fun fillWithArgs(methodName: String, knownArguments: Set<String>, usedOptionals: Set<String>, getValue: (String) -> String): Pair<String, Set<String>>","com.rnett.krosstalk.endpoint.Endpoint.fillWithArgs"]},{"name":"inline fun forEachPart(noinline traverseOptionals: (String) -> Boolean, block: (EndpointPart<*>) -> Unit)","description":"com.rnett.krosstalk.endpoint.Endpoint.forEachPart","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/for-each-part.html","searchKeys":["forEachPart","inline fun forEachPart(noinline traverseOptionals: (String) -> Boolean, block: (EndpointPart<*>) -> Unit)","com.rnett.krosstalk.endpoint.Endpoint.forEachPart"]},{"name":"inline fun forEachPart(traverseOptionals: Boolean = true, block: (EndpointPart<*>) -> Unit)","description":"com.rnett.krosstalk.endpoint.Endpoint.forEachPart","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/for-each-part.html","searchKeys":["forEachPart","inline fun forEachPart(traverseOptionals: Boolean = true, block: (EndpointPart<*>) -> Unit)","com.rnett.krosstalk.endpoint.Endpoint.forEachPart"]},{"name":"object Companion","description":"com.rnett.krosstalk.endpoint.Endpoint.Companion","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/-companion/index.html","searchKeys":["Companion","object Companion","com.rnett.krosstalk.endpoint.Endpoint.Companion"]},{"name":"object Companion","description":"com.rnett.krosstalk.endpoint.EndpointRegion.Companion","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-companion/index.html","searchKeys":["Companion","object Companion","com.rnett.krosstalk.endpoint.EndpointRegion.Companion"]},{"name":"object Companion","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Companion","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-companion/index.html","searchKeys":["Companion","object Companion","com.rnett.krosstalk.endpoint.EndpointResolveTree.Companion"]},{"name":"object Companion","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Companion","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-companion/index.html","searchKeys":["Companion","object Companion","com.rnett.krosstalk.endpoint.ResolveQueryParam.Companion"]},{"name":"object Companion","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Companion","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-companion/index.html","searchKeys":["Companion","object Companion","com.rnett.krosstalk.endpoint.ResolveUrlPart.Companion"]},{"name":"open class CompilerError constructor(message: String, cause: Throwable?) : KrosstalkException","description":"com.rnett.krosstalk.KrosstalkException.CompilerError","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk/-krosstalk-exception/-compiler-error/index.html","searchKeys":["CompilerError","open class CompilerError constructor(message: String, cause: Throwable?) : KrosstalkException","com.rnett.krosstalk.KrosstalkException.CompilerError"]},{"name":"open override fun enumerate(): Set<ResolveEndpoint>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.enumerate","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-fork/enumerate.html","searchKeys":["enumerate","open override fun enumerate(): Set<ResolveEndpoint>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.enumerate"]},{"name":"open override fun enumerate(): Set<ResolveEndpoint>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.enumerate","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/enumerate.html","searchKeys":["enumerate","open override fun enumerate(): Set<ResolveEndpoint>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.enumerate"]},{"name":"open override fun enumerate(): Set<ResolveEndpoint>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.enumerate","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-multiple/enumerate.html","searchKeys":["enumerate","open override fun enumerate(): Set<ResolveEndpoint>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.enumerate"]},{"name":"open override fun resolve(url: UrlRequest): Map<String, String>?","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.resolve","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-fork/resolve.html","searchKeys":["resolve","open override fun resolve(url: UrlRequest): Map<String, String>?","com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.resolve"]},{"name":"open override fun resolve(url: UrlRequest): Map<String, String>?","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.resolve","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/resolve.html","searchKeys":["resolve","open override fun resolve(url: UrlRequest): Map<String, String>?","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.resolve"]},{"name":"open override fun resolve(url: UrlRequest): Map<String, String>?","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.resolve","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-multiple/resolve.html","searchKeys":["resolve","open override fun resolve(url: UrlRequest): Map<String, String>?","com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.resolve"]},{"name":"open override fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<EndpointRegion>","description":"com.rnett.krosstalk.endpoint.EndpointPart.Parameter.resolveOptionals","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-parameter/resolve-optionals.html","searchKeys":["resolveOptionals","open override fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<EndpointRegion>","com.rnett.krosstalk.endpoint.EndpointPart.Parameter.resolveOptionals"]},{"name":"open override fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<EndpointRegion>","description":"com.rnett.krosstalk.endpoint.EndpointPart.Static.resolveOptionals","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-static/resolve-optionals.html","searchKeys":["resolveOptionals","open override fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<EndpointRegion>","com.rnett.krosstalk.endpoint.EndpointPart.Static.resolveOptionals"]},{"name":"open override fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<L>?","description":"com.rnett.krosstalk.endpoint.EndpointPart.Optional.resolveOptionals","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-optional/resolve-optionals.html","searchKeys":["resolveOptionals","open override fun resolveOptionals(taken: Set<String>, untaken: Set<String>): EndpointPart<L>?","com.rnett.krosstalk.endpoint.EndpointPart.Optional.resolveOptionals"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.Endpoint.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.Endpoint.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.EndpointPart.Optional.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-optional/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.EndpointPart.Optional.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.EndpointPart.Parameter.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-parameter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.EndpointPart.Parameter.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.EndpointPart.Static.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-static/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.EndpointPart.Static.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-query-parameters/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-url-parts/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.ResolveEndpoint.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-endpoint/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.ResolveEndpoint.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-param/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-static/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Param.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-param/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.ResolveUrlPart.Param.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Static.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-static/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.ResolveUrlPart.Static.toString"]},{"name":"open override fun toString(): String","description":"com.rnett.krosstalk.endpoint.UrlRequest.toString","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/to-string.html","searchKeys":["toString","open override fun toString(): String","com.rnett.krosstalk.endpoint.UrlRequest.toString"]},{"name":"open override val isOptional: Boolean","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.isOptional","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-param/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.isOptional"]},{"name":"open override val isOptional: Boolean","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.isOptional","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-static/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.isOptional"]},{"name":"operator fun invoke(endpoint: Endpoint): EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Companion.invoke","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(endpoint: Endpoint): EndpointResolveTree","com.rnett.krosstalk.endpoint.EndpointResolveTree.Companion.invoke"]},{"name":"operator fun invoke(parameters: Map<String, EndpointQueryParameter>): EndpointRegion.QueryParameters","description":"com.rnett.krosstalk.endpoint.EndpointRegion.Companion.invoke","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(parameters: Map<String, EndpointQueryParameter>): EndpointRegion.QueryParameters","com.rnett.krosstalk.endpoint.EndpointRegion.Companion.invoke"]},{"name":"operator fun invoke(part: EndpointQueryParameter): ResolveQueryParam","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Companion.invoke","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(part: EndpointQueryParameter): ResolveQueryParam","com.rnett.krosstalk.endpoint.ResolveQueryParam.Companion.invoke"]},{"name":"operator fun invoke(part: EndpointUrlPart): ResolveUrlPart","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Companion.invoke","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(part: EndpointUrlPart): ResolveUrlPart","com.rnett.krosstalk.endpoint.ResolveUrlPart.Companion.invoke"]},{"name":"operator fun invoke(parts: List<EndpointUrlPart>): EndpointRegion.UrlParts","description":"com.rnett.krosstalk.endpoint.EndpointRegion.Companion.invoke","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(parts: List<EndpointUrlPart>): EndpointRegion.UrlParts","com.rnett.krosstalk.endpoint.EndpointRegion.Companion.invoke"]},{"name":"operator fun invoke(template: String, methodName: String, prefix: String): Endpoint","description":"com.rnett.krosstalk.endpoint.Endpoint.Companion.invoke","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(template: String, methodName: String, prefix: String): Endpoint","com.rnett.krosstalk.endpoint.Endpoint.Companion.invoke"]},{"name":"operator fun invoke(urlParts: List<EndpointUrlPart>, urlParams: Map<String, EndpointQueryParameter>): EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Companion.invoke","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(urlParts: List<EndpointUrlPart>, urlParams: Map<String, EndpointQueryParameter>): EndpointResolveTree","com.rnett.krosstalk.endpoint.EndpointResolveTree.Companion.invoke"]},{"name":"sealed class EndpointPart<in L : EndpointRegion>","description":"com.rnett.krosstalk.endpoint.EndpointPart","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/index.html","searchKeys":["EndpointPart","sealed class EndpointPart<in L : EndpointRegion>","com.rnett.krosstalk.endpoint.EndpointPart"]},{"name":"sealed class EndpointRegion","description":"com.rnett.krosstalk.endpoint.EndpointRegion","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/index.html","searchKeys":["EndpointRegion","sealed class EndpointRegion","com.rnett.krosstalk.endpoint.EndpointRegion"]},{"name":"sealed class EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/index.html","searchKeys":["EndpointResolveTree","sealed class EndpointResolveTree","com.rnett.krosstalk.endpoint.EndpointResolveTree"]},{"name":"sealed class ResolveQueryParam","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/index.html","searchKeys":["ResolveQueryParam","sealed class ResolveQueryParam","com.rnett.krosstalk.endpoint.ResolveQueryParam"]},{"name":"sealed class ResolveUrlPart","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/index.html","searchKeys":["ResolveUrlPart","sealed class ResolveUrlPart","com.rnett.krosstalk.endpoint.ResolveUrlPart"]},{"name":"val allParts: List<EndpointPart<L>>","description":"com.rnett.krosstalk.endpoint.EndpointPart.allParts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/all-parts.html","searchKeys":["allParts","val allParts: List<EndpointPart<L>>","com.rnett.krosstalk.endpoint.EndpointPart.allParts"]},{"name":"val allResolvePaths: Set<ResolveEndpoint>","description":"com.rnett.krosstalk.endpoint.Endpoint.allResolvePaths","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/all-resolve-paths.html","searchKeys":["allResolvePaths","val allResolvePaths: Set<ResolveEndpoint>","com.rnett.krosstalk.endpoint.Endpoint.allResolvePaths"]},{"name":"val endpointTemplate: Endpoint","description":"com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.endpointTemplate","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-unknown-argument-exception/endpoint-template.html","searchKeys":["endpointTemplate","val endpointTemplate: Endpoint","com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.endpointTemplate"]},{"name":"val full: List<ResolveUrlPart>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.full","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/full.html","searchKeys":["full","val full: List<ResolveUrlPart>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.full"]},{"name":"val key: String","description":"com.rnett.krosstalk.endpoint.EndpointPart.Optional.key","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-optional/key.html","searchKeys":["key","val key: String","com.rnett.krosstalk.endpoint.EndpointPart.Optional.key"]},{"name":"val knownParams: Set<String>","description":"com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.knownParams","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-unknown-argument-exception/known-params.html","searchKeys":["knownParams","val knownParams: Set<String>","com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.knownParams"]},{"name":"val methodName: String","description":"com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.methodName","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-unknown-argument-exception/method-name.html","searchKeys":["methodName","val methodName: String","com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.methodName"]},{"name":"val missingParam: String","description":"com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.missingParam","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-unknown-argument-exception/missing-param.html","searchKeys":["missingParam","val missingParam: String","com.rnett.krosstalk.endpoint.EndpointUnknownArgumentException.missingParam"]},{"name":"val node: EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.node","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-multiple/node.html","searchKeys":["node","val node: EndpointResolveTree","com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.node"]},{"name":"val options: Set<EndpointResolveTree>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.options","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-fork/options.html","searchKeys":["options","val options: Set<EndpointResolveTree>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Fork.options"]},{"name":"val param: String","description":"com.rnett.krosstalk.endpoint.EndpointPart.Parameter.param","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-parameter/param.html","searchKeys":["param","val param: String","com.rnett.krosstalk.endpoint.EndpointPart.Parameter.param"]},{"name":"val param: String","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.param","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-param/param.html","searchKeys":["param","val param: String","com.rnett.krosstalk.endpoint.ResolveQueryParam.Param.param"]},{"name":"val param: String","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Param.param","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-param/param.html","searchKeys":["param","val param: String","com.rnett.krosstalk.endpoint.ResolveUrlPart.Param.param"]},{"name":"val parameters: Map<String, EndpointQueryParameter>","description":"com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters.parameters","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-query-parameters/parameters.html","searchKeys":["parameters","val parameters: Map<String, EndpointQueryParameter>","com.rnett.krosstalk.endpoint.EndpointRegion.QueryParameters.parameters"]},{"name":"val part: EndpointPart<L>","description":"com.rnett.krosstalk.endpoint.EndpointPart.Optional.part","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-optional/part.html","searchKeys":["part","val part: EndpointPart<L>","com.rnett.krosstalk.endpoint.EndpointPart.Optional.part"]},{"name":"val part: String","description":"com.rnett.krosstalk.endpoint.EndpointPart.Static.part","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-part/-static/part.html","searchKeys":["part","val part: String","com.rnett.krosstalk.endpoint.EndpointPart.Static.part"]},{"name":"val parts: List<EndpointUrlPart>","description":"com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts.parts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-region/-url-parts/parts.html","searchKeys":["parts","val parts: List<EndpointUrlPart>","com.rnett.krosstalk.endpoint.EndpointRegion.UrlParts.parts"]},{"name":"val parts: List<ResolveUrlPart>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.parts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-multiple/parts.html","searchKeys":["parts","val parts: List<ResolveUrlPart>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Multiple.parts"]},{"name":"val queryParameters: EndpointRegion.QueryParameters","description":"com.rnett.krosstalk.endpoint.Endpoint.queryParameters","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/query-parameters.html","searchKeys":["queryParameters","val queryParameters: EndpointRegion.QueryParameters","com.rnett.krosstalk.endpoint.Endpoint.queryParameters"]},{"name":"val queryParams: Map<String, ResolveQueryParam>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.queryParams","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/query-params.html","searchKeys":["queryParams","val queryParams: Map<String, ResolveQueryParam>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.queryParams"]},{"name":"val queryParams: Map<String, ResolveQueryParam>","description":"com.rnett.krosstalk.endpoint.ResolveEndpoint.queryParams","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-endpoint/query-params.html","searchKeys":["queryParams","val queryParams: Map<String, ResolveQueryParam>","com.rnett.krosstalk.endpoint.ResolveEndpoint.queryParams"]},{"name":"val queryParams: Map<String, String>","description":"com.rnett.krosstalk.endpoint.UrlRequest.queryParams","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/query-params.html","searchKeys":["queryParams","val queryParams: Map<String, String>","com.rnett.krosstalk.endpoint.UrlRequest.queryParams"]},{"name":"val resolveTree: EndpointResolveTree","description":"com.rnett.krosstalk.endpoint.Endpoint.resolveTree","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/resolve-tree.html","searchKeys":["resolveTree","val resolveTree: EndpointResolveTree","com.rnett.krosstalk.endpoint.Endpoint.resolveTree"]},{"name":"val resolvedEndpoint: ResolveEndpoint","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.resolvedEndpoint","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/resolved-endpoint.html","searchKeys":["resolvedEndpoint","val resolvedEndpoint: ResolveEndpoint","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.resolvedEndpoint"]},{"name":"val takenOptions: Set<String>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.takenOptions","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/taken-options.html","searchKeys":["takenOptions","val takenOptions: Set<String>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.takenOptions"]},{"name":"val untakenOptions: Set<String>","description":"com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.untakenOptions","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint-resolve-tree/-leaf/untaken-options.html","searchKeys":["untakenOptions","val untakenOptions: Set<String>","com.rnett.krosstalk.endpoint.EndpointResolveTree.Leaf.untakenOptions"]},{"name":"val urlParts: EndpointRegion.UrlParts","description":"com.rnett.krosstalk.endpoint.Endpoint.urlParts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-endpoint/url-parts.html","searchKeys":["urlParts","val urlParts: EndpointRegion.UrlParts","com.rnett.krosstalk.endpoint.Endpoint.urlParts"]},{"name":"val urlParts: List<ResolveUrlPart>","description":"com.rnett.krosstalk.endpoint.ResolveEndpoint.urlParts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-endpoint/url-parts.html","searchKeys":["urlParts","val urlParts: List<ResolveUrlPart>","com.rnett.krosstalk.endpoint.ResolveEndpoint.urlParts"]},{"name":"val urlParts: List<String>","description":"com.rnett.krosstalk.endpoint.UrlRequest.urlParts","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-url-request/url-parts.html","searchKeys":["urlParts","val urlParts: List<String>","com.rnett.krosstalk.endpoint.UrlRequest.urlParts"]},{"name":"val value: String","description":"com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.value","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-query-param/-static/value.html","searchKeys":["value","val value: String","com.rnett.krosstalk.endpoint.ResolveQueryParam.Static.value"]},{"name":"val value: String","description":"com.rnett.krosstalk.endpoint.ResolveUrlPart.Static.value","location":"core/krosstalk-core/-krosstalk -core/com.rnett.krosstalk.endpoint/-resolve-url-part/-static/value.html","searchKeys":["value","val value: String","com.rnett.krosstalk.endpoint.ResolveUrlPart.Static.value"]},{"name":"abstract suspend fun sendKrosstalkRequest(url: String, httpMethod: String, contentType: String, additionalHeaders: Headers, body: ByteArray?, scopes: List<AppliedClientScope<C, *>>): InternalKrosstalkResponse","description":"com.rnett.krosstalk.client.plugin.ClientHandler.sendKrosstalkRequest","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-client-handler/send-krosstalk-request.html","searchKeys":["sendKrosstalkRequest","abstract suspend fun sendKrosstalkRequest(url: String, httpMethod: String, contentType: String, additionalHeaders: Headers, body: ByteArray?, scopes: List<AppliedClientScope<C, *>>): InternalKrosstalkResponse","com.rnett.krosstalk.client.plugin.ClientHandler.sendKrosstalkRequest"]},{"name":"abstract val client: ClientHandler<C>","description":"com.rnett.krosstalk.client.KrosstalkClient.client","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-krosstalk-client/client.html","searchKeys":["client","abstract val client: ClientHandler<C>","com.rnett.krosstalk.client.KrosstalkClient.client"]},{"name":"abstract val serverUrl: String","description":"com.rnett.krosstalk.client.KrosstalkClient.serverUrl","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-krosstalk-client/server-url.html","searchKeys":["serverUrl","abstract val serverUrl: String","com.rnett.krosstalk.client.KrosstalkClient.serverUrl"]},{"name":"class InternalKrosstalkResponse(statusCode: Int, headers: Headers, body: ByteArray, stringBody: () -> String?)","description":"com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-internal-krosstalk-response/index.html","searchKeys":["InternalKrosstalkResponse","class InternalKrosstalkResponse(statusCode: Int, headers: Headers, body: ByteArray, stringBody: () -> String?)","com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse"]},{"name":"class ServerDefaultInEndpointException(methodName: String, parameter: String) : KrosstalkException","description":"com.rnett.krosstalk.client.ServerDefaultInEndpointException","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-server-default-in-endpoint-exception/index.html","searchKeys":["ServerDefaultInEndpointException","class ServerDefaultInEndpointException(methodName: String, parameter: String) : KrosstalkException","com.rnett.krosstalk.client.ServerDefaultInEndpointException"]},{"name":"class WrongHeadersTypeException constructor(methodName: String, type: KClass<*>) : KrosstalkException","description":"com.rnett.krosstalk.client.WrongHeadersTypeException","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-wrong-headers-type-exception/index.html","searchKeys":["WrongHeadersTypeException","class WrongHeadersTypeException constructor(methodName: String, type: KClass<*>) : KrosstalkException","com.rnett.krosstalk.client.WrongHeadersTypeException"]},{"name":"data class AppliedClientScope<T : ClientScope<D>, D>(scope: T, data: D)","description":"com.rnett.krosstalk.client.plugin.AppliedClientScope","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-applied-client-scope/index.html","searchKeys":["AppliedClientScope","data class AppliedClientScope<T : ClientScope<D>, D>(scope: T, data: D)","com.rnett.krosstalk.client.plugin.AppliedClientScope"]},{"name":"fun <C : ClientScope<*>, K : Krosstalk, KrosstalkClient<C>> K.scopesAsType(scopes: Iterable<Scope>): List<C>","description":"com.rnett.krosstalk.client.plugin.scopesAsType","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/scopes-as-type.html","searchKeys":["scopesAsType","fun <C : ClientScope<*>, K : Krosstalk, KrosstalkClient<C>> K.scopesAsType(scopes: Iterable<Scope>): List<C>","com.rnett.krosstalk.client.plugin.scopesAsType"]},{"name":"fun <T : ClientScope<D>, D> AppliedClientScope(scope: T, data: D)","description":"com.rnett.krosstalk.client.plugin.AppliedClientScope.AppliedClientScope","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-applied-client-scope/-applied-client-scope.html","searchKeys":["AppliedClientScope","fun <T : ClientScope<D>, D> AppliedClientScope(scope: T, data: D)","com.rnett.krosstalk.client.plugin.AppliedClientScope.AppliedClientScope"]},{"name":"fun CallFailureException(methodName: String, httpStatusCode: Int, responseMessage: String?, message: String = buildString {\n        append(\"Krosstalk method $methodName failed with HTTP status code $httpStatusCode\")\n        if (httpStatusCode in httpStatusCodes)\n            append(\": ${httpStatusCodes[httpStatusCode]}\")\n\n        if (responseMessage != null)\n            append(\" and response message: $responseMessage\")\n\n    })","description":"com.rnett.krosstalk.client.CallFailureException.CallFailureException","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-call-failure-exception/-call-failure-exception.html","searchKeys":["CallFailureException","fun CallFailureException(methodName: String, httpStatusCode: Int, responseMessage: String?, message: String = buildString {\n        append(\"Krosstalk method $methodName failed with HTTP status code $httpStatusCode\")\n        if (httpStatusCode in httpStatusCodes)\n            append(\": ${httpStatusCodes[httpStatusCode]}\")\n\n        if (responseMessage != null)\n            append(\" and response message: $responseMessage\")\n\n    })","com.rnett.krosstalk.client.CallFailureException.CallFailureException"]},{"name":"fun InternalKrosstalkResponse(statusCode: Int, headers: Headers, body: ByteArray, stringBody: () -> String?)","description":"com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.InternalKrosstalkResponse","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-internal-krosstalk-response/-internal-krosstalk-response.html","searchKeys":["InternalKrosstalkResponse","fun InternalKrosstalkResponse(statusCode: Int, headers: Headers, body: ByteArray, stringBody: () -> String?)","com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.InternalKrosstalkResponse"]},{"name":"fun ServerDefaultInEndpointException(methodName: String, parameter: String)","description":"com.rnett.krosstalk.client.ServerDefaultInEndpointException.ServerDefaultInEndpointException","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-server-default-in-endpoint-exception/-server-default-in-endpoint-exception.html","searchKeys":["ServerDefaultInEndpointException","fun ServerDefaultInEndpointException(methodName: String, parameter: String)","com.rnett.krosstalk.client.ServerDefaultInEndpointException.ServerDefaultInEndpointException"]},{"name":"fun WrongHeadersTypeException(methodName: String, type: KClass<*>)","description":"com.rnett.krosstalk.client.WrongHeadersTypeException.WrongHeadersTypeException","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-wrong-headers-type-exception/-wrong-headers-type-exception.html","searchKeys":["WrongHeadersTypeException","fun WrongHeadersTypeException(methodName: String, type: KClass<*>)","com.rnett.krosstalk.client.WrongHeadersTypeException.WrongHeadersTypeException"]},{"name":"interface ClientHandler<C : ClientScope<*>>","description":"com.rnett.krosstalk.client.plugin.ClientHandler","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-client-handler/index.html","searchKeys":["ClientHandler","interface ClientHandler<C : ClientScope<*>>","com.rnett.krosstalk.client.plugin.ClientHandler"]},{"name":"interface KrosstalkClient<C : ClientScope<*>>","description":"com.rnett.krosstalk.client.KrosstalkClient","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-krosstalk-client/index.html","searchKeys":["KrosstalkClient","interface KrosstalkClient<C : ClientScope<*>>","com.rnett.krosstalk.client.KrosstalkClient"]},{"name":"open class CallFailureException constructor(methodName: String, httpStatusCode: Int, responseMessage: String?, message: String) : KrosstalkException","description":"com.rnett.krosstalk.client.CallFailureException","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-call-failure-exception/index.html","searchKeys":["CallFailureException","open class CallFailureException constructor(methodName: String, httpStatusCode: Int, responseMessage: String?, message: String) : KrosstalkException","com.rnett.krosstalk.client.CallFailureException"]},{"name":"operator fun <T : ClientScope<C>, C> T.invoke(clientData: C): ScopeInstance<T>","description":"com.rnett.krosstalk.client.invoke","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/invoke.html","searchKeys":["invoke","operator fun <T : ClientScope<C>, C> T.invoke(clientData: C): ScopeInstance<T>","com.rnett.krosstalk.client.invoke"]},{"name":"suspend fun krosstalkCall(): Nothing","description":"com.rnett.krosstalk.client.krosstalkCall","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/krosstalk-call.html","searchKeys":["krosstalkCall","suspend fun krosstalkCall(): Nothing","com.rnett.krosstalk.client.krosstalkCall"]},{"name":"val <C : ClientScope<*>, K : Krosstalk, KrosstalkClient<C>> K.clientScopes: List<C>","description":"com.rnett.krosstalk.client.plugin.clientScopes","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/client-scopes.html","searchKeys":["clientScopes","val <C : ClientScope<*>, K : Krosstalk, KrosstalkClient<C>> K.clientScopes: List<C>","com.rnett.krosstalk.client.plugin.clientScopes"]},{"name":"val body: ByteArray","description":"com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.body","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-internal-krosstalk-response/body.html","searchKeys":["body","val body: ByteArray","com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.body"]},{"name":"val data: D","description":"com.rnett.krosstalk.client.plugin.AppliedClientScope.data","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-applied-client-scope/data.html","searchKeys":["data","val data: D","com.rnett.krosstalk.client.plugin.AppliedClientScope.data"]},{"name":"val headers: Headers","description":"com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.headers","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-internal-krosstalk-response/headers.html","searchKeys":["headers","val headers: Headers","com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.headers"]},{"name":"val httpStatusCode: Int","description":"com.rnett.krosstalk.client.CallFailureException.httpStatusCode","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-call-failure-exception/http-status-code.html","searchKeys":["httpStatusCode","val httpStatusCode: Int","com.rnett.krosstalk.client.CallFailureException.httpStatusCode"]},{"name":"val methodName: String","description":"com.rnett.krosstalk.client.CallFailureException.methodName","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-call-failure-exception/method-name.html","searchKeys":["methodName","val methodName: String","com.rnett.krosstalk.client.CallFailureException.methodName"]},{"name":"val methodName: String","description":"com.rnett.krosstalk.client.ServerDefaultInEndpointException.methodName","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-server-default-in-endpoint-exception/method-name.html","searchKeys":["methodName","val methodName: String","com.rnett.krosstalk.client.ServerDefaultInEndpointException.methodName"]},{"name":"val methodName: String","description":"com.rnett.krosstalk.client.WrongHeadersTypeException.methodName","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-wrong-headers-type-exception/method-name.html","searchKeys":["methodName","val methodName: String","com.rnett.krosstalk.client.WrongHeadersTypeException.methodName"]},{"name":"val parameter: String","description":"com.rnett.krosstalk.client.ServerDefaultInEndpointException.parameter","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-server-default-in-endpoint-exception/parameter.html","searchKeys":["parameter","val parameter: String","com.rnett.krosstalk.client.ServerDefaultInEndpointException.parameter"]},{"name":"val responseMessage: String?","description":"com.rnett.krosstalk.client.CallFailureException.responseMessage","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-call-failure-exception/response-message.html","searchKeys":["responseMessage","val responseMessage: String?","com.rnett.krosstalk.client.CallFailureException.responseMessage"]},{"name":"val scope: T","description":"com.rnett.krosstalk.client.plugin.AppliedClientScope.scope","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-applied-client-scope/scope.html","searchKeys":["scope","val scope: T","com.rnett.krosstalk.client.plugin.AppliedClientScope.scope"]},{"name":"val statusCode: Int","description":"com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.statusCode","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-internal-krosstalk-response/status-code.html","searchKeys":["statusCode","val statusCode: Int","com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.statusCode"]},{"name":"val stringBody: String?","description":"com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.stringBody","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client.plugin/-internal-krosstalk-response/string-body.html","searchKeys":["stringBody","val stringBody: String?","com.rnett.krosstalk.client.plugin.InternalKrosstalkResponse.stringBody"]},{"name":"val type: KClass<*>","description":"com.rnett.krosstalk.client.WrongHeadersTypeException.type","location":"core/krosstalk-client/-krosstalk -client/com.rnett.krosstalk.client/-wrong-headers-type-exception/type.html","searchKeys":["type","val type: KClass<*>","com.rnett.krosstalk.client.WrongHeadersTypeException.type"]},{"name":"abstract class KtorServerAuth<T : Any>(authName: String?) : KtorServerScope<T> ","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/index.html","searchKeys":["KtorServerAuth","abstract class KtorServerAuth<T : Any>(authName: String?) : KtorServerScope<T> ","com.rnett.krosstalk.ktor.server.KtorServerAuth"]},{"name":"abstract class KtorServerBasicAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","description":"com.rnett.krosstalk.ktor.server.KtorServerBasicAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-basic-auth/index.html","searchKeys":["KtorServerBasicAuth","abstract class KtorServerBasicAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","com.rnett.krosstalk.ktor.server.KtorServerBasicAuth"]},{"name":"abstract class KtorServerDigestAuth<T : Principal>(authName: String?) : KtorServerAuth<DigestCredential> ","description":"com.rnett.krosstalk.ktor.server.KtorServerDigestAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-digest-auth/index.html","searchKeys":["KtorServerDigestAuth","abstract class KtorServerDigestAuth<T : Principal>(authName: String?) : KtorServerAuth<DigestCredential> ","com.rnett.krosstalk.ktor.server.KtorServerDigestAuth"]},{"name":"abstract class KtorServerFormAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","description":"com.rnett.krosstalk.ktor.server.KtorServerFormAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-form-auth/index.html","searchKeys":["KtorServerFormAuth","abstract class KtorServerFormAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","com.rnett.krosstalk.ktor.server.KtorServerFormAuth"]},{"name":"abstract class KtorServerOAuthAuth(authName: String?) : KtorServerPrincipalAuth<OAuthAccessTokenResponse> ","description":"com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-o-auth-auth/index.html","searchKeys":["KtorServerOAuthAuth","abstract class KtorServerOAuthAuth(authName: String?) : KtorServerPrincipalAuth<OAuthAccessTokenResponse> ","com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth"]},{"name":"abstract class KtorServerPrincipalAuth<T : Principal>(authName: String?) : KtorServerAuth<T> ","description":"com.rnett.krosstalk.ktor.server.KtorServerPrincipalAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-principal-auth/index.html","searchKeys":["KtorServerPrincipalAuth","abstract class KtorServerPrincipalAuth<T : Principal>(authName: String?) : KtorServerAuth<T> ","com.rnett.krosstalk.ktor.server.KtorServerPrincipalAuth"]},{"name":"abstract fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth.configureAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/configure-auth.html","searchKeys":["configureAuth","abstract fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.KtorServerAuth.configureAuth"]},{"name":"abstract fun BasicAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.KtorServerBasicAuth.configure","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-basic-auth/configure.html","searchKeys":["configure","abstract fun BasicAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.KtorServerBasicAuth.configure"]},{"name":"abstract fun DigestAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.configure","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-digest-auth/configure.html","searchKeys":["configure","abstract fun DigestAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.configure"]},{"name":"abstract fun FormAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.KtorServerFormAuth.configure","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-form-auth/configure.html","searchKeys":["configure","abstract fun FormAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.KtorServerFormAuth.configure"]},{"name":"abstract fun OAuthAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth.configure","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-o-auth-auth/configure.html","searchKeys":["configure","abstract fun OAuthAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth.configure"]},{"name":"abstract fun getData(call: ApplicationCall): S?","description":"com.rnett.krosstalk.ktor.server.KtorServerScope.getData","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/get-data.html","searchKeys":["getData","abstract fun getData(call: ApplicationCall): S?","com.rnett.krosstalk.ktor.server.KtorServerScope.getData"]},{"name":"abstract fun getValue(headers: Headers): T?","description":"com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getValue","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-header-scope/get-value.html","searchKeys":["getValue","abstract fun getValue(headers: Headers): T?","com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getValue"]},{"name":"abstract override val server: KtorServer","description":"com.rnett.krosstalk.ktor.server.KtorKrosstalkServer.server","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-krosstalk-server/server.html","searchKeys":["server","abstract override val server: KtorServer","com.rnett.krosstalk.ktor.server.KtorKrosstalkServer.server"]},{"name":"fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(application: Application)","description":"com.rnett.krosstalk.ktor.server.defineKtor","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/define-ktor.html","searchKeys":["defineKtor","fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(application: Application)","com.rnett.krosstalk.ktor.server.defineKtor"]},{"name":"fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(route: Route)","description":"com.rnett.krosstalk.ktor.server.defineKtor","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/define-ktor.html","searchKeys":["defineKtor","fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(route: Route)","com.rnett.krosstalk.ktor.server.defineKtor"]},{"name":"fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> define(base: Route, krosstalk: K)","description":"com.rnett.krosstalk.ktor.server.KtorServer.define","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server/define.html","searchKeys":["define","fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> define(base: Route, krosstalk: K)","com.rnett.krosstalk.ktor.server.KtorServer.define"]},{"name":"fun KtorServerAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth.KtorServerAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/-ktor-server-auth.html","searchKeys":["KtorServerAuth","fun KtorServerAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.KtorServerAuth.KtorServerAuth"]},{"name":"fun KtorServerBasicAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.KtorServerBasicAuth.KtorServerBasicAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-basic-auth/-ktor-server-basic-auth.html","searchKeys":["KtorServerBasicAuth","fun KtorServerBasicAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.KtorServerBasicAuth.KtorServerBasicAuth"]},{"name":"fun KtorServerDigestAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.KtorServerDigestAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-digest-auth/-ktor-server-digest-auth.html","searchKeys":["KtorServerDigestAuth","fun KtorServerDigestAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.KtorServerDigestAuth"]},{"name":"fun KtorServerFormAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.KtorServerFormAuth.KtorServerFormAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-form-auth/-ktor-server-form-auth.html","searchKeys":["KtorServerFormAuth","fun KtorServerFormAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.KtorServerFormAuth.KtorServerFormAuth"]},{"name":"fun KtorServerOAuthAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth.KtorServerOAuthAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-o-auth-auth/-ktor-server-o-auth-auth.html","searchKeys":["KtorServerOAuthAuth","fun KtorServerOAuthAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth.KtorServerOAuthAuth"]},{"name":"fun KtorServerPrincipalAuth(authName: String?)","description":"com.rnett.krosstalk.ktor.server.KtorServerPrincipalAuth.KtorServerPrincipalAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-principal-auth/-ktor-server-principal-auth.html","searchKeys":["KtorServerPrincipalAuth","fun KtorServerPrincipalAuth(authName: String?)","com.rnett.krosstalk.ktor.server.KtorServerPrincipalAuth.KtorServerPrincipalAuth"]},{"name":"fun randomAuthName(): String","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth.Companion.randomAuthName","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/-companion/random-auth-name.html","searchKeys":["randomAuthName","fun randomAuthName(): String","com.rnett.krosstalk.ktor.server.KtorServerAuth.Companion.randomAuthName"]},{"name":"interface KtorKrosstalkServer : KrosstalkServer<KtorServerScope<*>> ","description":"com.rnett.krosstalk.ktor.server.KtorKrosstalkServer","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-krosstalk-server/index.html","searchKeys":["KtorKrosstalkServer","interface KtorKrosstalkServer : KrosstalkServer<KtorServerScope<*>> ","com.rnett.krosstalk.ktor.server.KtorKrosstalkServer"]},{"name":"interface KtorServerHeaderScope<T : Any> : KtorServerScope<T> ","description":"com.rnett.krosstalk.ktor.server.KtorServerHeaderScope","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-header-scope/index.html","searchKeys":["KtorServerHeaderScope","interface KtorServerHeaderScope<T : Any> : KtorServerScope<T> ","com.rnett.krosstalk.ktor.server.KtorServerHeaderScope"]},{"name":"interface KtorServerScope<S : Any> : ServerScope<S> ","description":"com.rnett.krosstalk.ktor.server.KtorServerScope","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/index.html","searchKeys":["KtorServerScope","interface KtorServerScope<S : Any> : ServerScope<S> ","com.rnett.krosstalk.ktor.server.KtorServerScope"]},{"name":"object Companion","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth.Companion","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/-companion/index.html","searchKeys":["Companion","object Companion","com.rnett.krosstalk.ktor.server.KtorServerAuth.Companion"]},{"name":"object KtorServer : ServerHandler<KtorServerScope<*>> ","description":"com.rnett.krosstalk.ktor.server.KtorServer","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server/index.html","searchKeys":["KtorServer","object KtorServer : ServerHandler<KtorServerScope<*>> ","com.rnett.krosstalk.ktor.server.KtorServer"]},{"name":"open fun Application.configureApplication()","description":"com.rnett.krosstalk.ktor.server.KtorServerScope.configureApplication","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/configure-application.html","searchKeys":["configureApplication","open fun Application.configureApplication()","com.rnett.krosstalk.ktor.server.KtorServerScope.configureApplication"]},{"name":"open fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","description":"com.rnett.krosstalk.ktor.server.KtorServerScope.wrapEndpoint","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/wrap-endpoint.html","searchKeys":["wrapEndpoint","open fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","com.rnett.krosstalk.ktor.server.KtorServerScope.wrapEndpoint"]},{"name":"open override fun Application.configureApplication()","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth.configureApplication","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/configure-application.html","searchKeys":["configureApplication","open override fun Application.configureApplication()","com.rnett.krosstalk.ktor.server.KtorServerAuth.configureApplication"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.KtorServerBasicAuth.configureAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-basic-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.KtorServerBasicAuth.configureAuth"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.configureAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-digest-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.configureAuth"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.KtorServerFormAuth.configureAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-form-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.KtorServerFormAuth.configureAuth"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth.configureAuth","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-o-auth-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.KtorServerOAuthAuth.configureAuth"]},{"name":"open override fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth.wrapEndpoint","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/wrap-endpoint.html","searchKeys":["wrapEndpoint","open override fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","com.rnett.krosstalk.ktor.server.KtorServerAuth.wrapEndpoint"]},{"name":"open override fun getData(call: ApplicationCall): DigestCredential?","description":"com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.getData","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-digest-auth/get-data.html","searchKeys":["getData","open override fun getData(call: ApplicationCall): DigestCredential?","com.rnett.krosstalk.ktor.server.KtorServerDigestAuth.getData"]},{"name":"open override fun getData(call: ApplicationCall): T?","description":"com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getData","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-header-scope/get-data.html","searchKeys":["getData","open override fun getData(call: ApplicationCall): T?","com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getData"]},{"name":"open override fun getData(call: ApplicationCall): T?","description":"com.rnett.krosstalk.ktor.server.KtorServerPrincipalAuth.getData","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-principal-auth/get-data.html","searchKeys":["getData","open override fun getData(call: ApplicationCall): T?","com.rnett.krosstalk.ktor.server.KtorServerPrincipalAuth.getData"]},{"name":"val authName: String?","description":"com.rnett.krosstalk.ktor.server.KtorServerAuth.authName","location":"ktor/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-auth/auth-name.html","searchKeys":["authName","val authName: String?","com.rnett.krosstalk.ktor.server.KtorServerAuth.authName"]}]