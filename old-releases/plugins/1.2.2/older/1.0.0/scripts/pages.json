[{"name":"abstract fun HeadersBuilder.headers(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.headers","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-header-scope/headers.html","searchKeys":["headers","abstract fun HeadersBuilder.headers(data: D)","com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.headers"]},{"name":"abstract override val client: KtorClient","description":"com.rnett.krosstalk.ktor.client.KtorKrosstalkClient.client","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-krosstalk-client/client.html","searchKeys":["client","abstract override val client: KtorClient","com.rnett.krosstalk.ktor.client.KtorKrosstalkClient.client"]},{"name":"class KtorClient(baseClient: HttpClient, baseRequest: HttpRequestBuilder.() -> Unit) : ClientHandler<KtorClientScope<*>> ","description":"com.rnett.krosstalk.ktor.client.KtorClient","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/index.html","searchKeys":["KtorClient","class KtorClient(baseClient: HttpClient, baseRequest: HttpRequestBuilder.() -> Unit) : ClientHandler<KtorClientScope<*>> ","com.rnett.krosstalk.ktor.client.KtorClient"]},{"name":"fun KtorClient(baseClient: HttpClient = HttpClient(), baseRequest: HttpRequestBuilder.() -> Unit = {})","description":"com.rnett.krosstalk.ktor.client.KtorClient.KtorClient","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/-ktor-client.html","searchKeys":["KtorClient","fun KtorClient(baseClient: HttpClient = HttpClient(), baseRequest: HttpRequestBuilder.() -> Unit = {})","com.rnett.krosstalk.ktor.client.KtorClient.KtorClient"]},{"name":"fun fun interface KtorClientHeaderScope<D> : KtorClientScope<D> ","description":"com.rnett.krosstalk.ktor.client.KtorClientHeaderScope","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-header-scope/index.html","searchKeys":["KtorClientHeaderScope","fun fun interface KtorClientHeaderScope<D> : KtorClientScope<D> ","com.rnett.krosstalk.ktor.client.KtorClientHeaderScope"]},{"name":"interface KtorClientScope<in D> : ClientScope<D> ","description":"com.rnett.krosstalk.ktor.client.KtorClientScope","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-scope/index.html","searchKeys":["KtorClientScope","interface KtorClientScope<in D> : ClientScope<D> ","com.rnett.krosstalk.ktor.client.KtorClientScope"]},{"name":"interface KtorKrosstalkClient : KrosstalkClient<KtorClientScope<*>> ","description":"com.rnett.krosstalk.ktor.client.KtorKrosstalkClient","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-krosstalk-client/index.html","searchKeys":["KtorKrosstalkClient","interface KtorKrosstalkClient : KrosstalkClient<KtorClientScope<*>> ","com.rnett.krosstalk.ktor.client.KtorKrosstalkClient"]},{"name":"open fun HttpClientConfig<*>.configureClient(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientScope.configureClient","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-scope/configure-client.html","searchKeys":["configureClient","open fun HttpClientConfig<*>.configureClient(data: D)","com.rnett.krosstalk.ktor.client.KtorClientScope.configureClient"]},{"name":"open fun HttpRequestBuilder.configureRequest(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientScope.configureRequest","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-scope/configure-request.html","searchKeys":["configureRequest","open fun HttpRequestBuilder.configureRequest(data: D)","com.rnett.krosstalk.ktor.client.KtorClientScope.configureRequest"]},{"name":"open override fun HttpRequestBuilder.configureRequest(data: D)","description":"com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.configureRequest","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client-header-scope/configure-request.html","searchKeys":["configureRequest","open override fun HttpRequestBuilder.configureRequest(data: D)","com.rnett.krosstalk.ktor.client.KtorClientHeaderScope.configureRequest"]},{"name":"open suspend override fun sendKrosstalkRequest(url: String, httpMethod: String, contentType: String, additionalHeaders: Headers, body: ByteArray?, scopes: List<AppliedClientScope<KtorClientScope<*>, *>>): InternalKrosstalkResponse","description":"com.rnett.krosstalk.ktor.client.KtorClient.sendKrosstalkRequest","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/send-krosstalk-request.html","searchKeys":["sendKrosstalkRequest","open suspend override fun sendKrosstalkRequest(url: String, httpMethod: String, contentType: String, additionalHeaders: Headers, body: ByteArray?, scopes: List<AppliedClientScope<KtorClientScope<*>, *>>): InternalKrosstalkResponse","com.rnett.krosstalk.ktor.client.KtorClient.sendKrosstalkRequest"]},{"name":"val baseClient: HttpClient","description":"com.rnett.krosstalk.ktor.client.KtorClient.baseClient","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/base-client.html","searchKeys":["baseClient","val baseClient: HttpClient","com.rnett.krosstalk.ktor.client.KtorClient.baseClient"]},{"name":"val baseRequest: HttpRequestBuilder.() -> Unit","description":"com.rnett.krosstalk.ktor.client.KtorClient.baseRequest","location":"ktor-client/krosstalk-ktor-client/-krosstalk -ktor -client/com.rnett.krosstalk.ktor.client/-ktor-client/base-request.html","searchKeys":["baseRequest","val baseRequest: HttpRequestBuilder.() -> Unit","com.rnett.krosstalk.ktor.client.KtorClient.baseRequest"]},{"name":"abstract fun getData(call: ApplicationCall): S?","description":"com.rnett.krosstalk.ktor.server.KtorServerScope.getData","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/get-data.html","searchKeys":["getData","abstract fun getData(call: ApplicationCall): S?","com.rnett.krosstalk.ktor.server.KtorServerScope.getData"]},{"name":"abstract fun getValue(headers: Headers): T?","description":"com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getValue","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-header-scope/get-value.html","searchKeys":["getValue","abstract fun getValue(headers: Headers): T?","com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getValue"]},{"name":"abstract override val server: KtorServer","description":"com.rnett.krosstalk.ktor.server.KtorKrosstalkServer.server","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-krosstalk-server/server.html","searchKeys":["server","abstract override val server: KtorServer","com.rnett.krosstalk.ktor.server.KtorKrosstalkServer.server"]},{"name":"fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(application: Application)","description":"com.rnett.krosstalk.ktor.server.defineKtor","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/define-ktor.html","searchKeys":["defineKtor","fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(application: Application)","com.rnett.krosstalk.ktor.server.defineKtor"]},{"name":"fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(route: Route)","description":"com.rnett.krosstalk.ktor.server.defineKtor","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/define-ktor.html","searchKeys":["defineKtor","fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> K.defineKtor(route: Route)","com.rnett.krosstalk.ktor.server.defineKtor"]},{"name":"fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> define(base: Route, krosstalk: K)","description":"com.rnett.krosstalk.ktor.server.KtorServer.define","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server/define.html","searchKeys":["define","fun <K : Krosstalk, KrosstalkServer<KtorServerScope<*>>> define(base: Route, krosstalk: K)","com.rnett.krosstalk.ktor.server.KtorServer.define"]},{"name":"interface KtorKrosstalkServer : KrosstalkServer<KtorServerScope<*>> ","description":"com.rnett.krosstalk.ktor.server.KtorKrosstalkServer","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-krosstalk-server/index.html","searchKeys":["KtorKrosstalkServer","interface KtorKrosstalkServer : KrosstalkServer<KtorServerScope<*>> ","com.rnett.krosstalk.ktor.server.KtorKrosstalkServer"]},{"name":"interface KtorServerHeaderScope<T : Any> : KtorServerScope<T> ","description":"com.rnett.krosstalk.ktor.server.KtorServerHeaderScope","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-header-scope/index.html","searchKeys":["KtorServerHeaderScope","interface KtorServerHeaderScope<T : Any> : KtorServerScope<T> ","com.rnett.krosstalk.ktor.server.KtorServerHeaderScope"]},{"name":"interface KtorServerScope<S : Any> : ServerScope<S> ","description":"com.rnett.krosstalk.ktor.server.KtorServerScope","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/index.html","searchKeys":["KtorServerScope","interface KtorServerScope<S : Any> : ServerScope<S> ","com.rnett.krosstalk.ktor.server.KtorServerScope"]},{"name":"object KtorServer : ServerHandler<KtorServerScope<*>> ","description":"com.rnett.krosstalk.ktor.server.KtorServer","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server/index.html","searchKeys":["KtorServer","object KtorServer : ServerHandler<KtorServerScope<*>> ","com.rnett.krosstalk.ktor.server.KtorServer"]},{"name":"open fun Application.configureApplication()","description":"com.rnett.krosstalk.ktor.server.KtorServerScope.configureApplication","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/configure-application.html","searchKeys":["configureApplication","open fun Application.configureApplication()","com.rnett.krosstalk.ktor.server.KtorServerScope.configureApplication"]},{"name":"open fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","description":"com.rnett.krosstalk.ktor.server.KtorServerScope.wrapEndpoint","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-scope/wrap-endpoint.html","searchKeys":["wrapEndpoint","open fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","com.rnett.krosstalk.ktor.server.KtorServerScope.wrapEndpoint"]},{"name":"open override fun getData(call: ApplicationCall): T?","description":"com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getData","location":"ktor-server/krosstalk-ktor-server/-krosstalk -ktor -server/com.rnett.krosstalk.ktor.server/-ktor-server-header-scope/get-data.html","searchKeys":["getData","open override fun getData(call: ApplicationCall): T?","com.rnett.krosstalk.ktor.server.KtorServerHeaderScope.getData"]},{"name":"abstract class KtorServerAuth<T : Any>(authName: String?) : KtorServerScope<T> ","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/index.html","searchKeys":["KtorServerAuth","abstract class KtorServerAuth<T : Any>(authName: String?) : KtorServerScope<T> ","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth"]},{"name":"abstract class KtorServerBasicAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-basic-auth/index.html","searchKeys":["KtorServerBasicAuth","abstract class KtorServerBasicAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth"]},{"name":"abstract class KtorServerDigestAuth<T : Principal>(authName: String?) : KtorServerAuth<DigestCredential> ","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-digest-auth/index.html","searchKeys":["KtorServerDigestAuth","abstract class KtorServerDigestAuth<T : Principal>(authName: String?) : KtorServerAuth<DigestCredential> ","com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth"]},{"name":"abstract class KtorServerFormAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-form-auth/index.html","searchKeys":["KtorServerFormAuth","abstract class KtorServerFormAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth"]},{"name":"abstract class KtorServerOAuthAuth(authName: String?) : KtorServerPrincipalAuth<OAuthAccessTokenResponse> ","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-o-auth-auth/index.html","searchKeys":["KtorServerOAuthAuth","abstract class KtorServerOAuthAuth(authName: String?) : KtorServerPrincipalAuth<OAuthAccessTokenResponse> ","com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth"]},{"name":"abstract class KtorServerPrincipalAuth<T : Principal>(authName: String?) : KtorServerAuth<T> ","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerPrincipalAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-principal-auth/index.html","searchKeys":["KtorServerPrincipalAuth","abstract class KtorServerPrincipalAuth<T : Principal>(authName: String?) : KtorServerAuth<T> ","com.rnett.krosstalk.ktor.server.auth.KtorServerPrincipalAuth"]},{"name":"abstract fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.configureAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/configure-auth.html","searchKeys":["configureAuth","abstract fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.configureAuth"]},{"name":"abstract fun BasicAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth.configure","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-basic-auth/configure.html","searchKeys":["configure","abstract fun BasicAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth.configure"]},{"name":"abstract fun DigestAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.configure","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-digest-auth/configure.html","searchKeys":["configure","abstract fun DigestAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.configure"]},{"name":"abstract fun FormAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth.configure","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-form-auth/configure.html","searchKeys":["configure","abstract fun FormAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth.configure"]},{"name":"abstract fun OAuthAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth.configure","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-o-auth-auth/configure.html","searchKeys":["configure","abstract fun OAuthAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth.configure"]},{"name":"fun KtorServerAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.KtorServerAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/-ktor-server-auth.html","searchKeys":["KtorServerAuth","fun KtorServerAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.KtorServerAuth"]},{"name":"fun KtorServerBasicAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth.KtorServerBasicAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-basic-auth/-ktor-server-basic-auth.html","searchKeys":["KtorServerBasicAuth","fun KtorServerBasicAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth.KtorServerBasicAuth"]},{"name":"fun KtorServerDigestAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.KtorServerDigestAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-digest-auth/-ktor-server-digest-auth.html","searchKeys":["KtorServerDigestAuth","fun KtorServerDigestAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.KtorServerDigestAuth"]},{"name":"fun KtorServerFormAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth.KtorServerFormAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-form-auth/-ktor-server-form-auth.html","searchKeys":["KtorServerFormAuth","fun KtorServerFormAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth.KtorServerFormAuth"]},{"name":"fun KtorServerOAuthAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth.KtorServerOAuthAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-o-auth-auth/-ktor-server-o-auth-auth.html","searchKeys":["KtorServerOAuthAuth","fun KtorServerOAuthAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth.KtorServerOAuthAuth"]},{"name":"fun KtorServerPrincipalAuth(authName: String?)","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerPrincipalAuth.KtorServerPrincipalAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-principal-auth/-ktor-server-principal-auth.html","searchKeys":["KtorServerPrincipalAuth","fun KtorServerPrincipalAuth(authName: String?)","com.rnett.krosstalk.ktor.server.auth.KtorServerPrincipalAuth.KtorServerPrincipalAuth"]},{"name":"fun randomAuthName(): String","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.Companion.randomAuthName","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/-companion/random-auth-name.html","searchKeys":["randomAuthName","fun randomAuthName(): String","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.Companion.randomAuthName"]},{"name":"object Companion","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.Companion","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/-companion/index.html","searchKeys":["Companion","object Companion","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.Companion"]},{"name":"open override fun Application.configureApplication()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.configureApplication","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/configure-application.html","searchKeys":["configureApplication","open override fun Application.configureApplication()","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.configureApplication"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth.configureAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-basic-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.auth.KtorServerBasicAuth.configureAuth"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.configureAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-digest-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.configureAuth"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth.configureAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-form-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.auth.KtorServerFormAuth.configureAuth"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth.configureAuth","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-o-auth-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.auth.KtorServerOAuthAuth.configureAuth"]},{"name":"open override fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.wrapEndpoint","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/wrap-endpoint.html","searchKeys":["wrapEndpoint","open override fun Route.wrapEndpoint(optional: Boolean, endpoint: Route.() -> Unit)","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.wrapEndpoint"]},{"name":"open override fun getData(call: ApplicationCall): DigestCredential?","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.getData","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-digest-auth/get-data.html","searchKeys":["getData","open override fun getData(call: ApplicationCall): DigestCredential?","com.rnett.krosstalk.ktor.server.auth.KtorServerDigestAuth.getData"]},{"name":"open override fun getData(call: ApplicationCall): T?","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerPrincipalAuth.getData","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-principal-auth/get-data.html","searchKeys":["getData","open override fun getData(call: ApplicationCall): T?","com.rnett.krosstalk.ktor.server.auth.KtorServerPrincipalAuth.getData"]},{"name":"val authName: String?","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.authName","location":"ktor-server/krosstalk-ktor-server-auth/-krosstalk -ktor -server -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-auth/auth-name.html","searchKeys":["authName","val authName: String?","com.rnett.krosstalk.ktor.server.auth.KtorServerAuth.authName"]},{"name":"abstract class KtorClientAuth<D> : KtorClientScope<D> ","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientAuth","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-auth/index.html","searchKeys":["KtorClientAuth","abstract class KtorClientAuth<D> : KtorClientScope<D> ","com.rnett.krosstalk.ktor.client.auth.KtorClientAuth"]},{"name":"abstract fun Auth.configureClientAuth(data: D)","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientAuth.configureClientAuth","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-auth/configure-client-auth.html","searchKeys":["configureClientAuth","abstract fun Auth.configureClientAuth(data: D)","com.rnett.krosstalk.ktor.client.auth.KtorClientAuth.configureClientAuth"]},{"name":"data class BasicCredentials(username: String, password: String)","description":"com.rnett.krosstalk.ktor.client.auth.BasicCredentials","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-basic-credentials/index.html","searchKeys":["BasicCredentials","data class BasicCredentials(username: String, password: String)","com.rnett.krosstalk.ktor.client.auth.BasicCredentials"]},{"name":"fun BasicCredentials(username: String, password: String)","description":"com.rnett.krosstalk.ktor.client.auth.BasicCredentials.BasicCredentials","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-basic-credentials/-basic-credentials.html","searchKeys":["BasicCredentials","fun BasicCredentials(username: String, password: String)","com.rnett.krosstalk.ktor.client.auth.BasicCredentials.BasicCredentials"]},{"name":"fun KtorClientAuth()","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientAuth.KtorClientAuth","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-auth/-ktor-client-auth.html","searchKeys":["KtorClientAuth","fun KtorClientAuth()","com.rnett.krosstalk.ktor.client.auth.KtorClientAuth.KtorClientAuth"]},{"name":"fun KtorClientBasicAuth(sendWithoutRequest: Boolean = true, realm: String? = null)","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.KtorClientBasicAuth","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-basic-auth/-ktor-client-basic-auth.html","searchKeys":["KtorClientBasicAuth","fun KtorClientBasicAuth(sendWithoutRequest: Boolean = true, realm: String? = null)","com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.KtorClientBasicAuth"]},{"name":"open class KtorClientBasicAuth(sendWithoutRequest: Boolean, realm: String?) : KtorClientAuth<BasicCredentials> ","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-basic-auth/index.html","searchKeys":["KtorClientBasicAuth","open class KtorClientBasicAuth(sendWithoutRequest: Boolean, realm: String?) : KtorClientAuth<BasicCredentials> ","com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth"]},{"name":"open override fun Auth.configureClientAuth(data: BasicCredentials)","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.configureClientAuth","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-basic-auth/configure-client-auth.html","searchKeys":["configureClientAuth","open override fun Auth.configureClientAuth(data: BasicCredentials)","com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.configureClientAuth"]},{"name":"open override fun HttpClientConfig<*>.configureClient(data: D)","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientAuth.configureClient","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-auth/configure-client.html","searchKeys":["configureClient","open override fun HttpClientConfig<*>.configureClient(data: D)","com.rnett.krosstalk.ktor.client.auth.KtorClientAuth.configureClient"]},{"name":"operator fun <T : KtorClientBasicAuth> T.invoke(username: String, password: String): ScopeInstance<T>","description":"com.rnett.krosstalk.ktor.client.auth.invoke","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/invoke.html","searchKeys":["invoke","operator fun <T : KtorClientBasicAuth> T.invoke(username: String, password: String): ScopeInstance<T>","com.rnett.krosstalk.ktor.client.auth.invoke"]},{"name":"val password: String","description":"com.rnett.krosstalk.ktor.client.auth.BasicCredentials.password","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-basic-credentials/password.html","searchKeys":["password","val password: String","com.rnett.krosstalk.ktor.client.auth.BasicCredentials.password"]},{"name":"val realm: String? = null","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.realm","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-basic-auth/realm.html","searchKeys":["realm","val realm: String? = null","com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.realm"]},{"name":"val sendWithoutRequest: Boolean = true","description":"com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.sendWithoutRequest","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-ktor-client-basic-auth/send-without-request.html","searchKeys":["sendWithoutRequest","val sendWithoutRequest: Boolean = true","com.rnett.krosstalk.ktor.client.auth.KtorClientBasicAuth.sendWithoutRequest"]},{"name":"val username: String","description":"com.rnett.krosstalk.ktor.client.auth.BasicCredentials.username","location":"ktor-client/krosstalk-ktor-client-auth/-krosstalk -ktor -client -auth/com.rnett.krosstalk.ktor.client.auth/-basic-credentials/username.html","searchKeys":["username","val username: String","com.rnett.krosstalk.ktor.client.auth.BasicCredentials.username"]},{"name":"data class KotlinxBinarySerializationHandler(format: BinaryFormat, contentType: String) : ArgumentSerializationHandler<ByteArray> ","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/index.html","searchKeys":["KotlinxBinarySerializationHandler","data class KotlinxBinarySerializationHandler(format: BinaryFormat, contentType: String) : ArgumentSerializationHandler<ByteArray> ","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler"]},{"name":"data class KotlinxBinarySerializer<T>(serializer: KSerializer<T>, format: BinaryFormat) : Serializer<T, ByteArray> ","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/index.html","searchKeys":["KotlinxBinarySerializer","data class KotlinxBinarySerializer<T>(serializer: KSerializer<T>, format: BinaryFormat) : Serializer<T, ByteArray> ","com.rnett.krosstalk.serialization.KotlinxBinarySerializer"]},{"name":"data class KotlinxJsonObjectSerializationHandler(format: Json) : BaseSerializationHandler<String> ","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/index.html","searchKeys":["KotlinxJsonObjectSerializationHandler","data class KotlinxJsonObjectSerializationHandler(format: Json) : BaseSerializationHandler<String> ","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler"]},{"name":"data class KotlinxStringSerializationHandler(format: StringFormat, contentType: String) : ArgumentSerializationHandler<String> ","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/index.html","searchKeys":["KotlinxStringSerializationHandler","data class KotlinxStringSerializationHandler(format: StringFormat, contentType: String) : ArgumentSerializationHandler<String> ","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler"]},{"name":"data class KotlinxStringSerializer<T>(serializer: KSerializer<T>, format: StringFormat) : Serializer<T, String> ","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/index.html","searchKeys":["KotlinxStringSerializer","data class KotlinxStringSerializer<T>(serializer: KSerializer<T>, format: StringFormat) : Serializer<T, String> ","com.rnett.krosstalk.serialization.KotlinxStringSerializer"]},{"name":"fun <T> KotlinxBinarySerializer(serializer: KSerializer<T>, format: BinaryFormat)","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.KotlinxBinarySerializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/-kotlinx-binary-serializer.html","searchKeys":["KotlinxBinarySerializer","fun <T> KotlinxBinarySerializer(serializer: KSerializer<T>, format: BinaryFormat)","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.KotlinxBinarySerializer"]},{"name":"fun <T> KotlinxStringSerializer(serializer: KSerializer<T>, format: StringFormat)","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.KotlinxStringSerializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/-kotlinx-string-serializer.html","searchKeys":["KotlinxStringSerializer","fun <T> KotlinxStringSerializer(serializer: KSerializer<T>, format: StringFormat)","com.rnett.krosstalk.serialization.KotlinxStringSerializer.KotlinxStringSerializer"]},{"name":"fun KotlinxBinarySerializationHandler(format: BinaryFormat, contentType: String = byteArrayContentType)","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.KotlinxBinarySerializationHandler","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/-kotlinx-binary-serialization-handler.html","searchKeys":["KotlinxBinarySerializationHandler","fun KotlinxBinarySerializationHandler(format: BinaryFormat, contentType: String = byteArrayContentType)","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.KotlinxBinarySerializationHandler"]},{"name":"fun KotlinxJsonObjectSerializationHandler(format: Json)","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.KotlinxJsonObjectSerializationHandler","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/-kotlinx-json-object-serialization-handler.html","searchKeys":["KotlinxJsonObjectSerializationHandler","fun KotlinxJsonObjectSerializationHandler(format: Json)","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.KotlinxJsonObjectSerializationHandler"]},{"name":"fun KotlinxStringSerializationHandler(format: StringFormat, contentType: String = if(format is Json) \"application/json\" else stringContentType)","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.KotlinxStringSerializationHandler","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/-kotlinx-string-serialization-handler.html","searchKeys":["KotlinxStringSerializationHandler","fun KotlinxStringSerializationHandler(format: StringFormat, contentType: String = if(format is Json) \"application/json\" else stringContentType)","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.KotlinxStringSerializationHandler"]},{"name":"open override fun deserialize(data: ByteArray): T","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.deserialize","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(data: ByteArray): T","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.deserialize"]},{"name":"open override fun deserialize(data: String): T","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.deserialize","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(data: String): T","com.rnett.krosstalk.serialization.KotlinxStringSerializer.deserialize"]},{"name":"open override fun deserializeArguments(arguments: ByteArray): Map<String, ByteArray>","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.deserializeArguments","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","open override fun deserializeArguments(arguments: ByteArray): Map<String, ByteArray>","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.deserializeArguments"]},{"name":"open override fun deserializeArguments(arguments: String): Map<String, String>","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.deserializeArguments","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","open override fun deserializeArguments(arguments: String): Map<String, String>","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.deserializeArguments"]},{"name":"open override fun deserializeArguments(arguments: String, serializers: ArgumentSerializers<String>): Map<String, *>","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.deserializeArguments","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/deserialize-arguments.html","searchKeys":["deserializeArguments","open override fun deserializeArguments(arguments: String, serializers: ArgumentSerializers<String>): Map<String, *>","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.deserializeArguments"]},{"name":"open override fun getSerializer(type: KType): KotlinxBinarySerializer<*>","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.getSerializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/get-serializer.html","searchKeys":["getSerializer","open override fun getSerializer(type: KType): KotlinxBinarySerializer<*>","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.getSerializer"]},{"name":"open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.getSerializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/get-serializer.html","searchKeys":["getSerializer","open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.getSerializer"]},{"name":"open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.getSerializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/get-serializer.html","searchKeys":["getSerializer","open override fun getSerializer(type: KType): KotlinxStringSerializer<*>","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.getSerializer"]},{"name":"open override fun serialize(data: T): ByteArray","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serialize","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(data: T): ByteArray","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serialize"]},{"name":"open override fun serialize(data: T): String","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.serialize","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(data: T): String","com.rnett.krosstalk.serialization.KotlinxStringSerializer.serialize"]},{"name":"open override fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<String>): String","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.serializeArguments","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","open override fun serializeArguments(arguments: Map<String, *>, serializers: ArgumentSerializers<String>): String","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.serializeArguments"]},{"name":"open override fun serializeArguments(serializedArguments: Map<String, ByteArray>): ByteArray","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.serializeArguments","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","open override fun serializeArguments(serializedArguments: Map<String, ByteArray>): ByteArray","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.serializeArguments"]},{"name":"open override fun serializeArguments(serializedArguments: Map<String, String>): String","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.serializeArguments","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/serialize-arguments.html","searchKeys":["serializeArguments","open override fun serializeArguments(serializedArguments: Map<String, String>): String","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.serializeArguments"]},{"name":"open override val contentType: String","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.contentType","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/content-type.html","searchKeys":["contentType","open override val contentType: String","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.contentType"]},{"name":"open override val contentType: String","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.contentType","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/content-type.html","searchKeys":["contentType","open override val contentType: String","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.contentType"]},{"name":"open override val contentType: String","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.contentType","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/content-type.html","searchKeys":["contentType","open override val contentType: String","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.contentType"]},{"name":"val format: BinaryFormat","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.format","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serialization-handler/format.html","searchKeys":["format","val format: BinaryFormat","com.rnett.krosstalk.serialization.KotlinxBinarySerializationHandler.format"]},{"name":"val format: BinaryFormat","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.format","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/format.html","searchKeys":["format","val format: BinaryFormat","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.format"]},{"name":"val format: Json","description":"com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.format","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-json-object-serialization-handler/format.html","searchKeys":["format","val format: Json","com.rnett.krosstalk.serialization.KotlinxJsonObjectSerializationHandler.format"]},{"name":"val format: StringFormat","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.format","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serialization-handler/format.html","searchKeys":["format","val format: StringFormat","com.rnett.krosstalk.serialization.KotlinxStringSerializationHandler.format"]},{"name":"val format: StringFormat","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.format","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/format.html","searchKeys":["format","val format: StringFormat","com.rnett.krosstalk.serialization.KotlinxStringSerializer.format"]},{"name":"val serializer: KSerializer<T>","description":"com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-binary-serializer/serializer.html","searchKeys":["serializer","val serializer: KSerializer<T>","com.rnett.krosstalk.serialization.KotlinxBinarySerializer.serializer"]},{"name":"val serializer: KSerializer<T>","description":"com.rnett.krosstalk.serialization.KotlinxStringSerializer.serializer","location":"krosstalk-kotlinx-serialization/-krosstalk -kotlinx-serialization/com.rnett.krosstalk.serialization/-kotlinx-string-serializer/serializer.html","searchKeys":["serializer","val serializer: KSerializer<T>","com.rnett.krosstalk.serialization.KotlinxStringSerializer.serializer"]},{"name":"abstract class KtorServerJWTAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth","location":"ktor-server/krosstalk-ktor-server-auth-jwt/-krosstalk -ktor -server -j-w-t -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-j-w-t-auth/index.html","searchKeys":["KtorServerJWTAuth","abstract class KtorServerJWTAuth<T : Principal>(authName: String?) : KtorServerPrincipalAuth<T> ","com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth"]},{"name":"abstract fun JWTAuthenticationProvider.Configuration.configure()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth.configure","location":"ktor-server/krosstalk-ktor-server-auth-jwt/-krosstalk -ktor -server -j-w-t -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-j-w-t-auth/configure.html","searchKeys":["configure","abstract fun JWTAuthenticationProvider.Configuration.configure()","com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth.configure"]},{"name":"fun KtorServerJWTAuth(authName: String? = randomAuthName())","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth.KtorServerJWTAuth","location":"ktor-server/krosstalk-ktor-server-auth-jwt/-krosstalk -ktor -server -j-w-t -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-j-w-t-auth/-ktor-server-j-w-t-auth.html","searchKeys":["KtorServerJWTAuth","fun KtorServerJWTAuth(authName: String? = randomAuthName())","com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth.KtorServerJWTAuth"]},{"name":"open override fun Authentication.Configuration.configureAuth()","description":"com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth.configureAuth","location":"ktor-server/krosstalk-ktor-server-auth-jwt/-krosstalk -ktor -server -j-w-t -auth/com.rnett.krosstalk.ktor.server.auth/-ktor-server-j-w-t-auth/configure-auth.html","searchKeys":["configureAuth","open override fun Authentication.Configuration.configureAuth()","com.rnett.krosstalk.ktor.server.auth.KtorServerJWTAuth.configureAuth"]}]